(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{543:function(t,n,e){"use strict";e.r(n);var a=e(2),s=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"flutter入门"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flutter入门"}},[t._v("#")]),t._v(" Flutter入门")]),t._v(" "),n("h2",{attrs:{id:"环境搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境搭建"}},[t._v("#")]),t._v(" 环境搭建")]),t._v(" "),n("h3",{attrs:{id:"安装homebrew"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装homebrew"}},[t._v("#")]),t._v(" 安装Homebrew")]),t._v(" "),n("p",[t._v("配置XCode插件时需要使用brew进行安装")]),t._v(" "),n("p",[t._v("命令行运行以下代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\n$ /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n\n')])])]),n("p",[t._v("检查Homebrew是否安装成功")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$ brew -v\n\n")])])]),n("p",[t._v("常用brew命令")]),t._v(" "),n("p",[t._v("https://juejin.cn/post/6844903993211109383")]),t._v(" "),n("h3",{attrs:{id:"安装java环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装java环境"}},[t._v("#")]),t._v(" 安装JAVA环境")]),t._v(" "),n("p",[t._v("下载地址：https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html")]),t._v(" "),n("p",[t._v("查看java版本：java -version")]),t._v(" "),n("h3",{attrs:{id:"安装flutter-sdk"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装flutter-sdk"}},[t._v("#")]),t._v(" 安装Flutter SDK")]),t._v(" "),n("p",[t._v("下载SDK：https://flutter.dev/docs/get-started/install/macos\n将sdk解压到根目录")]),t._v(" "),n("h3",{attrs:{id:"配置环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置环境变量"}},[t._v("#")]),t._v(" 配置环境变量")]),t._v(" "),n("p",[t._v("打开配置文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" ~/.bash_profile\n\n")])])]),n("p",[t._v("新增下面两行")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FLUTTER_HOME")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/fvm/versions/2.10.3\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FLUTTER_HOME")]),t._v("/bin\n")])])]),n("p",[t._v("重载配置")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$ source ~/.bash_profile\n\n")])])]),n("p",[t._v("检查配置是否生效")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$ flutter -h\n\n")])])]),n("p",[t._v("检查flutter环境")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$ flutter doctor\n\n")])])]),n("p",[t._v("如果你没有安装Android Studio前面会是叉叉，另外还有一个是提示没有安装证书的，可运行下面命令行")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$ flutter doctor --android-licenses\n\n")])])]),n("p",[t._v("遇到提示，全部选Y即可")]),t._v(" "),n("h3",{attrs:{id:"安装android-studio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装android-studio"}},[t._v("#")]),t._v(" 安装Android Studio")]),t._v(" "),n("p",[t._v("下载地址：https://developer.android.com/studio\n打开编辑器偏好设置，选择Plugins，搜索并安装flutter插件")]),t._v(" "),n("p",[t._v("安装完成，重启Android Studio")]),t._v(" "),n("h3",{attrs:{id:"新建flutter项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新建flutter项目"}},[t._v("#")]),t._v(" 新建Flutter项目")]),t._v(" "),n("h4",{attrs:{id:"使用android-studio新建项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用android-studio新建项目"}},[t._v("#")]),t._v(" 使用Android Studio新建项目")]),t._v(" "),n("h4",{attrs:{id:"使用命令行创建项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用命令行创建项目"}},[t._v("#")]),t._v(" 使用命令行创建项目")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$ flutter create flutter_shop\n\n")])])]),n("h3",{attrs:{id:"安装avd模拟器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装avd模拟器"}},[t._v("#")]),t._v(" 安装AVD模拟器")]),t._v(" "),n("p",[t._v("点击Tools，选择AVD Manager")]),t._v(" "),n("p",[t._v("点击左下角 Create Virtual Device")]),t._v(" "),n("p",[t._v("选择Nexus 5X，点Next")]),t._v(" "),n("p",[t._v("选择第一个下载")]),t._v(" "),n("p",[t._v("下载完毕，点Finish")]),t._v(" "),n("h3",{attrs:{id:"运行flutter项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行flutter项目"}},[t._v("#")]),t._v(" 运行Flutter项目")]),t._v(" "),n("p",[t._v("运行模拟器")]),t._v(" "),n("p",[t._v("运行Debug模式")]),t._v(" "),n("h3",{attrs:{id:"写一个hello-world"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#写一个hello-world"}},[t._v("#")]),t._v(" 写一个Hello World")]),t._v(" "),n("p",[t._v("打开lib下面的main.dart删掉里面的代码，写入以下代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nimport 'package:flutter/material.dart';\n\n//主函数（入口函数）\n\nvoid main() =>runApp(MyApp());\n\n// 声明MyApp类\n\nclass MyApp extends StatelessWidget{\n\n  //重写build方法\n\n  @override\n\n  Widget build(BuildContext context){\n\n    //返回一个Material风格的组件\n\n   return MaterialApp(\n\n      title:'Welcome to Flutter',\n\n      home:Scaffold(\n\n        //创建一个Bar，并添加文本\n\n        appBar:AppBar(\n\n          title:Text('Welcome to Flutter'),\n\n        ),\n\n        //在主体的中间区域，添加一个hello world 的文本\n\n        body:Center(\n\n          child:Text('Hello World'),\n\n        ),\n\n      ),\n\n    );\n\n  }\n\n}\n\n")])])]),n("h2",{attrs:{id:"基本组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本组件"}},[t._v("#")]),t._v(" 基本组件")]),t._v(" "),n("h3",{attrs:{id:"text组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#text组件"}},[t._v("#")]),t._v(" Text组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n// 只保留了核心代码，省略了部分代码\n\nbody: Center(\n\n  child: Text(\n\n    '这是超出一行的文字，这是超出一行的文字，这是超出一行的文字，这是超出一行的文字，这是超出一行的文字，这是超出一行的文字，这是超出一行的文字，这是超出一行的文字，',\n\n    textAlign: TextAlign.left,\n\n    maxLines: 1,\n\n    overflow: TextOverflow.ellipsis,\n\n    style: TextStyle(\n\n      fontSize: 25,\n\n      color: Color.fromARGB(255, 255, 125, 125),\n\n      decoration: TextDecoration.underline,\n\n      decorationStyle: TextDecorationStyle.solid\n\n    ),\n\n  ),\n\n)\n\n")])])]),n("h4",{attrs:{id:"textalign属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#textalign属性"}},[t._v("#")]),t._v(" textAlign属性")]),t._v(" "),n("p",[t._v("textAlign属性就是文本的对齐方式，它的属性值有如下几个：")]),t._v(" "),n("p",[t._v("center: 文本以居中形式对齐,这个也算比较常用的了。\nleft:左对齐，经常使用，让文本居左进行对齐，效果和start一样。\nright :右对齐，使用频率也不算高。\nstart:以开始位置进行对齐，类似于左对齐。\nend: 以为本结尾处进行对齐，不常用。有点类似右对齐。")]),t._v(" "),n("h4",{attrs:{id:"maxlines属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maxlines属性"}},[t._v("#")]),t._v(" maxLines属性")]),t._v(" "),n("p",[t._v("设置最多显示的行数")]),t._v(" "),n("h4",{attrs:{id:"overflow属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overflow属性"}},[t._v("#")]),t._v(" overflow属性")]),t._v(" "),n("p",[t._v("overflow属性是用来设置文本溢出时，如何处理,它有下面几个常用的值供我们选择。")]),t._v(" "),n("p",[t._v("clip：直接切断，剩下的文字就没有了，感觉不太友好，体验性不好。\nellipsis:在后边显示省略号，体验性较好，这个在工作中经常使用。\nfade: 溢出的部分会进行一个渐变消失的效果，当然是上线的渐变，不是左右的哦。")]),t._v(" "),n("h4",{attrs:{id:"style属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#style属性"}},[t._v("#")]),t._v(" style属性")]),t._v(" "),n("p",[t._v("文档地址：https://api.flutter.dev/flutter/painting/TextStyle-class.html")]),t._v(" "),n("h3",{attrs:{id:"container组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#container组件"}},[t._v("#")]),t._v(" Container组件")]),t._v(" "),n("p",[t._v("用来布局的")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n// 只保留了核心代码，省略了部分代码\n\nbody: Center(\n\n  child: Container(\n\n    child: new Text('Hello World', style: TextStyle(fontSize: 40),),\n\n    alignment: Alignment.center,\n\n    width: 500,\n\n    height: 400,\n\n    // color: Colors.lightBlue, // 设置背景颜色\n\n    padding: const EdgeInsets.fromLTRB(10, 50, 0, 0),\n\n    margin: const EdgeInsets.all(10),\n\n    decoration: new BoxDecoration(\n\n      gradient: const LinearGradient(\n\n          colors: [Colors.lightBlue, Colors.greenAccent, Colors.purple]\n\n      ),\n\n      border: Border.all(width: 5, color: Colors.red)\n\n    ),\n\n  )\n\n)\n\n")])])]),n("h4",{attrs:{id:"alignment属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#alignment属性"}},[t._v("#")]),t._v(" alignment属性")]),t._v(" "),n("p",[t._v("容器子内容的对齐方式")]),t._v(" "),n("p",[t._v("bottomCenter:下部居中对齐。\nbottomLeft: 下部左对齐。\nbottomRight：下部右对齐。\ncenter：纵横双向居中对齐。\ncenterLeft：纵向居中横向居左对齐。\ncenterRight：纵向居中横向居右对齐。\ntopLeft：顶部左侧对齐。\ntopCenter：顶部居中对齐。\ntopRight： 顶部居左对齐。")]),t._v(" "),n("h4",{attrs:{id:"padding属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#padding属性"}},[t._v("#")]),t._v(" padding属性")]),t._v(" "),n("p",[t._v("内边距")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n// 左上右下\n\npadding: const EdgeInsets.fromLTRB(10, 50, 0, 0)\n\n// 所有边距\n\npadding: const EdgeInsets.all(10)\n\n")])])]),n("h4",{attrs:{id:"margin属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#margin属性"}},[t._v("#")]),t._v(" margin属性")]),t._v(" "),n("p",[t._v("外边距")]),t._v(" "),n("h4",{attrs:{id:"decoration属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#decoration属性"}},[t._v("#")]),t._v(" decoration属性")]),t._v(" "),n("p",[t._v("decoration是 container 的修饰器，主要的功能是设置背景和边框。")]),t._v(" "),n("h3",{attrs:{id:"image组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#image组件"}},[t._v("#")]),t._v(" Image组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nchild: Container(\n\n  child: new Image.network(\n\n    'https://flutterchina.club/images/flutter-mark-square-100.png',\n\n    repeat: ImageRepeat.noRepeat,\n\n    fit: BoxFit.contain,\n\n    color: Colors.greenAccent,\n\n    colorBlendMode: BlendMode.darken,\n\n  ),\n\n  width: 300,\n\n  height: 200,\n\n  color: Colors.lightBlue,\n\n)\n\n")])])]),n("h4",{attrs:{id:"加入图片的几种方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加入图片的几种方式"}},[t._v("#")]),t._v(" 加入图片的几种方式")]),t._v(" "),n("p",[t._v("Image.asset:加载资源图片，就是加载项目资源目录中的图片,加入图片后会增大打包的包体体积，用的是相对路径。\nImage.network:网络资源图片，意思就是你需要加入一段http://xxxx.xxx的这样的网络路径地址。\nImage.file:加载本地图片，就是加载本地文件中的图片，这个是一个绝对路径，跟包体无关。\nImage.memory: 加载Uint8List资源图片,这个我目前用的不是很多，所以没什么发言权。\n如需使用本地图片：")]),t._v(" "),n("p",[t._v("首先找到pubspec.yaml配置文件\n在项目根目录新增images文件夹\n找到图片这里进行配置，解开注释更改名字")]),t._v(" "),n("p",[t._v("使用：Image.asset('images/icon.jpg')")]),t._v(" "),n("h4",{attrs:{id:"fit属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fit属性"}},[t._v("#")]),t._v(" fit属性")]),t._v(" "),n("p",[t._v("fit属性可以控制图片的拉伸和挤压，这些都是根据图片的父级容器来的。")]),t._v(" "),n("p",[t._v("BoxFit.fill:全图显示，图片会被拉伸，并充满父容器。\nBoxFit.contain:全图显示，显示原比例，可能会有空隙。\nBoxFit.cover：显示可能拉伸，可能裁切，充满（图片要充满整个容器，还不变形）。\nBoxFit.fitWidth：宽度充满（横向充满），显示可能拉伸，可能裁切。\nBoxFit.fitHeight ：高度充满（竖向充满）,显示可能拉伸，可能裁切。\nBoxFit.scaleDown：效果和contain差不多，但是此属性不允许显示超过源图片大小，可小不可大。")]),t._v(" "),n("h4",{attrs:{id:"colorblendmode图片的混合模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#colorblendmode图片的混合模式"}},[t._v("#")]),t._v(" colorBlendMode图片的混合模式")]),t._v(" "),n("p",[t._v("图片混合模式（colorBlendMode）和color属性配合使用，能让图片改变颜色")]),t._v(" "),n("h4",{attrs:{id:"repeat属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#repeat属性"}},[t._v("#")]),t._v(" repeat属性")]),t._v(" "),n("p",[t._v("图片重复")]),t._v(" "),n("p",[t._v("ImageRepeat.repeat : 横向和纵向都进行重复，直到铺满整个画布。")]),t._v(" "),n("p",[t._v("ImageRepeat.repeatX: 横向重复，纵向不重复。")]),t._v(" "),n("p",[t._v("ImageRepeat.repeatY：纵向重复，横向不重复。")]),t._v(" "),n("h3",{attrs:{id:"listview组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#listview组件"}},[t._v("#")]),t._v(" ListView组件")]),t._v(" "),n("h4",{attrs:{id:"基础使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基础使用"}},[t._v("#")]),t._v(" 基础使用")]),t._v(" "),n("p",[t._v("ListTile组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: ListView(\n\n  children: <Widget>[\n\n    ListTile(\n\n      leading: Icon(Icons.perm_camera_mic),\n\n      title: Text('perm_camera_mic'),\n\n      trailing: Icon(Icons.more_vert),\n\n    ),\n\n    ListTile(\n\n      leading: Icon(Icons.access_time),\n\n      title: Text('access_time'),\n\n      trailing: Icon(Icons.more_vert),\n\n    ),\n\n    ListTile(\n\n      leading: Icon(Icons.account_balance),\n\n      title: Text('account_balance'),\n\n      trailing: Icon(Icons.more_vert),\n\n    ),\n\n  ]\n\n)\n\n")])])]),n("h4",{attrs:{id:"横向列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#横向列表"}},[t._v("#")]),t._v(" 横向列表")]),t._v(" "),n("p",[t._v("scrollDirection属性：定义列表滚动方向，默认垂直滚动")]),t._v(" "),n("p",[t._v("Axis.horizontal 横向/水平滚动\nAxis.vertical 纵向/垂直滚动")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: Center(\n\n  child: Container(\n\n    height: 200,\n\n    child: ListView(\n\n      scrollDirection: Axis.horizontal,\n\n      children: <Widget>[\n\n        Container(\n\n          width: 180,\n\n          color: Colors.lightBlue,\n\n        ),\n\n        Container(\n\n          width: 180,\n\n          color: Colors.amber,\n\n        ),\n\n        Container(\n\n          width: 180,\n\n          color: Colors.deepOrange,\n\n        ),\n\n        Container(\n\n          width: 180,\n\n          color: Colors.deepPurpleAccent,\n\n        ),\n\n      ],\n\n    ),\n\n  ),\n\n)\n\n")])])]),n("h4",{attrs:{id:"动态列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态列表"}},[t._v("#")]),t._v(" 动态列表")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nimport 'package:flutter/material.dart';\n\n\n\nvoid main() => runApp(MyApp(\n\n  // 声明参数\n\n  items: List<String>.generate(1000, (index) => 'Item $index')\n\n));\n\n\n\nclass MyApp extends StatelessWidget {\n\n  // 接收参数\n\n  final List<String> items;\n\n  MyApp({Key key, @required this.items}): super(key: key);\n\n\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return MaterialApp(\n\n     title: 'Welcome to Flutter',\n\n      home:Scaffold(\n\n        appBar: AppBar(\n\n          title: Text('ListView Widget'),\n\n        ),\n\n        body: ListView.builder(\n\n          itemCount: items.length,\n\n          itemBuilder: (context, index) {\n\n            return ListTile(\n\n              title: Text('${items[index]}'),\n\n            );\n\n          }\n\n        )\n\n      )\n\n    );\n\n  }\n\n}\n\n")])])]),n("h5",{attrs:{id:"list类型的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#list类型的使用"}},[t._v("#")]),t._v(" List类型的使用：")]),t._v(" "),n("p",[t._v("List是Dart的集合类型之一，其实你可以把它简单理解为数组")]),t._v(" "),n("p",[t._v("声明方式：")]),t._v(" "),n("div",{staticClass:"language-dart extra-class"},[n("pre",{pre:!0,attrs:{class:"language-dart"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 非固定长度的声明。\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 固定长度的声明。\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myList"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("固定类型的声明方式。\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 对"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),t._v("直接赋值。\n")])])]),n("p",[t._v("List.generate方法：")]),t._v(" "),n("p",[t._v("列表项生成器，传递两个参数，第一个参数是生成的个数，第二个是方法")]),t._v(" "),n("p",[t._v("ListView.builder方法：")]),t._v(" "),n("p",[t._v("动态列表遍历，itemCount遍历次数，itemBuilder回调函数")]),t._v(" "),n("h3",{attrs:{id:"gridview网格列表组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gridview网格列表组件"}},[t._v("#")]),t._v(" GridView网格列表组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: GridView.count(\n\n  crossAxisCount: 3, \n\n  mainAxisSpacing: 2, \n\n  crossAxisSpacing: 2,\n\n  childAspectRatio: 0.7,\n\n  children: <Widget>[\n\n    Image.network('https://img5.mtime.cn/mt/2021/04/22/100637.17500346_1280X720X2.jpg', fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/10/22/104316.77318635_180X260X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/10/10/112514.30587089_180X260X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/11/13/093605.61422332_180X260X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/11/07/092515.55805319_180X260X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/11/21/090246.16772408_135X190X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/11/17/162028.94879602_135X190X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/11/19/165350.52237320_135X190X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/11/16/115256.24365160_180X260X4.jpg',fit: BoxFit.cover),\n\n    Image.network('https://img5.mtime.cn/mt/2018/11/20/141608.71613590_135X190X4.jpg',fit: BoxFit.cover),\n\n  ]\n\n)\n\n")])])]),n("h4",{attrs:{id:"crossaxiscount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#crossaxiscount"}},[t._v("#")]),t._v(" crossAxisCount")]),t._v(" "),n("p",[t._v("横向排列个数")]),t._v(" "),n("h4",{attrs:{id:"mainaxisspacing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mainaxisspacing"}},[t._v("#")]),t._v(" mainAxisSpacing")]),t._v(" "),n("p",[t._v("上下边距")]),t._v(" "),n("h4",{attrs:{id:"crossaxisspacing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#crossaxisspacing"}},[t._v("#")]),t._v(" crossAxisSpacing")]),t._v(" "),n("p",[t._v("左右边距")]),t._v(" "),n("h4",{attrs:{id:"childaspectratio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#childaspectratio"}},[t._v("#")]),t._v(" childAspectRatio")]),t._v(" "),n("p",[t._v("缩放比例")]),t._v(" "),n("h3",{attrs:{id:"row水平布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#row水平布局"}},[t._v("#")]),t._v(" Row水平布局")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: Row(\n\n  children: <Widget>[\n\n    ElevatedButton(onPressed: () {}, child: Text('Red Button'), style: ButtonStyle(\n\n      backgroundColor: MaterialStateProperty.all<Color>(Colors.redAccent),\n\n    )),\n\n    ElevatedButton(onPressed: () {}, child: Text('Green Button'), style: ButtonStyle(\n\n      backgroundColor: MaterialStateProperty.all<Color>(Colors.greenAccent),\n\n    )),\n\n    Expanded(\n\n      child: ElevatedButton(onPressed: () {}, child: Text('Blue Button'), style: ButtonStyle(\n\n        backgroundColor: MaterialStateProperty.all<Color>(Colors.blueAccent),\n\n      )),\n\n    ),\n\n  ],\n\n)\n\n")])])]),n("h4",{attrs:{id:"elevatedbutton组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#elevatedbutton组件"}},[t._v("#")]),t._v(" ElevatedButton组件")]),t._v(" "),n("p",[t._v("创建一个Button")]),t._v(" "),n("p",[t._v("child：可以放入容器，图标，文字。\nonPressed：点击事件。\nstyle：按钮样式")]),t._v(" "),n("h4",{attrs:{id:"expanded组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#expanded组件"}},[t._v("#")]),t._v(" Expanded组件")]),t._v(" "),n("p",[t._v("使组件自动撑满父级")]),t._v(" "),n("h3",{attrs:{id:"column垂直布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#column垂直布局"}},[t._v("#")]),t._v(" Column垂直布局")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: Center(\n\n  child: Column(\n\n    crossAxisAlignment: CrossAxisAlignment.center,\n\n    children: <Widget>[\n\n      ElevatedButton(onPressed: () {}, child: Text('Red Button'), style: ButtonStyle(\n\n        backgroundColor: MaterialStateProperty.all<Color>(Colors.redAccent),\n\n      )),\n\n      Expanded(\n\n        child: ElevatedButton(onPressed: () {}, child: Text('Green Button'), style: ButtonStyle(\n\n          backgroundColor: MaterialStateProperty.all<Color>(Colors.greenAccent),\n\n        ))\n\n      ),\n\n      ElevatedButton(onPressed: () {}, child: Text('Blue Button'), style: ButtonStyle(\n\n        backgroundColor: MaterialStateProperty.all<Color>(Colors.blueAccent),\n\n      )),\n\n    ],\n\n  ),\n\n)\n\n")])])]),n("h4",{attrs:{id:"crossaxisalignment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#crossaxisalignment"}},[t._v("#")]),t._v(" crossAxisAlignment")]),t._v(" "),n("p",[t._v("副轴对齐方式，Column布局时，副轴是X轴，Row布局时，副轴是Y轴")]),t._v(" "),n("p",[t._v("CrossAxisAlignment.start\nCrossAxisAlignment.center\nCrossAxisAlignment.end")]),t._v(" "),n("h3",{attrs:{id:"stack层叠布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stack层叠布局"}},[t._v("#")]),t._v(" Stack层叠布局")]),t._v(" "),n("h4",{attrs:{id:"两个元素层叠布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#两个元素层叠布局"}},[t._v("#")]),t._v(" 两个元素层叠布局")]),t._v(" "),n("p",[t._v("使用 alignment: const FractionalOffset(0.5, 0.8)，只适用于两个元素层叠的情况")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: Center(\n\n  child: Stack(\n\n    alignment: const FractionalOffset(0.5, 0.8),\n\n    children: <Widget>[\n\n      CircleAvatar(\n\n        backgroundImage: NetworkImage('https://flutterchina.club/images/flutter-mark-square-100.png'),\n\n        backgroundColor: Colors.redAccent,\n\n        radius: 100,\n\n      ),\n\n      Container(\n\n          decoration: BoxDecoration(\n\n          color: Colors.greenAccent\n\n        ),\n\n        padding: EdgeInsets.all(10),\n\n        child: Text('Stack Stack'),\n\n      )\n\n    ],\n\n  )\n\n)\n\n")])])]),n("h5",{attrs:{id:"circleavatar圆头像组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#circleavatar圆头像组件"}},[t._v("#")]),t._v(" CircleAvatar圆头像组件")]),t._v(" "),n("h5",{attrs:{id:"fractionaloffset位置偏移"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fractionaloffset位置偏移"}},[t._v("#")]),t._v(" FractionalOffset位置偏移")]),t._v(" "),n("h4",{attrs:{id:"三个元素定位布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三个元素定位布局"}},[t._v("#")]),t._v(" 三个元素定位布局")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: Center(\n\n  child: Stack(\n\n    alignment: const FractionalOffset(0.5, 0.8),\n\n    children: <Widget>[\n\n      CircleAvatar(\n\n        backgroundImage: NetworkImage('https://flutterchina.club/images/flutter-mark-square-100.png'),\n\n        backgroundColor: Colors.redAccent,\n\n        radius: 100,\n\n      ),\n\n      Positioned(\n\n        left: 50,\n\n        top: 50,\n\n        child: Container(\n\n          decoration: BoxDecoration(color: Colors.greenAccent),\n\n          padding: EdgeInsets.all(10),\n\n          child: Text('Top Top'),\n\n        )\n\n      ),\n\n      Positioned(\n\n        left: 50,\n\n        bottom: 50,\n\n        child: Container(\n\n          decoration: BoxDecoration(color: Colors.greenAccent),\n\n          padding: EdgeInsets.all(10),\n\n          child: Text('Bottom Bottom'),\n\n        )\n\n      ),\n\n    ],\n\n  )\n\n)\n\n")])])]),n("h5",{attrs:{id:"positioned定位组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#positioned定位组件"}},[t._v("#")]),t._v(" Positioned定位组件")]),t._v(" "),n("h3",{attrs:{id:"card卡片布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#card卡片布局"}},[t._v("#")]),t._v(" Card卡片布局")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbody: Card(\n\n    child: Column(\n\n      children: <Widget>[\n\n        ListTile(\n\n          title: Text('北京市海淀区', style: TextStyle(fontWeight: FontWeight.w500),),\n\n          subtitle: Text('电话：15695874584'),\n\n          leading: Icon(Icons.account_box, color: Colors.lightBlue,),\n\n        ),\n\n        Divider(),\n\n        ListTile(\n\n          title: Text('上海市浦东区', style: TextStyle(fontWeight: FontWeight.w500),),\n\n          subtitle: Text('电话：15695874584'),\n\n          leading: Icon(Icons.account_box, color: Colors.lightBlue,),\n\n        ),\n\n        Divider(),\n\n        ListTile(\n\n          title: Text('深圳市南山区', style: TextStyle(fontWeight: FontWeight.w500),),\n\n          subtitle: Text('电话：15695874584'),\n\n          leading: Icon(Icons.account_box, color: Colors.lightBlue,),\n\n        ),\n\n      ],\n\n    ),\n\n  )\n\n")])])]),n("h4",{attrs:{id:"divider分割线组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#divider分割线组件"}},[t._v("#")]),t._v(" Divider分割线组件")]),t._v(" "),n("h3",{attrs:{id:"页面导航"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#页面导航"}},[t._v("#")]),t._v(" 页面导航")]),t._v(" "),n("h4",{attrs:{id:"普通导航"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通导航"}},[t._v("#")]),t._v(" 普通导航")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nimport 'package:flutter/material.dart';\n\n\n\nvoid main() {\n\n  runApp(\n\n    MaterialApp(\n\n      title: \"导航演示\",\n\n      home: HomePage()\n\n    )\n\n  );\n\n}\n\n\n\nclass HomePage extends StatelessWidget {\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return Scaffold(\n\n      appBar: AppBar(title: Text('页面导航'),),\n\n      body: Center(\n\n        child: ElevatedButton(\n\n          child: Text('查看商品详情页'),\n\n          onPressed: () {\n\n            Navigator.push(context, MaterialPageRoute(\n\n              builder: (context) => DetailPage()\n\n            ));\n\n          },\n\n        ),\n\n      )\n\n    );\n\n  }\n\n}\n\n\n\nclass DetailPage extends StatelessWidget {\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return Scaffold(\n\n      appBar: AppBar(title: Text('详情页'),),\n\n      body: Center(\n\n        child: ElevatedButton(\n\n          child: Text('返回'),\n\n          onPressed: () {\n\n            Navigator.pop(context);\n\n          },\n\n        ),\n\n      ),\n\n    );\n\n  }\n\n}\n\n")])])]),n("h5",{attrs:{id:"navigator导航"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#navigator导航"}},[t._v("#")]),t._v(" Navigator导航")]),t._v(" "),n("p",[t._v("push导航到第二个页面\npop返回到上一个页面\npush方法需要一个Route，使用MaterialPageRoute用平台特定的动画跳转到新的页面(Android和IOS屏幕切换动画会不同)。")]),t._v(" "),n("h4",{attrs:{id:"带参数的导航一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#带参数的导航一"}},[t._v("#")]),t._v(" 带参数的导航一")]),t._v(" "),n("p",[t._v("通过路由将参数从第一个页面传入第二个页面")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nimport 'package:flutter/material.dart';\n\n\n\nclass Product {\n\n  final String title;\n\n  final String description;\n\n  Product(this.title, this.description);\n\n}\n\n\n\nvoid main() {\n\n  runApp(\n\n    MaterialApp(\n\n      title: \"导航传递参数\",\n\n      home: ProductList(\n\n        products: List.generate(20, (index) => Product('商品 $index', '这是一个商品详情，编号为：$index'))\n\n      )\n\n    )\n\n  );\n\n}\n\n\n\nclass ProductList extends StatelessWidget {\n\n  final List<Product> products;\n\n  ProductList({Key key, @required this.products}): super(key: key);\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return Scaffold(\n\n      appBar: AppBar(title: Text('商品列表'),),\n\n      body: ListView.builder(\n\n        itemCount: products.length,\n\n        itemBuilder: (context, index) {\n\n          return ListTile(\n\n            title: Text(products[index].title),\n\n            onTap: () {\n\n              Navigator.push(context, MaterialPageRoute(builder: (context) => ProductDetail(product: products[index])));\n\n            },\n\n          );\n\n        })\n\n    );\n\n  }\n\n}\n\n\n\nclass ProductDetail extends StatelessWidget {\n\n  final Product product;\n\n  ProductDetail({Key key, @required this.product}): super(key: key);\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return Scaffold(\n\n      appBar: AppBar(title: Text('${product.title}'),),\n\n      body: Center(child: Text('${product.description}'),),\n\n    );\n\n  }\n\n}\n\n")])])]),n("h4",{attrs:{id:"带参数的导航二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#带参数的导航二"}},[t._v("#")]),t._v(" 带参数的导航二")]),t._v(" "),n("p",[t._v("通过路由将参数从第二个页面传入第一个页面")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nimport 'package:flutter/material.dart';\n\n\n\nvoid main() {\n\n  runApp(\n\n    MaterialApp(\n\n      title: \"页面跳转传递参数\",\n\n      home: HomePage()\n\n    )\n\n  );\n\n}\n\n\n\nclass HomePage extends StatelessWidget {\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return Scaffold(\n\n      appBar: AppBar(title: Text('找小姐姐要电话'),),\n\n      body: RouteButton(),\n\n    );\n\n  }\n\n}\n\n\n\nclass RouteButton extends StatelessWidget {\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return Center(\n\n      child: ElevatedButton(onPressed: () { _navigateToXiaoJieJie(context); }, child: Text('去找小姐姐')),\n\n    );\n\n  }\n\n  \n\n  _navigateToXiaoJieJie(BuildContext context) async {\n\n    final result = await Navigator.push(context, MaterialPageRoute(builder: (context) => XiaoJieJie()));\n\n    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('$result')));\n\n  }\n\n}\n\n\n\nclass XiaoJieJie extends StatelessWidget {\n\n  @override\n\n  Widget build(BuildContext context) {\n\n    return Scaffold(\n\n      appBar: AppBar(title: Text('我是小姐姐'),),\n\n      body: Center(\n\n        child: Column(\n\n          children: <Widget>[\n\n            ElevatedButton(\n\n              onPressed: () { Navigator.pop(context, '大长腿小姐姐: 13652487596');},\n\n              child: Text('大长腿小姐姐')\n\n            ),\n\n            ElevatedButton(\n\n              onPressed: () { Navigator.pop(context, '小蛮腰小姐姐: 18896571256');},\n\n              child: Text('小蛮腰小姐姐')\n\n            ),\n\n          ],\n\n        ),\n\n      ),\n\n    );\n\n  }\n\n}\n\n")])])]),n("h3",{attrs:{id:"flutter打包apk"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flutter打包apk"}},[t._v("#")]),t._v(" flutter打包APK")]),t._v(" "),n("h4",{attrs:{id:"配置app图片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置app图片"}},[t._v("#")]),t._v(" 配置app图片")]),t._v(" "),n("p",[t._v("找到该目录：/android/app/src/main/res/")]),t._v(" "),n("p",[t._v("进入之后你会看到很多mipmap-为前缀命名的文件夹，后边的是像素密度，可以看出图标的分辨率。")]),t._v(" "),n("p",[t._v("mdpi (中) ~160dpi\nhdpi （高） ~240dip\nxhdpi （超高） ~320dip\nxxhdpi （超超高） ~480dip\nxxxhdpi （超超超高） ~640dip\n将对应像素密度的图片放入对应的文件夹中，图片记得用png格式，名字要统一，才能一次性进行配置。")]),t._v(" "),n("h4",{attrs:{id:"androidmanifest-xml文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#androidmanifest-xml文件"}},[t._v("#")]),t._v(" AndroidManifest.xml文件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\nandroid:label="flutter_app" //配置APP的名称，支持中文\n\nandroid:icon="@mipmap/ic_launcher" //APP图标的文件名称\n\n')])])]),n("h4",{attrs:{id:"生成keystore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成keystore"}},[t._v("#")]),t._v(" 生成keystore")]),t._v(" "),n("p",[t._v("首先，运行以下命令为app签名")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$  keytool -genkey -v -keystore ~/sign.jks -keyalg RSA -keysize 2048 -validity 10000 -alias sign\n\n")])])]),n("p",[t._v("然后，在/android/app目录下创建key文件夹，将sign.jks拖入到该目录中")]),t._v(" "),n("p",[t._v("最后，在/android目录下新建key.properties文件，并粘贴以下代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nstorePassword=<password from previous step> //输入上一步创建KEY时输入的 密钥库 密码\n\nkeyPassword=<password from previous step> //输入上一步创建KEY时输入的 密钥 密码\n\nkeyAlias=sign\n\nstoreFile=key/sign.jks //sign.jks的存放路径\n\n")])])]),n("h4",{attrs:{id:"key注册配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#key注册配置"}},[t._v("#")]),t._v(" key注册配置")]),t._v(" "),n("p",[t._v("进入/android/app/build.gradle")]),t._v(" "),n("p",[t._v("首先，在android{这一行前面,加入如下代码：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\ndef keystorePropertiesFile = rootProject.file("key.properties")\n\ndef keystoreProperties = new Properties()\n\nkeystoreProperties.load(new FileInputStream(keystorePropertiesFile))\n\n')])])]),n("p",[t._v("然后，把如下代码进行替换：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nbuildTypes {\n\n     release {\n\n         signingConfig signingConfigs.debug\n\n     }\n\n}\n\n")])])]),n("p",[t._v("替换成的代码：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nsigningConfigs {\n\n    release { keyAlias keystoreProperties['keyAlias']\n\n    keyPassword keystoreProperties['keyPassword']\n\n    storeFile file(keystoreProperties['storeFile'])\n\n    storePassword keystoreProperties['storePassword'] }\n\n}\n\nbuildTypes {\n\n    release {\n\n        signingConfig signingConfigs.release\n\n    }\n\n}\n\n")])])]),n("h4",{attrs:{id:"生成apk"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成apk"}},[t._v("#")]),t._v(" 生成APK")]),t._v(" "),n("p",[t._v("方法一：")]),t._v(" "),n("p",[t._v("在终端输入以下命令")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n$ flutter build apk\n\n")])])]),n("p",[t._v("方法二：")]),t._v(" "),n("p",[t._v("红框部分是apk的输出目录")]),t._v(" "),n("h2",{attrs:{id:"引入网络请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引入网络请求"}},[t._v("#")]),t._v(" 引入网络请求")]),t._v(" "),n("p",[t._v("Dio库：https://github.com/flutterchina/dio")]),t._v(" "),n("h3",{attrs:{id:"安装依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖"}},[t._v("#")]),t._v(" 安装依赖")]),t._v(" "),n("p",[t._v("找到根目录下的pubspec.yaml文件，添加依赖，保存文件后会自动开始下载")]),t._v(" "),n("h3",{attrs:{id:"get-post请求的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get-post请求的使用"}},[t._v("#")]),t._v(" Get/Post请求的使用")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\nimport 'package:dio/dio.dart';\n\n\n\nvoid getHttp(String typeText) async {\n\n    try {\n\n      Response response;\n\n     var data = {'postId': typeText};\n\n      response = await Dio().get(\n\n        'https://jsonplaceholder.typicode.com/posts/1',\n\n        queryParameters: data,\n\n     );\n\n   \n     // response = await Dio().post(\n     //  'https://jsonplaceholder.typicode.com/posts',\n     //  queryParameters: data,\n     // );\n\n      return response;\n\n    } catch (e) {\n\n      return print(e);\n\n    }\n\n  }\n\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);