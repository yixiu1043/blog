(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{506:function(_,v,t){"use strict";t.r(v);var a=t(2),s=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"计算机组成与系统结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机组成与系统结构"}},[_._v("#")]),_._v(" 计算机组成与系统结构")]),_._v(" "),v("p",[_._v("组成：硬件 + 软件")]),_._v(" "),v("p",[_._v("fortram")]),_._v(" "),v("p",[_._v("pascal")]),_._v(" "),v("p",[_._v("c++")]),_._v(" "),v("p",[_._v("java")]),_._v(" "),v("h2",{attrs:{id:"第一章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一章"}},[_._v("#")]),_._v(" 第一章")]),_._v(" "),v("h3",{attrs:{id:"计算机硬件的基本组成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机硬件的基本组成"}},[_._v("#")]),_._v(" 计算机硬件的基本组成")]),_._v(" "),v("h4",{attrs:{id:"组成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组成"}},[_._v("#")]),_._v(" 组成")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("运算器+控制器，简称CPU")])]),_._v(" "),v("li",[v("p",[_._v("主存储器")])]),_._v(" "),v("li",[v("p",[_._v("输入+输出设备")])])]),_._v(" "),v("p",[_._v("主机：主存储器+CPU")]),_._v(" "),v("p",[_._v("存储器：主存+辅存")]),_._v(" "),v("p",[_._v("I/O设备：输入+输出设备")]),_._v(" "),v("h4",{attrs:{id:"存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储器"}},[_._v("#")]),_._v(" 存储器")]),_._v(" "),v("ul",[v("li",[_._v("存储体")]),_._v(" "),v("li",[_._v("MAR，存储地址寄存器（Memory Address Register）")]),_._v(" "),v("li",[_._v("MDR，存储数据寄存器（Memory Data Register）")])]),_._v(" "),v("p",[_._v("存储单元：每个存储单元存放一串二进制代码")]),_._v(" "),v("p",[_._v("存储字（word）：存储单元中二进制代码的组合")]),_._v(" "),v("p",[_._v("存储字长：存储单元中二进制代码的位数 8｜16 ｜ 32 ｜64")]),_._v(" "),v("p",[_._v("存储元：存储二进制的电子元件，每个存储元可存 1bit")]),_._v(" "),v("p",[_._v("MAR=4位 -> 总共有2**4个存储单元")]),_._v(" "),v("p",[_._v("MDR=16位 -> 每个存储单元可存放16bit，1个字（word）=16bit")]),_._v(" "),v("p",[_._v("1个字节（Byte）= 8bit")]),_._v(" "),v("p",[_._v("1B = 1个字节，1b=1个bit")]),_._v(" "),v("h4",{attrs:{id:"运算器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运算器"}},[_._v("#")]),_._v(" 运算器")]),_._v(" "),v("p",[_._v("ACC 累加器 Accumulator")]),_._v(" "),v("p",[_._v("MQ 乘商寄存器 Multiple-Quotient Register")]),_._v(" "),v("p",[_._v("X 通用操作数寄存器")]),_._v(" "),v("p",[_._v("ALU 算数逻辑单元，核心部件 Arithmetic And Logic Unit")]),_._v(" "),v("h4",{attrs:{id:"控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[_._v("#")]),_._v(" 控制器")]),_._v(" "),v("p",[_._v("CU 控制单元 Control Unit")]),_._v(" "),v("p",[_._v("IR 指令寄存器 Instruction Register")]),_._v(" "),v("p",[_._v("PC 程序计数器 Program Center")]),_._v(" "),v("p",[_._v("PC -> IR -> CU")]),_._v(" "),v("p",[_._v("取指令  PC")]),_._v(" "),v("p",[_._v("分析指令 IR")]),_._v(" "),v("p",[_._v("执行指令 CU")]),_._v(" "),v("h3",{attrs:{id:"计算机系统的层次结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机系统的层次结构"}},[_._v("#")]),_._v(" 计算机系统的层次结构")]),_._v(" "),v("p",[_._v("虚拟机语言 M4（高级语言机器）")]),_._v(" "),v("p",[_._v("虚拟机器 M3 （汇编语言机器）")]),_._v(" "),v("p",[_._v("虚拟机器 M2（操作系统机器）")]),_._v(" "),v("p",[_._v("传统机器 M1（用机器语言的机器）")]),_._v(" "),v("p",[_._v("微程序机器 M0 （微指令系统）")]),_._v(" "),v("p",[_._v("三个级别的语言:")]),_._v(" "),v("ul",[v("li",[_._v("高级语言")]),_._v(" "),v("li",[_._v("汇编语言")]),_._v(" "),v("li",[_._v("机器语言")])]),_._v(" "),v("p",[_._v("两种语言类型：")]),_._v(" "),v("ul",[v("li",[_._v("编译型语言（一次性全部翻译为汇编语言）")]),_._v(" "),v("li",[_._v("解释型语言（翻译一句，执行一句）")])]),_._v(" "),v("h3",{attrs:{id:"计算机性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机性能指标"}},[_._v("#")]),_._v(" 计算机性能指标")]),_._v(" "),v("h4",{attrs:{id:"存储器的性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储器的性能指标"}},[_._v("#")]),_._v(" 存储器的性能指标")]),_._v(" "),v("p",[_._v("总容量 = 存储单元个数x存储字长")]),_._v(" "),v("p",[_._v("例子：")]),_._v(" "),v("p",[_._v("MAR为32位，MDR为8位")]),_._v(" "),v("p",[_._v("总容量 = 2 ** 32 * 8bit= 4GB")]),_._v(" "),v("p",[_._v("IByte = 8bit")]),_._v(" "),v("h4",{attrs:{id:"cpu的性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu的性能指标"}},[_._v("#")]),_._v(" CPU的性能指标")]),_._v(" "),v("p",[_._v("CPU主频：CPU内数字脉冲信号振荡的频率")]),_._v(" "),v("p",[_._v("CPU主频（时钟频率）= 1 / CPU时钟周期")]),_._v(" "),v("p",[_._v("CPI（Clock cycle Per Instruction）：执行一条指令所需的时钟周期数")]),_._v(" "),v("p",[_._v("CPU执行时间（整个程序的耗时）= CPU时钟周期数 / 主频 = （指令条数 * CPI）/ 主频")]),_._v(" "),v("p",[_._v("IPS（Instruction Per Second）：每秒执行多少条指令")]),_._v(" "),v("p",[_._v("IPS = 主频 / 平均CPI")]),_._v(" "),v("p",[_._v("FLOPS（Floating-point Operations Per Second）：每秒执行多少次浮点运算")]),_._v(" "),v("h4",{attrs:{id:"系统整理的性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统整理的性能指标"}},[_._v("#")]),_._v(" 系统整理的性能指标")]),_._v(" "),v("p",[_._v("数据通路带宽：数据总线一次所能并行传送信息的位数（各硬件部件通过数据总线传输数据）")]),_._v(" "),v("p",[_._v("吞吐量：指系统在单位时间内处理请求的数量。")]),_._v(" "),v("p",[_._v("响应时间：用户向计算机发送请求，到系统对该请求做出响应并获得所需结果的等待时间")]),_._v(" "),v("h4",{attrs:{id:"动态测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态测试"}},[_._v("#")]),_._v(" 动态测试")]),_._v(" "),v("p",[_._v("基准程序")]),_._v(" "),v("p",[_._v("使用跑分软件进行动态测试")]),_._v(" "),v("h2",{attrs:{id:"第二章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二章"}},[_._v("#")]),_._v(" 第二章")]),_._v(" "),v("h3",{attrs:{id:"进位计数制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进位计数制"}},[_._v("#")]),_._v(" 进位计数制")]),_._v(" "),v("h4",{attrs:{id:"进制转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进制转换"}},[_._v("#")]),_._v(" 进制转换")]),_._v(" "),v("p",[_._v("真值：符合人类习惯的数字")]),_._v(" "),v("p",[_._v("机器数：数字实际存到机器里的形式，正负号需要被“数字化”")]),_._v(" "),v("h5",{attrs:{id:"r进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#r进制"}},[_._v("#")]),_._v(" r进制：")]),_._v(" "),v("p",[_._v("K"),v("sub",[_._v("n")]),_._v("K"),v("sub",[_._v("n-1")]),_._v("...K"),v("sub",[_._v("2")]),_._v("K"),v("sub",[_._v("1")]),_._v("K"),v("sub",[_._v("0")]),_._v("K"),v("sub",[_._v("-1")]),_._v("K"),v("sub",[_._v("-2")]),_._v("...K"),v("sub",[_._v("-m")])]),_._v(" "),v("p",[_._v("= K"),v("sub",[_._v("n")]),_._v("✖️r"),v("sup",[_._v("n")]),_._v("➕K"),v("sub",[_._v("n-1")]),_._v("✖️r"),v("sup",[_._v("n-1")]),_._v("➕...➕K"),v("sub",[_._v("2")]),_._v("✖️r"),v("sup",[_._v("2")]),_._v("➕K"),v("sub",[_._v("1")]),_._v("✖️r"),v("sup",[_._v("1")]),_._v("➕K"),v("sub",[_._v("0")]),_._v("✖️r"),v("sup",[_._v("0")]),_._v("➕K"),v("sub",[_._v("-1")]),_._v("✖️r"),v("sup",[_._v("-1")]),_._v("➕K"),v("sub",[_._v("-2")]),_._v("✖️r"),v("sup",[_._v("-2")]),_._v("➕...➕K"),v("sub",[_._v("-m")]),_._v("✖️r"),v("sup",[_._v("-m")])]),_._v(" "),v("p",[_._v("基数：每个数码位所用到的不同符号的个数，R进制的基数为R，二进制为2，十进制为10。")]),_._v(" "),v("p",[_._v("位权（r"),v("sup",[_._v("n")]),_._v("）：由符号处的位置所确定的权值权重。")]),_._v(" "),v("h5",{attrs:{id:"任意进制转十进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#任意进制转十进制"}},[_._v("#")]),_._v(" 任意进制转十进制")]),_._v(" "),v("p",[_._v("例子：")]),_._v(" "),v("p",[_._v("将二进制1001 0010.110转化为十进制。")]),_._v(" "),v("p",[_._v("1001 0010.110")]),_._v(" "),v("p",[_._v("= 1 * 2"),v("sup",[_._v("7")]),_._v(" +  0 * 2"),v("sup",[_._v("6")]),_._v(" +  0 * 2"),v("sup",[_._v("5")]),_._v(" +  1 * 2"),v("sup",[_._v("4")]),_._v(" +  0 * 2"),v("sup",[_._v("3")]),_._v(" +  0 * 2"),v("sup",[_._v("2")]),_._v(" +  1 * 2"),v("sup",[_._v("1")]),_._v(" +  0 * 2"),v("sup",[_._v("0")]),_._v(" +  1 * 2"),v("sup",[_._v("-1")]),_._v("  +  1 * 2"),v("sup",[_._v("-2")]),_._v(" +  0 * 2"),v("sup",[_._v("-3")])]),_._v(" "),v("p",[_._v("= 128 + 16 + 2 + 0.5 + 0.25")]),_._v(" "),v("p",[_._v("= 146.75")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("2"),v("sup",[_._v("7")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("6")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("5")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("4")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("3")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("0")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-3")])])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("128")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("32")]),_._v(" "),v("td",[_._v("16")]),_._v(" "),v("td",[_._v("8")]),_._v(" "),v("td",[_._v("4")]),_._v(" "),v("td",[_._v("2")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0.5")]),_._v(" "),v("td",[_._v("0.25")]),_._v(" "),v("td",[_._v("0.125")])]),_._v(" "),v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")])])])]),_._v(" "),v("h5",{attrs:{id:"二进制转八进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二进制转八进制"}},[_._v("#")]),_._v(" 二进制转八进制")]),_._v(" "),v("p",[_._v("如：1111 0000 10.0110 01")]),_._v(" "),v("p",[_._v("3位一组，不够补0，每组转换成对应的八进制符号")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("001")]),_._v(" "),v("th",[_._v("111")]),_._v(" "),v("th",[_._v("000")]),_._v(" "),v("th",[_._v("010")]),_._v(" "),v("th",[_._v(".")]),_._v(" "),v("th",[_._v("011")]),_._v(" "),v("th",[_._v("010")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("7")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("2")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td",[_._v("3")]),_._v(" "),v("td",[_._v("2")])])])]),_._v(" "),v("p",[_._v("结果：1702.32")]),_._v(" "),v("h5",{attrs:{id:"二进制转十六进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二进制转十六进制"}},[_._v("#")]),_._v(" 二进制转十六进制")]),_._v(" "),v("p",[_._v("如：1111 0000 10.0110 01")]),_._v(" "),v("p",[_._v("4位一组，不够补0，每组转换成对应的十六进制符号")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("0011")]),_._v(" "),v("th",[_._v("1100")]),_._v(" "),v("th",[_._v("0010")]),_._v(" "),v("th",[_._v(".")]),_._v(" "),v("th",[_._v("0110")]),_._v(" "),v("th",[_._v("1000")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("3")]),_._v(" "),v("td",[_._v("C")]),_._v(" "),v("td",[_._v("2")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td",[_._v("6")]),_._v(" "),v("td",[_._v("8")])])])]),_._v(" "),v("p",[_._v("结果：3C2.68")]),_._v(" "),v("h4",{attrs:{id:"各种进制的常见书写方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#各种进制的常见书写方式"}},[_._v("#")]),_._v(" 各种进制的常见书写方式")]),_._v(" "),v("p",[_._v("二进制：(1010)"),v("sub",[_._v("2")]),_._v(" \t\t1010B")]),_._v(" "),v("p",[_._v("八进制：(1652)"),v("sub",[_._v("8")])]),_._v(" "),v("p",[_._v("十进制：(1652)"),v("sub",[_._v("10")]),_._v(" \t\t1652D")]),_._v(" "),v("p",[_._v("十六进制：(1652)"),v("sub",[_._v("16")]),_._v(" \t\t1652H \t0x1652")]),_._v(" "),v("h4",{attrs:{id:"十进制转任意进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#十进制转任意进制"}},[_._v("#")]),_._v(" 十进制转任意进制")]),_._v(" "),v("p",[_._v("如：75.3")]),_._v(" "),v("p",[_._v("整数部分=75")]),_._v(" "),v("h5",{attrs:{id:"除基取余法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#除基取余法"}},[_._v("#")]),_._v(" 除基取余法")]),_._v(" "),v("p",[_._v("$$\nK_n"),v("em",[_._v("r^n+K_{n-1}"),v("em",[_._v("r^{n-1}+...+K_2")]),_._v("r^2+K_1")]),_._v("r^1+K_0*r^0 = 75 {, 根据r进制可得}\n$$")]),_._v(" "),v("p",[_._v("$$\n\\frac {K_n"),v("em",[_._v("r^n+K_{n-1}"),v("em",[_._v("r^{n-1}+...+K_2")]),_._v("r^2+K_1")]),_._v("r^1+K_0"),v("em",[_._v("r^0} {r}\n= K_n")]),_._v("r^{n-1}+K_{n-1}"),v("em",[_._v("r^{n-2}+...+K_2")]),_._v("r^1+K_1*r^0...K_0 {，前面部分是商，K_0是余数}\n$$")]),_._v(" "),v("p",[_._v("$$\n\\frac {K_n"),v("em",[_._v("r^{n-1}+K_{n-1}"),v("em",[_._v("r^{n-2}+...+K_2")]),_._v("r^1+K_1")]),_._v("r^0} {r}\n= K_n*r^{n-2}+K_{n-1}"),v("em",[_._v("r^{n-3}+...+K_2")]),_._v("r^0...K_1 {，前面部分是商，K_1是余数}\n$$")]),_._v(" "),v("p",[_._v("把商记做x，则： r * x  + K"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("(r * x  + K"),v("sub",[_._v("0")]),_._v(") / r，余 K"),v("sub",[_._v("0")]),_._v(" 。")]),_._v(" "),v("p",[_._v("小数部分=0.3")]),_._v(" "),v("h5",{attrs:{id:"乘基取整法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#乘基取整法"}},[_._v("#")]),_._v(" 乘基取整法")]),_._v(" "),v("p",[_._v("$$\n(K_{-1}*r^{-1}+K_{-2}*r^{-2}+...+K_{-m}*r^{-m}) * r\n= K_{-1}*r^0+K_{-2}*r^{-1}+...+K_{-m}*r^{-(m+1)} {，K_{-1}*r^0为整数}\n$$")]),_._v(" "),v("p",[_._v("$$\n(K_{-2}*r^{-1}+...+K_{-m}*r^{-(m+1)}) * r\n= K_{-2}*r^0+...+K_{-m}*r^{-(m+2)} {，K_{-2}*r^0为整数}\n$$")]),_._v(" "),v("h4",{attrs:{id:"十进制转二进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#十进制转二进制"}},[_._v("#")]),_._v(" 十进制转二进制")]),_._v(" "),v("h5",{attrs:{id:"除基取余法-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#除基取余法-2"}},[_._v("#")]),_._v(" 除基取余法")]),_._v(" "),v("p",[_._v("基数r = 2")]),_._v(" "),v("p",[_._v("整数部分=75")]),_._v(" "),v("p",[_._v("75 ➗ 2 = 37 ... 1,  (K"),v("sub",[_._v("0")]),_._v(" )")]),_._v(" "),v("p",[_._v("37 ➗ 2 = 18 ... 1,  (K"),v("sub",[_._v("1")]),_._v(" )")]),_._v(" "),v("p",[_._v("18 ➗ 2 = 9 ... 0,  (K"),v("sub",[_._v("2")]),_._v(" )")]),_._v(" "),v("p",[_._v("9 ➗ 2 = 4 ... 1,  (K"),v("sub",[_._v("3")]),_._v(")")]),_._v(" "),v("p",[_._v("4 ➗ 2 = 2 ... 0,  (K"),v("sub",[_._v("4")]),_._v(")")]),_._v(" "),v("p",[_._v("2 ➗ 2 = 1 ... 0,  (K"),v("sub",[_._v("5")]),_._v(")")]),_._v(" "),v("p",[_._v("1 ➗ 2 = 0 ... 1,  (K"),v("sub",[_._v("6")]),_._v(")")]),_._v(" "),v("p",[_._v("最后得：75D = 1001011B")]),_._v(" "),v("p",[_._v("小数部分=0.3")]),_._v(" "),v("p",[_._v("0.3✖️2 = 0.6 = 0 + 0.6 , (K"),v("sub",[_._v("-1")]),_._v(" )")]),_._v(" "),v("p",[_._v("0.6✖️2 = 1.2 = 1 + 0.2 , (K"),v("sub",[_._v("-2")]),_._v(" )")]),_._v(" "),v("p",[_._v("0.2✖️2 = 0.4 = 0 + 0.4 , (K"),v("sub",[_._v("-3")]),_._v(" )")]),_._v(" "),v("p",[_._v("0.4✖️2 = 0.8 = 0 + 0.8 , (K"),v("sub",[_._v("-4")]),_._v(" )")]),_._v(" "),v("p",[_._v("0.8✖️2 = 1.6 = 1 + 0.6 , (K"),v("sub",[_._v("-5")]),_._v(" )")]),_._v(" "),v("p",[_._v("...")]),_._v(" "),v("p",[_._v("无法精确表示")]),_._v(" "),v("p",[_._v("最后得：0.3D = 0.01001B")]),_._v(" "),v("p",[_._v("75.3D = 1001011.01001B")]),_._v(" "),v("h5",{attrs:{id:"拼凑法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#拼凑法"}},[_._v("#")]),_._v(" 拼凑法")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("2"),v("sup",[_._v("12")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("11")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("10")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("9")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("8")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("7")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("6")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("5")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("4")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("3")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("0")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-3")])])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("4096")]),_._v(" "),v("td",[_._v("2048")]),_._v(" "),v("td",[_._v("1024")]),_._v(" "),v("td",[_._v("512")]),_._v(" "),v("td",[_._v("256")]),_._v(" "),v("td",[_._v("128")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("32")]),_._v(" "),v("td",[_._v("16")]),_._v(" "),v("td",[_._v("8")]),_._v(" "),v("td",[_._v("4")]),_._v(" "),v("td",[_._v("2")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0.5")]),_._v(" "),v("td",[_._v("0.25")]),_._v(" "),v("td",[_._v("0.125")])]),_._v(" "),v("tr",[v("td",[_._v("260.75")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0.")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("533.125")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1.")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")])])])]),_._v(" "),v("p",[_._v("例子：")]),_._v(" "),v("p",[_._v("将十进制260.75，533.125转为二进制")]),_._v(" "),v("p",[_._v("260.75 = 256 + 4 + 0.5 + 0.25 = 1000 0010 0.11")]),_._v(" "),v("p",[_._v("533.125 = 512 + 16 + 4 + 1 + 0.125 = 1000 0101 01.001")]),_._v(" "),v("h4",{attrs:{id:"十进制转八进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#十进制转八进制"}},[_._v("#")]),_._v(" 十进制转八进制")]),_._v(" "),v("p",[_._v("r = 8")]),_._v(" "),v("p",[_._v("与转二进制的方法相同")]),_._v(" "),v("h3",{attrs:{id:"bcd码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bcd码"}},[_._v("#")]),_._v(" BCD码")]),_._v(" "),v("p",[_._v("定义：Binary-Coded Decimal，用二进制编码的十进制")]),_._v(" "),v("p",[_._v("作用：方便人类进行转换")]),_._v(" "),v("p",[_._v("原理：用4个二进制位表示1个十进制字符。")]),_._v(" "),v("h4",{attrs:{id:"_8421码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8421码"}},[_._v("#")]),_._v(" 8421码")]),_._v(" "),v("p",[_._v("有权码")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("2"),v("sup",[_._v("3")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("0")])]),_._v(" "),v("th",[_._v("权重")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("8")]),_._v(" "),v("td",[_._v("4")]),_._v(" "),v("td",[_._v("2")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("真值")])]),_._v(" "),v("tr",[v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("4个比特位")])]),_._v(" "),v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("5 = 4 + 1 = 0101B")])]),_._v(" "),v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("9 = 8 + 1 = 1001B")])])])]),_._v(" "),v("p",[_._v("8421码映射表")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("0")]),_._v(" "),v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")]),_._v(" "),v("th",[_._v("4")]),_._v(" "),v("th",[_._v("5")]),_._v(" "),v("th",[_._v("6")]),_._v(" "),v("th",[_._v("7")]),_._v(" "),v("th",[_._v("8")]),_._v(" "),v("th",[_._v("9")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0000")]),_._v(" "),v("td",[_._v("0001")]),_._v(" "),v("td",[_._v("0010")]),_._v(" "),v("td",[_._v("0011")]),_._v(" "),v("td",[_._v("0100")]),_._v(" "),v("td",[_._v("0101")]),_._v(" "),v("td",[_._v("0110")]),_._v(" "),v("td",[_._v("0111")]),_._v(" "),v("td",[_._v("1000")]),_._v(" "),v("td",[_._v("1001")])])])]),_._v(" "),v("p",[_._v("例子：985")]),_._v(" "),v("p",[_._v("9 = 1001")]),_._v(" "),v("p",[_._v("8 = 1000")]),_._v(" "),v("p",[_._v("5 = 0101")]),_._v(" "),v("p",[_._v("985D = 1001 1000 0101B")]),_._v(" "),v("h5",{attrs:{id:"计算机如何使用8421码进行加法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机如何使用8421码进行加法"}},[_._v("#")]),_._v(" 计算机如何使用8421码进行加法")]),_._v(" "),v("p",[_._v("计算机用8421码得出13的二进制的步骤")]),_._v(" "),v("p",[_._v("8421码中1010-1111没有定义")]),_._v(" "),v("p",[_._v("13不在8421码范围内，计算机要做加6处理")]),_._v(" "),v("p",[_._v("十进制：     5      +        8      =    13")]),_._v(" "),v("p",[_._v("8421码：")]),_._v(" "),v("ol",[v("li",[_._v("0101   +     1000   =    1101（不在8421表中）")]),_._v(" "),v("li",[_._v("1101   +     0110（8421表中的6）   =    10011")]),_._v(" "),v("li",[_._v("=   0001 0011（高位补0）")])]),_._v(" "),v("h4",{attrs:{id:"余3码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#余3码"}},[_._v("#")]),_._v(" 余3码")]),_._v(" "),v("p",[_._v("无权码")]),_._v(" "),v("p",[_._v("在8421码的基础上加3得来")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("0")]),_._v(" "),v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")]),_._v(" "),v("th",[_._v("4")]),_._v(" "),v("th",[_._v("5")]),_._v(" "),v("th",[_._v("6")]),_._v(" "),v("th",[_._v("7")]),_._v(" "),v("th",[_._v("8")]),_._v(" "),v("th",[_._v("9")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0011")]),_._v(" "),v("td",[_._v("0100")]),_._v(" "),v("td",[_._v("0101")]),_._v(" "),v("td",[_._v("0110")]),_._v(" "),v("td",[_._v("0111")]),_._v(" "),v("td",[_._v("1000")]),_._v(" "),v("td",[_._v("1001")]),_._v(" "),v("td",[_._v("1010")]),_._v(" "),v("td",[_._v("1011")]),_._v(" "),v("td",[_._v("1100")])])])]),_._v(" "),v("h4",{attrs:{id:"_2421码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2421码"}},[_._v("#")]),_._v(" 2421码")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("2"),v("sup",[_._v("1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("0")])]),_._v(" "),v("th",[_._v("权重")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("2")]),_._v(" "),v("td",[_._v("4")]),_._v(" "),v("td",[_._v("2")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("真值")])]),_._v(" "),v("tr",[v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("4个比特位")])]),_._v(" "),v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("3 = 2 + 1 = 0011B")])]),_._v(" "),v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("5 = 2 + 2 + 1 = 1101B")])])])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("0")]),_._v(" "),v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")]),_._v(" "),v("th",[_._v("4")]),_._v(" "),v("th",[_._v("5")]),_._v(" "),v("th",[_._v("6")]),_._v(" "),v("th",[_._v("7")]),_._v(" "),v("th",[_._v("8")]),_._v(" "),v("th",[_._v("9")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0000")]),_._v(" "),v("td",[_._v("0001")]),_._v(" "),v("td",[_._v("0010")]),_._v(" "),v("td",[_._v("0011")]),_._v(" "),v("td",[_._v("0100")]),_._v(" "),v("td",[_._v("1011")]),_._v(" "),v("td",[_._v("1100")]),_._v(" "),v("td",[_._v("1101")]),_._v(" "),v("td",[_._v("1110")]),_._v(" "),v("td",[_._v("1111")])])])]),_._v(" "),v("p",[_._v("2421码规定：")]),_._v(" "),v("p",[_._v("0～4编码以0开头，5以后的数字以1开头。")]),_._v(" "),v("h3",{attrs:{id:"字符与字符串"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符与字符串"}},[_._v("#")]),_._v(" 字符与字符串")]),_._v(" "),v("p",[_._v("ASCII码")]),_._v(" "),v("p",[_._v("可印刷字符：32-126")]),_._v(" "),v("p",[_._v("其余为控制、通信字符：0-31，127")]),_._v(" "),v("p",[_._v("汉字编码")]),_._v(" "),v("h3",{attrs:{id:"奇偶校验码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#奇偶校验码"}},[_._v("#")]),_._v(" 奇偶校验码")]),_._v(" "),v("p",[_._v("码距")]),_._v(" "),v("h3",{attrs:{id:"海明校验码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#海明校验码"}},[_._v("#")]),_._v(" 海明校验码")]),_._v(" "),v("p",[_._v("纠错能力")]),_._v(" "),v("p",[_._v("检错能力")]),_._v(" "),v("h3",{attrs:{id:"循环冗余校验码-crc码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#循环冗余校验码-crc码"}},[_._v("#")]),_._v(" 循环冗余校验码 CRC码")]),_._v(" "),v("p",[_._v("约定除数，检验余数")]),_._v(" "),v("h3",{attrs:{id:"定点数的表示"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定点数的表示"}},[_._v("#")]),_._v(" 定点数的表示")]),_._v(" "),v("p",[_._v("定点数：小数点的位置固定，例如：996.007    --常规计数")]),_._v(" "),v("p",[_._v("浮点数：小数点的位置不固定，例如；9.96007✖️10"),v("sup",[_._v("2")]),_._v("  -- 科学计数法")]),_._v(" "),v("h4",{attrs:{id:"无符号数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#无符号数"}},[_._v("#")]),_._v(" 无符号数")]),_._v(" "),v("p",[_._v("定义：整个机器字长的全部二进制位均为数值位，没有符号位，相当于数的绝对值。")]),_._v(" "),v("p",[_._v("表示范围：")]),_._v(" "),v("p",[_._v("前提条件，用多少个比特位表示。")]),_._v(" "),v("p",[_._v("8位二进制数：2"),v("sup",[_._v("8")]),_._v("种不同的状态 0000 0000 ～ 1111 1111（0 ～ 255）")]),_._v(" "),v("p",[_._v("n位的无符号数表示范围为：0～2"),v("sup",[_._v("n-1")])]),_._v(" "),v("p",[v("em",[_._v("无符号数只能表示整数，不能表示小数。")])]),_._v(" "),v("h4",{attrs:{id:"有符号数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#有符号数"}},[_._v("#")]),_._v(" 有符号数")]),_._v(" "),v("p",[_._v("有符号位")]),_._v(" "),v("h5",{attrs:{id:"定点整数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定点整数"}},[_._v("#")]),_._v(" 定点整数")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("符号位")]),_._v(" "),v("th",[_._v("数")]),_._v(" "),v("th",[_._v("值")]),_._v(" "),v("th",[_._v("部")]),_._v(" "),v("th",[_._v("分")]),_._v(" "),v("th",[_._v("小数点（隐含）")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v(".")])])])]),_._v(" "),v("h5",{attrs:{id:"定点小数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定点小数"}},[_._v("#")]),_._v(" 定点小数")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("符号位")]),_._v(" "),v("th",[_._v("小数点（隐含）")]),_._v(" "),v("th",[_._v("数")]),_._v(" "),v("th",[_._v("值")]),_._v(" "),v("th",[_._v("部")]),_._v(" "),v("th",[_._v("分")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("x")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")]),_._v(" "),v("td",[_._v("x")])])])]),_._v(" "),v("p",[_._v("用定点的方式表示19.75，则需要分别保存整数部分和小数部分。")]),_._v(" "),v("p",[_._v("用来表示数值部分的二进制位也称作“尾数”。")]),_._v(" "),v("p",[_._v("用[x]"),v("sub",[_._v("原")]),_._v("、[x]"),v("sub",[_._v("反")]),_._v("、[x]"),v("sub",[_._v("补")]),_._v("、[x]"),v("sub",[_._v("移")]),_._v("的书写方式来表示x的原码、反码、补码、移码。")]),_._v(" "),v("h4",{attrs:{id:"原码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原码"}},[_._v("#")]),_._v(" 原码")]),_._v(" "),v("p",[_._v("用尾数表示真值的绝对值，符号位“0/1”对应“正/负”。")]),_._v(" "),v("p",[v("em",[_._v("若机器字长为 n+1 位，则尾数占 n 位。")])]),_._v(" "),v("p",[_._v("定点整数的表示范围：-(2"),v("sup",[_._v("n")]),_._v(" - 1) ~ 2"),v("sup",[_._v("n")]),_._v(" - 1")]),_._v(" "),v("p",[_._v("定点小数的表示范围：-(1 - 2"),v("sup",[_._v("-n")]),_._v(" ) ~ 1 - 2"),v("sup",[_._v("-n")])]),_._v(" "),v("p",[_._v("真值0有 +0 和 -0 两种形式。")]),_._v(" "),v("p",[_._v("如机器字长为8位。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("符号")]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("6")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("5")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("4")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("3")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("0")])]),_._v(" "),v("th")])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("+19D = 16 + 2 + 1 = 0001 0011")])]),_._v(" "),v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("-19D = 16 + 2 + 1 = 1001 0011")])])])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("符号")]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-3")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-4")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-5")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-6")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("-7")])]),_._v(" "),v("th")])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("+0.75D = 0.5 + 0.25 = 0110 0000")])]),_._v(" "),v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("-0.75D = 0.5 + 0.25 = 1110 0000")])])])]),_._v(" "),v("h4",{attrs:{id:"反码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#反码"}},[_._v("#")]),_._v(" 反码")]),_._v(" "),v("p",[_._v("若符号位为0，则反码与原码相同")]),_._v(" "),v("p",[_._v("若符号位为1，则数值位全部取反")]),_._v(" "),v("p",[v("em",[_._v("反码是原码转换为补码的一个中间态，实际中并没有什么用")])]),_._v(" "),v("p",[_._v("定点整数的表示范围：-(2"),v("sup",[_._v("n")]),_._v(" - 1) ~ 2"),v("sup",[_._v("n")]),_._v(" - 1")]),_._v(" "),v("p",[_._v("定点小数的表示范围：-(1 - 2"),v("sup",[_._v("-n")]),_._v(" ) ~ 1 - 2"),v("sup",[_._v("-n")])]),_._v(" "),v("p",[_._v("真值0有 +0 和 -0 两种形式。")]),_._v(" "),v("h4",{attrs:{id:"补码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#补码"}},[_._v("#")]),_._v(" 补码")]),_._v(" "),v("p",[_._v("若符号位为0，则补码与原码相同")]),_._v(" "),v("p",[_._v("若符号位为1，则补码=反码末位+1（要考虑进位）")]),_._v(" "),v("p",[_._v("定点整数[x]"),v("sub",[_._v("补")]),_._v(" = 1,0000000 表示 x = -2"),v("sup",[_._v("7")]),_._v(" = -128")]),_._v(" "),v("p",[_._v("定点整数的表示范围：-2"),v("sup",[_._v("n")]),_._v(" ~ 2"),v("sup",[_._v("n")]),_._v(" - 1（比原码多表示一个-2"),v("sup",[_._v("n")]),_._v("）")]),_._v(" "),v("p",[_._v("定点小数[x]"),v("sub",[_._v("补")]),_._v(" = 1,0000000 表示 x = -1")]),_._v(" "),v("p",[_._v("定点小数的表示范围：-1  ~ 1 - 2"),v("sup",[_._v("-n")])]),_._v(" "),v("p",[_._v("真值0只有一种形式。")]),_._v(" "),v("h4",{attrs:{id:"移码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移码"}},[_._v("#")]),_._v(" 移码")]),_._v(" "),v("p",[_._v("在补码的基础上将符号位取反。")]),_._v(" "),v("p",[_._v("移码只能用于表示整数。")]),_._v(" "),v("p",[_._v("移码表示的整数很方便对比大小。")]),_._v(" "),v("p",[_._v("真值0只有一种形式。")]),_._v(" "),v("h4",{attrs:{id:"拓展"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#拓展"}},[_._v("#")]),_._v(" 拓展")]),_._v(" "),v("p",[_._v("由[x]"),v("sub",[_._v("补")]),_._v("快速求[-x]"),v("sub",[_._v("补")]),_._v("或由[-x]"),v("sub",[_._v("补")]),_._v("快速求[x]"),v("sub",[_._v("补")]),_._v("的方法。")]),_._v(" "),v("p",[_._v("符号位、数值位全部取反，末位+1。")]),_._v(" "),v("p",[_._v("由[-x]"),v("sub",[_._v("补")]),_._v("快速求[-x]"),v("sub",[_._v("原")]),_._v("的方法。")]),_._v(" "),v("ol",[v("li",[_._v("符号位保持不变、数值位全部取反，末位+1。")]),_._v(" "),v("li",[_._v("最右边的1及其右边同原码，最右边的1的左边同反码")])]),_._v(" "),v("h3",{attrs:{id:"原码补码移码的作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原码补码移码的作用"}},[_._v("#")]),_._v(" 原码补码移码的作用")]),_._v(" "),v("h4",{attrs:{id:"原码-反码-补码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原码-反码-补码"}},[_._v("#")]),_._v(" 原码/反码/补码")]),_._v(" "),v("p",[_._v("用硬件电路实现加法是简单的，实现减法是比较困难的，如果硬件既要实现加法功能又要实现减法功能就会导致硬件的设计成本增加，同时复杂度也增加。")]),_._v(" "),v("p",[_._v("用加法运算实现减法运算。")]),_._v(" "),v("h6",{attrs:{id:"时钟的例子"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时钟的例子"}},[_._v("#")]),_._v(" 时钟的例子")]),_._v(" "),v("p",[_._v("将时钟从10点调到7点，逆时针调3个，顺时针调9个。")]),_._v(" "),v("p",[_._v("10 -3 = 7")]),_._v(" "),v("p",[_._v("10 + 9 = 19，19 mod 12 = 7")]),_._v(" "),v("p",[_._v("-3 = 9(mod 12)")]),_._v(" "),v("h6",{attrs:{id:"模运算的性质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模运算的性质"}},[_._v("#")]),_._v(" 模运算的性质")]),_._v(" "),v("p",[_._v("-3 = (-1)*12 + 9")]),_._v(" "),v("p",[_._v("9 = 0*12 + 9")]),_._v(" "),v("p",[_._v("21 = 1*12 + 9")]),_._v(" "),v("p",[_._v("33 = 2*12 + 9")]),_._v(" "),v("p",[_._v("-15 = (-2)*12 + 9")]),_._v(" "),v("p",[_._v("...")]),_._v(" "),v("p",[_._v("（mod12）把所有整数分为12类（余数为0～11）")]),_._v(" "),v("p",[_._v("mod12余数相同的数，都是同一类，都是等价的")]),_._v(" "),v("p",[_._v("即10+(-3)、10+9、10+21...在（mod12）的条件下效果相同")]),_._v(" "),v("p",[_._v("｜-3｜+｜9｜ = 12，我们称两个数互为补数。")]),_._v(" "),v("p",[_._v("模 - a的绝对值 = a的补数（是正数）")]),_._v(" "),v("h6",{attrs:{id:"有符号数的加法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#有符号数的加法"}},[_._v("#")]),_._v(" 有符号数的加法")]),_._v(" "),v("p",[_._v("用8bit可表示的范围：0000 0000 ～ 2"),v("sup",[_._v("8")]),_._v(" -1，天然模2"),v("sup",[_._v("8")])]),_._v(" "),v("p",[_._v("14 + -14 = 0;")]),_._v(" "),v("p",[_._v("0000 1110 + 1000 1110 = 1001 1100 = -28")]),_._v(" "),v("p",[_._v("期望得到0，实际得到-28")]),_._v(" "),v("p",[_._v("​\t0000 1110")]),_._v(" "),v("p",[_._v("+ 1000 1110")]),_._v(" "),v("p",[_._v("-------------------")]),_._v(" "),v("p",[_._v("​\t 0000 1110")]),_._v(" "),v("p",[_._v("+ 10000 0000 (2"),v("sup",[_._v("8")]),_._v(") - 0000 1110")]),_._v(" "),v("p",[_._v("-------------------")]),_._v(" "),v("p",[_._v("​\t0000 1110")]),_._v(" "),v("p",[_._v("+ 1111 0010")]),_._v(" "),v("p",[_._v("-------------------")]),_._v(" "),v("p",[_._v("10000 0000（高位1自动被舍弃，得到期望的结果0）")]),_._v(" "),v("p",[_._v("补码的作用：使用补码可将减法操作转变为等价的加法，ALU中无需集成减法器。执行加法操作时，符号位一起参与运算。")]),_._v(" "),v("h4",{attrs:{id:"移码-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移码-2"}},[_._v("#")]),_._v(" 移码")]),_._v(" "),v("p",[_._v("真值的递增和移码的绝对值的递增是保持一致的，所以用移码表示的整数很方便对比大小。")]),_._v(" "),v("h3",{attrs:{id:"移位运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移位运算"}},[_._v("#")]),_._v(" 移位运算")]),_._v(" "),v("h4",{attrs:{id:"算数移位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算数移位"}},[_._v("#")]),_._v(" 算数移位")]),_._v(" "),v("p",[_._v("985.211")]),_._v(" "),v("p",[_._v("小数点后移1位相当✖️10"),v("sup",[_._v("1")])]),_._v(" "),v("p",[_._v("小数点前移1位相当➗10"),v("sup",[_._v("1")])]),_._v(" "),v("p",[v("strong",[_._v("定义：")])]),_._v(" "),v("p",[_._v("通过改变各个数码位和小数点的相对位置，从而改变各个数码位的位权。可用移位运算实现乘法、除法。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th"),_._v(" "),v("th",[_._v("符号位")]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("6")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("5")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("4")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("3")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("2")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("1")])]),_._v(" "),v("th",[_._v("2"),v("sup",[_._v("0")])]),_._v(" "),v("th",[_._v("小数点")]),_._v(" "),v("th"),_._v(" "),v("th",[_._v("数值")]),_._v(" "),v("th",[_._v("右移")]),_._v(" "),v("th",[_._v("0～127")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("原码")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("-20D")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("算数右移")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("-10D")]),_._v(" "),v("td",[_._v("1位")]),_._v(" "),v("td",[_._v("-20➗2"),v("sup",[_._v("1")])])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("-5D")]),_._v(" "),v("td",[_._v("2位")]),_._v(" "),v("td",[_._v("-20➗2"),v("sup",[_._v("2")])])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("-2D")]),_._v(" "),v("td",[_._v("3位")]),_._v(" "),v("td",[_._v("-20➗2"),v("sup",[_._v("3")])])]),_._v(" "),v("tr",[v("td",[_._v("算数左移")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("-40D")]),_._v(" "),v("td",[_._v("1位")]),_._v(" "),v("td",[_._v("-20✖️2"),v("sup",[_._v("1")])])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("-80D")]),_._v(" "),v("td",[_._v("2位")]),_._v(" "),v("td",[_._v("-20✖️2"),v("sup",[_._v("2")])])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v(".")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("-32D")]),_._v(" "),v("td",[_._v("3位")]),_._v(" "),v("td",[_._v("-20✖️2"),v("sup",[_._v("3")])])])])]),_._v(" "),v("p",[_._v("-20 / 8 = 2.5")]),_._v(" "),v("p",[_._v("原码的算数移位：符号位保持不变，仅对数值进行移位。")]),_._v(" "),v("p",[_._v("右移：高位补0，低位舍弃。若舍弃的位等于0，则相当于➗2，若舍弃的位不等于0，则会丢失精度。")]),_._v(" "),v("p",[_._v("左移：低位补0，高位舍弃。若舍弃的位等于0，则相当于✖️2，若舍弃的位不等于0，则会出现严重误差。")]),_._v(" "),v("h4",{attrs:{id:"反码的算数移位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#反码的算数移位"}},[_._v("#")]),_._v(" 反码的算数移位")]),_._v(" "),v("p",[v("strong",[_._v("正数")])]),_._v(" "),v("p",[_._v("右移：高位补0，低位舍弃。")]),_._v(" "),v("p",[_._v("左移：低位补0，高位舍弃。")]),_._v(" "),v("p",[v("strong",[_._v("负数")])]),_._v(" "),v("p",[_._v("右移：高位补1，低位舍弃。")]),_._v(" "),v("p",[_._v("左移：低位补1，高位舍弃。")]),_._v(" "),v("h4",{attrs:{id:"补码的算数移位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#补码的算数移位"}},[_._v("#")]),_._v(" 补码的算数移位")]),_._v(" "),v("p",[v("strong",[_._v("正数")])]),_._v(" "),v("p",[_._v("右移：高位补0，低位舍弃。")]),_._v(" "),v("p",[_._v("左移：低位补0，高位舍弃。")]),_._v(" "),v("p",[v("strong",[_._v("负数")])]),_._v(" "),v("p",[_._v("右移：高位补1，低位舍弃。同反码。")]),_._v(" "),v("p",[_._v("左移：低位补0，高位舍弃。同补码。")]),_._v(" "),v("h5",{attrs:{id:"算数移位应用举例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算数移位应用举例"}},[_._v("#")]),_._v(" 算数移位应用举例")]),_._v(" "),v("p",[_._v("计算机如何处理-20 x 7")]),_._v(" "),v("p",[_._v("7D = 111B = 2"),v("sup",[_._v("0")]),_._v("+2"),v("sup",[_._v("1")]),_._v("+2"),v("sup",[_._v("2")])]),_._v(" "),v("p",[_._v("=> -20 x (2"),v("sup",[_._v("0")]),_._v("+2"),v("sup",[_._v("1")]),_._v("+2"),v("sup",[_._v("2")]),_._v(")")]),_._v(" "),v("p",[_._v("=> -20 -> 左移0位  + -20 -> 左移1位 + -20 -> 左移2位")]),_._v(" "),v("p",[v("em",[_._v("计算机硬件实现乘法是基于算数移位和加法进行的。")])]),_._v(" "),v("h4",{attrs:{id:"逻辑移位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逻辑移位"}},[_._v("#")]),_._v(" 逻辑移位")]),_._v(" "),v("p",[_._v("右移：高位补0，低位舍弃。")]),_._v(" "),v("p",[_._v("左移：低位补0，高位舍弃。")]),_._v(" "),v("p",[v("em",[_._v("可以把逻辑移位看作是对“无符号数”的算数移位")]),_._v("。")]),_._v(" "),v("h5",{attrs:{id:"逻辑移位应用举例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逻辑移位应用举例"}},[_._v("#")]),_._v(" 逻辑移位应用举例")]),_._v(" "),v("p",[_._v("RGB颜色的存储")]),_._v(" "),v("p",[_._v("RGB(102, 139, 139)")]),_._v(" "),v("p",[_._v("R = 102D -> 01100110")]),_._v(" "),v("p",[_._v("G = 139D -> 10001011")]),_._v(" "),v("p",[_._v("B = 139D -> 10001011")]),_._v(" "),v("p",[_._v("用3B存储无符号数102，并逻辑左移16位。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")]),_._v(" "),v("th",[_._v("4")]),_._v(" "),v("th",[_._v("5")]),_._v(" "),v("th",[_._v("6")]),_._v(" "),v("th",[_._v("7")]),_._v(" "),v("th",[_._v("8")]),_._v(" "),v("th",[_._v("9")]),_._v(" "),v("th",[_._v("10")]),_._v(" "),v("th",[_._v("11")]),_._v(" "),v("th",[_._v("12")]),_._v(" "),v("th",[_._v("13")]),_._v(" "),v("th",[_._v("14")]),_._v(" "),v("th",[_._v("15")]),_._v(" "),v("th",[_._v("16")]),_._v(" "),v("th",[_._v("17")]),_._v(" "),v("th",[_._v("18")]),_._v(" "),v("th",[_._v("19")]),_._v(" "),v("th",[_._v("20")]),_._v(" "),v("th",[_._v("21")]),_._v(" "),v("th",[_._v("22")]),_._v(" "),v("th",[_._v("23")]),_._v(" "),v("th",[_._v("24")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")])]),_._v(" "),v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")])])])]),_._v(" "),v("p",[_._v("用3B存储无符号数139，并逻辑左移8位。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")]),_._v(" "),v("th",[_._v("4")]),_._v(" "),v("th",[_._v("5")]),_._v(" "),v("th",[_._v("6")]),_._v(" "),v("th",[_._v("7")]),_._v(" "),v("th",[_._v("8")]),_._v(" "),v("th",[_._v("9")]),_._v(" "),v("th",[_._v("10")]),_._v(" "),v("th",[_._v("11")]),_._v(" "),v("th",[_._v("12")]),_._v(" "),v("th",[_._v("13")]),_._v(" "),v("th",[_._v("14")]),_._v(" "),v("th",[_._v("15")]),_._v(" "),v("th",[_._v("16")]),_._v(" "),v("th",[_._v("17")]),_._v(" "),v("th",[_._v("18")]),_._v(" "),v("th",[_._v("19")]),_._v(" "),v("th",[_._v("20")]),_._v(" "),v("th",[_._v("21")]),_._v(" "),v("th",[_._v("22")]),_._v(" "),v("th",[_._v("23")]),_._v(" "),v("th",[_._v("24")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")])])])]),_._v(" "),v("p",[_._v("用3B存储无符号数139。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")]),_._v(" "),v("th",[_._v("4")]),_._v(" "),v("th",[_._v("5")]),_._v(" "),v("th",[_._v("6")]),_._v(" "),v("th",[_._v("7")]),_._v(" "),v("th",[_._v("8")]),_._v(" "),v("th",[_._v("9")]),_._v(" "),v("th",[_._v("10")]),_._v(" "),v("th",[_._v("11")]),_._v(" "),v("th",[_._v("12")]),_._v(" "),v("th",[_._v("13")]),_._v(" "),v("th",[_._v("14")]),_._v(" "),v("th",[_._v("15")]),_._v(" "),v("th",[_._v("16")]),_._v(" "),v("th",[_._v("17")]),_._v(" "),v("th",[_._v("18")]),_._v(" "),v("th",[_._v("19")]),_._v(" "),v("th",[_._v("20")]),_._v(" "),v("th",[_._v("21")]),_._v(" "),v("th",[_._v("22")]),_._v(" "),v("th",[_._v("23")]),_._v(" "),v("th",[_._v("24")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])])])]),_._v(" "),v("p",[_._v("相加得到3B的RGB值。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")]),_._v(" "),v("th",[_._v("4")]),_._v(" "),v("th",[_._v("5")]),_._v(" "),v("th",[_._v("6")]),_._v(" "),v("th",[_._v("7")]),_._v(" "),v("th",[_._v("8")]),_._v(" "),v("th",[_._v("9")]),_._v(" "),v("th",[_._v("10")]),_._v(" "),v("th",[_._v("11")]),_._v(" "),v("th",[_._v("12")]),_._v(" "),v("th",[_._v("13")]),_._v(" "),v("th",[_._v("14")]),_._v(" "),v("th",[_._v("15")]),_._v(" "),v("th",[_._v("16")]),_._v(" "),v("th",[_._v("17")]),_._v(" "),v("th",[_._v("18")]),_._v(" "),v("th",[_._v("19")]),_._v(" "),v("th",[_._v("20")]),_._v(" "),v("th",[_._v("21")]),_._v(" "),v("th",[_._v("22")]),_._v(" "),v("th",[_._v("23")]),_._v(" "),v("th",[_._v("24")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])])])]),_._v(" "),v("h4",{attrs:{id:"循环移位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#循环移位"}},[_._v("#")]),_._v(" 循环移位")]),_._v(" "),v("p",[_._v("右移：高位补移出的低位。")]),_._v(" "),v("p",[_._v("左移：低位补移出的高位。")]),_._v(" "),v("h3",{attrs:{id:"加减运算和溢出判断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加减运算和溢出判断"}},[_._v("#")]),_._v(" 加减运算和溢出判断")]),_._v(" "),v("h4",{attrs:{id:"原码的加减运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原码的加减运算"}},[_._v("#")]),_._v(" 原码的加减运算")]),_._v(" "),v("h5",{attrs:{id:"加法运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加法运算"}},[_._v("#")]),_._v(" 加法运算")]),_._v(" "),v("p",[_._v("正 + 正 =》绝对值做加法，结果为正")]),_._v(" "),v("p",[_._v("负 + 负 =》绝对值做加法，结果为负")]),_._v(" "),v("p",[_._v("正 + 负 =》绝对值大的减绝对值小的，符号同绝对值大的数")]),_._v(" "),v("p",[_._v("正 + 负 =》绝对值大的减绝对值小的，符号同绝对值大的数")]),_._v(" "),v("h5",{attrs:{id:"减法运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#减法运算"}},[_._v("#")]),_._v(" 减法运算")]),_._v(" "),v("p",[_._v("“减数”符号取反，转变为加法。")]),_._v(" "),v("p",[_._v("正 - 负 =》正 + 正")]),_._v(" "),v("p",[_._v("负 - 正 =》负 + 负")]),_._v(" "),v("p",[_._v("正 - 正 =》正 + 负")]),_._v(" "),v("p",[_._v("负 + 正 =》负 - 负")]),_._v(" "),v("h4",{attrs:{id:"补码的加减运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#补码的加减运算"}},[_._v("#")]),_._v(" 补码的加减运算")]),_._v(" "),v("p",[_._v("因为原码的加减运算实现太复杂了，所以计算机使用补码来进行加减运算。")]),_._v(" "),v("p",[_._v("对于补码来说，无论加法还是减法，最后都会转变为加法，由加法器实现运算，符号位也参与运算。")]),_._v(" "),v("h4",{attrs:{id:"溢出判断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#溢出判断"}},[_._v("#")]),_._v(" 溢出判断")]),_._v(" "),v("p",[_._v("下溢  ｜  负数区   ｜  \t0\t｜\t正数区\t｜\t上溢")]),_._v(" "),v("p",[_._v("​\t\t\t\t-128\t\t\t\t\t\t\t  +127")]),_._v(" "),v("h6",{attrs:{id:"上溢"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#上溢"}},[_._v("#")]),_._v(" 上溢")]),_._v(" "),v("p",[_._v("只有“正数”+“正数”才会上溢 --- 正 + 正 = 负")]),_._v(" "),v("h6",{attrs:{id:"下溢"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下溢"}},[_._v("#")]),_._v(" 下溢")]),_._v(" "),v("p",[_._v("只有“负数”+“负数”才会下溢 --- 负 + 负 = 正")]),_._v(" "),v("h4",{attrs:{id:"计算机判断溢出的方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机判断溢出的方法"}},[_._v("#")]),_._v(" 计算机判断溢出的方法")]),_._v(" "),v("h5",{attrs:{id:"方法一"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法一"}},[_._v("#")]),_._v(" 方法一")]),_._v(" "),v("p",[_._v("采用一位符号位。")]),_._v(" "),v("p",[_._v("设A的符号为A"),v("sub",[_._v("s")]),_._v("，设B的符号为B"),v("sub",[_._v("s")]),_._v("，运算结果为S"),v("sub",[_._v("s")]),_._v("，则溢出逻辑表达式为：\n$$\nV = A_sB_s\\overline{S_s} + \\overline{A_s}\\overline{B_s}S_s\n$$\n若V=0，表示无溢出，")]),_._v(" "),v("p",[_._v("若V=1，表示有溢出。")]),_._v(" "),v("p",[_._v("A"),v("sub",[_._v("s")]),_._v("为1且B"),v("sub",[_._v("s")]),_._v("为1且S"),v("sub",[_._v("s")]),_._v("为0  =>  正 + 正 = 负。")]),_._v(" "),v("p",[_._v("A"),v("sub",[_._v("s")]),_._v("为0且B"),v("sub",[_._v("s")]),_._v("为0且S"),v("sub",[_._v("s")]),_._v("为1  =>  负 + 负 = 正。")]),_._v(" "),v("h6",{attrs:{id:"逻辑表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逻辑表达式"}},[_._v("#")]),_._v(" 逻辑表达式")]),_._v(" "),v("p",[_._v("与：如ABC，表示A与B与C")]),_._v(" "),v("p",[_._v("仅当A、B、C均为1时，ABC为1，A、B、C中有一个或多个为0，则ABC为0")]),_._v(" "),v("p",[_._v("或：如A+B+C，表示A或B或C")]),_._v(" "),v("p",[_._v("仅当A、B、C均为0时，A+B+C为0，A、B、C中有一个或多个为1，则A+B+C为1")]),_._v(" "),v("p",[_._v("非：如$\\overline{\\text{A}}$，表示A非")]),_._v(" "),v("p",[_._v("若A为1，则$\\overline{A}$为0")]),_._v(" "),v("p",[_._v("若A为0，则$\\overline{A}$为1")]),_._v(" "),v("h5",{attrs:{id:"方法二"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法二"}},[_._v("#")]),_._v(" 方法二")]),_._v(" "),v("p",[_._v("采用一位符号位，根据数据位进位情况判断溢出，符号位的进位C"),v("sub",[_._v("s")]),_._v("，最高数值位的进位C"),v("sub",[_._v("1")])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th"),_._v(" "),v("th",[_._v("符号位的进位C"),v("sub",[_._v("s")])]),_._v(" "),v("th",[_._v("最高数值位的进位C"),v("sub",[_._v("1")])])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("上溢")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td",[_._v("下溢")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")])])])]),_._v(" "),v("p",[_._v("即C"),v("sub",[_._v("s")]),_._v("与C"),v("sub",[_._v("1")]),_._v("不同时有溢出，计算机使用异或运算判断溢出。\n$$\nV = C_s \\oplus C_1\n$$")]),_._v(" "),v("p",[_._v("若V=0，表示无溢出，V=1，表示有溢出。")]),_._v(" "),v("h5",{attrs:{id:"方法三"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法三"}},[_._v("#")]),_._v(" 方法三")]),_._v(" "),v("p",[_._v("采用双符号")]),_._v(" "),v("p",[_._v("正数符号位为00，负数符号位为11")]),_._v(" "),v("p",[_._v("正+正，当符号位出现01时，则为上溢，")]),_._v(" "),v("p",[_._v("负+负，当符号位出现10时，则为下溢。")]),_._v(" "),v("p",[_._v("记两个符号位为S"),v("sub",[_._v("s1")]),_._v("，S"),v("sub",[_._v("s2")]),_._v("\n$$\nV = S_{s1} \\oplus S_{s2}\n$$\n若V=0，表示无溢出，V=1，表示有溢出。")]),_._v(" "),v("p",[v("em",[_._v("双符号位补码又称：模4补码，")])]),_._v(" "),v("p",[v("em",[_._v("单符号位补码又称：模2补码。")])]),_._v(" "),v("p",[v("em",[_._v("双符号位补码实际存储时只存储1个符号位，运算时会复制一个符号位")])]),_._v(" "),v("h4",{attrs:{id:"符号拓展"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#符号拓展"}},[_._v("#")]),_._v(" 符号拓展")]),_._v(" "),v("p",[_._v("当发生溢出时，可以将短数据转换成长数据（int -> long）。多出来的位怎么填补？")]),_._v(" "),v("p",[_._v("Eg：8位 -> 16位")]),_._v(" "),v("h5",{attrs:{id:"正整数-原、反、补码表示都一样"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正整数-原、反、补码表示都一样"}},[_._v("#")]),_._v(" 正整数（原、反、补码表示都一样）")]),_._v(" "),v("p",[_._v("0,1011010\t\t->\t\t0,00000000 1011010")]),_._v(" "),v("h5",{attrs:{id:"负整数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#负整数"}},[_._v("#")]),_._v(" 负整数")]),_._v(" "),v("p",[_._v("原码：1,1011010\t\t->\t\t1,00000000 1011010")]),_._v(" "),v("p",[_._v("反码：1,1011010\t\t->\t\t1,11111111 0100101")]),_._v(" "),v("p",[_._v("补码：1,1011010\t\t->\t\t1,11111111 0100110")]),_._v(" "),v("h5",{attrs:{id:"正小数-原、反、补码表示都一样"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正小数-原、反、补码表示都一样"}},[_._v("#")]),_._v(" 正小数（原、反、补码表示都一样）")]),_._v(" "),v("p",[_._v("0.1011010\t\t->\t\t0.1011010 00000000")]),_._v(" "),v("h5",{attrs:{id:"负小数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#负小数"}},[_._v("#")]),_._v(" 负小数")]),_._v(" "),v("p",[_._v("原码：1.1011010\t\t→\t\t1.1011010 00000000")]),_._v(" "),v("p",[_._v("反码：1.1011010\t\t→\t\t1.0100101 11111111")]),_._v(" "),v("p",[_._v("补码：1.1011010\t\t→\t\t1.0100110 00000000")]),_._v(" "),v("h3",{attrs:{id:"原码的乘法运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原码的乘法运算"}},[_._v("#")]),_._v(" 原码的乘法运算")]),_._v(" "),v("h4",{attrs:{id:"十进制的乘法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#十进制的乘法"}},[_._v("#")]),_._v(" 十进制的乘法")]),_._v(" "),v("p",[_._v("​\t0.985")]),_._v(" "),v("p",[_._v("x  0.211")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("​\t  985")]),_._v(" "),v("p",[_._v("​    985")]),_._v(" "),v("p",[_._v("1970")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("0.207835")]),_._v(" "),v("p",[_._v("0.211 = 2x10"),v("sup",[_._v("-1")]),_._v(" + 1x10"),v("sup",[_._v("-2")]),_._v(" + 1x10"),v("sup",[_._v("-3")])]),_._v(" "),v("p",[_._v("0.985 = 985x10"),v("sup",[_._v("-3")])]),_._v(" "),v("p",[_._v("0.985 x 0.211 = (985 x 1 x 10"),v("sup",[_._v("-6")]),_._v(") +  (985 x 1 x 10"),v("sup",[_._v("-5")]),_._v(") +  (985 x 2 x 10"),v("sup",[_._v("-4")]),_._v(")")]),_._v(" "),v("p",[_._v("​\t0.985")]),_._v(" "),v("p",[_._v("x  0.211")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("0.000985")]),_._v(" "),v("p",[_._v("0.00985")]),_._v(" "),v("p",[_._v("0.1970")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("0.207835")]),_._v(" "),v("h4",{attrs:{id:"二进制的乘法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二进制的乘法"}},[_._v("#")]),_._v(" 二进制的乘法")]),_._v(" "),v("p",[_._v("与十进制同理")]),_._v(" "),v("p",[_._v("​\t0.1101")]),_._v(" "),v("p",[_._v("x  0.1011")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("​\t   1101")]),_._v(" "),v("p",[_._v("​     1101")]),_._v(" "),v("p",[_._v("0000")]),_._v(" "),v("p",[_._v("1101")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("0.10001111")]),_._v(" "),v("p",[_._v("乘数：0.1011 = 1x2"),v("sup",[_._v("-1")]),_._v(" + 0x2"),v("sup",[_._v("-2")]),_._v(" + 1x2"),v("sup",[_._v("-3")]),_._v(" + 1x2"),v("sup",[_._v("-4")])]),_._v(" "),v("p",[_._v("被乘数：0.1101 = 1101x2"),v("sup",[_._v("-4")])]),_._v(" "),v("p",[_._v("0.1101x 0.1011 = (1101 x 1 x 2"),v("sup",[_._v("-8")]),_._v(") +  (1101 x 1 x 2"),v("sup",[_._v("-7")]),_._v(") +  (1101 x 0 x 2"),v("sup",[_._v("-6")]),_._v(") +  (1101 x 1 x 2"),v("sup",[_._v("-5")]),_._v(")")]),_._v(" "),v("p",[_._v("​\t0.1101")]),_._v(" "),v("p",[_._v("x  0.1011")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("0.00001101")]),_._v(" "),v("p",[_._v("0.0001101")]),_._v(" "),v("p",[_._v("0.000000")]),_._v(" "),v("p",[_._v("0.01101")]),_._v(" "),v("p",[_._v("-------------")]),_._v(" "),v("p",[_._v("0.10001111")]),_._v(" "),v("h4",{attrs:{id:"计算机如何实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机如何实现"}},[_._v("#")]),_._v(" 计算机如何实现")]),_._v(" "),v("p",[_._v("实现方法：先加法再移位，重复n次")]),_._v(" "),v("p",[_._v("符号位单独处理：异或运算\n$$\nV = X_s \\oplus Y_s\n$$\n数值位取绝对值进行乘法计算")]),_._v(" "),v("p",[v("em",[_._v("每次移位是“原码逻辑右移”")])]),_._v(" "),v("p",[_._v("如：设机器字长为 n + 1 = 5位（含一位符号位），[x]"),v("sub",[_._v("原")]),_._v(" = 1.1101，[y]"),v("sub",[_._v("原")]),_._v(" = 0.1011，采用原码一位乘法求x*y。")]),_._v(" "),v("p",[_._v("​\t\t乘积高位\t\t\t\t\t乘数、乘积低位")]),_._v(" "),v("p",[_._v("​\t\t\tACC\t\t\t\t\t\t\t\tMQ")]),_._v(" "),v("p",[v("font",{attrs:{color:"red"}},[_._v("0\t1\t0\t0\t0")]),_._v("\t→\t\t"),v("font",{attrs:{color:"red"}},[_._v("1\t1\t1\t1")]),_._v("\t0\t1\t0\t1\t1")],1),_._v(" "),v("p",[_._v("​\t\t\t↑↓")]),_._v(" "),v("p",[_._v("​\t\t  ALU")]),_._v(" "),v("p",[_._v("​\t\t\t↑")]),_._v(" "),v("p",[_._v("0\t1\t1\t0\t1")]),_._v(" "),v("p",[_._v("​\t\t\tX")]),_._v(" "),v("p",[_._v("​\t\t被乘数")]),_._v(" "),v("p",[_._v("​")]),_._v(" "),v("h3",{attrs:{id:"补码的乘法运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#补码的乘法运算"}},[_._v("#")]),_._v(" 补码的乘法运算")]),_._v(" "),v("p",[_._v("补码一位乘法：")]),_._v(" "),v("p",[_._v("进行n轮加法、移位，最后再多来一次加法。")]),_._v(" "),v("p",[_._v("每次加法可能+0、+[x]补、+[-x]补")]),_._v(" "),v("p",[_._v("每次移位是“补码的算数右移”")]),_._v(" "),v("p",[_._v("乘数的符号位参与运算")]),_._v(" "),v("p",[_._v("根据当前MQ中的最低位、辅助位来确定加什么：")]),_._v(" "),v("ul",[v("li",[_._v("辅助位 - MQ中最低位 = 1时，(ACC)+[x]补")]),_._v(" "),v("li",[_._v("辅助位 - MQ中最低位 = 0时，(ACC)+0")]),_._v(" "),v("li",[_._v("辅助位 - MQ中最低位 = -1时，(ACC)+[-x]补")])]),_._v(" "),v("p",[_._v("【辅助位】：MQ扩充一位用来表示辅助位，辅助位初始为0，每次右移会使MQ的最低位顶替原本的辅助位，（事实上MQ共n+2位）")]),_._v(" "),v("h3",{attrs:{id:"原码的除法运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原码的除法运算"}},[_._v("#")]),_._v(" 原码的除法运算")]),_._v(" "),v("p",[_._v("x / y = a...b(余数b) → x = ay + b")]),_._v(" "),v("p",[_._v("设机器字长为 n + 1 = 5位（含一位符号位，n=4），[x]"),v("sub",[_._v("原")]),_._v(" = 0.1011，[y]"),v("sub",[_._v("原")]),_._v(" = 0.1101，求x/y。")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t 0.1101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("01101\t01011")]),_._v(" "),v("p",[_._v("​\t\t\t   00000")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t 10110")]),_._v(" "),v("p",[_._v("​\t\t\t\t 01101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t10010")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t01101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t   01010")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t   00000")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t     10100")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t 01101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t0111")]),_._v(" "),v("p",[_._v("0.1011 = 0.1101 x 0.1101 + 0.00000111")]),_._v(" "),v("p",[_._v("乘数：0.1101 = 1x2"),v("sup",[_._v("-1")]),_._v(" + 1x2"),v("sup",[_._v("-2")]),_._v(" + 0x2"),v("sup",[_._v("-3")]),_._v(" + 1x2"),v("sup",[_._v("-4")])]),_._v(" "),v("p",[_._v("被乘数：0.1101 = 1101x2"),v("sup",[_._v("-4")])]),_._v(" "),v("p",[_._v("0.1101x 0.1101 = (1101 x 1 x 2"),v("sup",[_._v("-8")]),_._v(") +  (1101 x 0 x 2"),v("sup",[_._v("-7")]),_._v(") +  (1101 x 1 x 2"),v("sup",[_._v("-6")]),_._v(") +  (1101 x 1 x 2"),v("sup",[_._v("-5")]),_._v(") + 0.00000111")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t   0.1101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("0.1101\t0.1011")]),_._v(" "),v("p",[_._v("​\t\t\t   0.0000")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.10110")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.01101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.010010")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.001101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.0001010")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.0000000")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.00010100")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.00001101")]),_._v(" "),v("p",[_._v("​\t\t\t  --------------------")]),_._v(" "),v("p",[_._v("​\t\t\t\t0.00000111")]),_._v(" "),v("h4",{attrs:{id:"计算机如何实现-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机如何实现-2"}},[_._v("#")]),_._v(" 计算机如何实现")]),_._v(" "),v("h5",{attrs:{id:"恢复余数法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#恢复余数法"}},[_._v("#")]),_._v(" 恢复余数法")]),_._v(" "),v("p",[_._v("实现方法：上商0或1，得到余数，余数末尾补0")]),_._v(" "),v("p",[_._v("符号位单独处理：异或运算\n$$\nV = X_s \\oplus Y_s\n$$\n数值位取绝对值进行除法计算")]),_._v(" "),v("p",[v("em",[_._v("每次移位是“原码逻辑左移”")])]),_._v(" "),v("p",[v("em",[_._v("计算机很傻，会先默认商1，如果商错了再改商0，并恢复余数。")])]),_._v(" "),v("p",[_._v("如：设机器字长为 n + 1 = 5位（含一位符号位，n=4），[x]"),v("sub",[_._v("原")]),_._v(" = 0.1011，[y]"),v("sub",[_._v("原")]),_._v(" = 0.1101，采用恢复余数法求x/y。")]),_._v(" "),v("p",[_._v("​\t\t被除数、余数\t\t\t\t\t 商")]),_._v(" "),v("p",[_._v("​\t\t\tACC\t\t\t\t\t\t\t\tMQ")]),_._v(" "),v("p",[_._v("0\t0\t1\t1\t1\t→\t\t"),v("font",{attrs:{color:"red"}},[_._v("0\t1\t1\t0\t1")])],1),_._v(" "),v("p",[_._v("​\t\t\t↑↓")]),_._v(" "),v("p",[_._v("​\t\t  ALU")]),_._v(" "),v("p",[_._v("​\t\t\t↑")]),_._v(" "),v("p",[_._v("0\t1\t1\t0\t1")]),_._v(" "),v("p",[_._v("​\t\t\tX")]),_._v(" "),v("p",[_._v("​\t\t除数")]),_._v(" "),v("p",[_._v("余数 = 0.0111 x 2"),v("sup",[_._v("n")])]),_._v(" "),v("h5",{attrs:{id:"加减交替法-不恢复余数法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加减交替法-不恢复余数法"}},[_._v("#")]),_._v(" 加减交替法（不恢复余数法）")]),_._v(" "),v("p",[_._v("符号位单独处理：异或运算")]),_._v(" "),v("p",[_._v("数值位取绝对值进行除法计算")]),_._v(" "),v("p",[_._v("若余数为负，则可直接商0，让余数左移1位再加上除数的绝对值，得到下一个新余数。")]),_._v(" "),v("p",[_._v("若余数为正，则商1，让余数左移1位再减去除数的绝对值，得到下一个新余数。")]),_._v(" "),v("h3",{attrs:{id:"补码的除法运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#补码的除法运算"}},[_._v("#")]),_._v(" 补码的除法运算")]),_._v(" "),v("h4",{attrs:{id:"加减交替法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加减交替法"}},[_._v("#")]),_._v(" 加减交替法")]),_._v(" "),v("p",[_._v("补码除法：")]),_._v(" "),v("ul",[v("li",[_._v("符号位参与运算")]),_._v(" "),v("li",[_._v("被除数/余数、除数采用双符号位")])]),_._v(" "),v("p",[_._v("规则：")]),_._v(" "),v("ol",[v("li",[_._v("被除数和除数同号，则被除数减去除数，异号则被除数加上除数。")]),_._v(" "),v("li",[_._v("余数和除数同号，商1，余数左移一位减去除数，余数和除数异号，商0，余数左移一位加上除数，重复n次。")]),_._v(" "),v("li",[_._v("末位恒置为1。")])]),_._v(" "),v("h3",{attrs:{id:"强制类型转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换"}},[_._v("#")]),_._v(" 强制类型转换")]),_._v(" "),v("p",[_._v("定点整数：")]),_._v(" "),v("ul",[v("li",[_._v("int：4个字节，32bit")]),_._v(" "),v("li",[_._v("short： 2个字节，16bit")])]),_._v(" "),v("p",[_._v("C语言中的定点整数是用“补码”的形式存储的。")]),_._v(" "),v("h4",{attrs:{id:"无符号与有符号互转"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#无符号与有符号互转"}},[_._v("#")]),_._v(" 无符号与有符号互转")]),_._v(" "),v("p",[_._v("不改变数据内容，改变解释方式")]),_._v(" "),v("h4",{attrs:{id:"长整数变短整数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#长整数变短整数"}},[_._v("#")]),_._v(" 长整数变短整数")]),_._v(" "),v("p",[_._v("高位截断，保留低位。")]),_._v(" "),v("h4",{attrs:{id:"短整数变长整数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#短整数变长整数"}},[_._v("#")]),_._v(" 短整数变长整数")]),_._v(" "),v("p",[_._v("符号扩展")]),_._v(" "),v("h3",{attrs:{id:"数据的存储和排列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据的存储和排列"}},[_._v("#")]),_._v(" 数据的存储和排列")]),_._v(" "),v("p",[_._v("大小端模式")]),_._v(" "),v("h3",{attrs:{id:"浮点数的表示"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数的表示"}},[_._v("#")]),_._v(" 浮点数的表示")]),_._v(" "),v("h4",{attrs:{id:"定点数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定点数"}},[_._v("#")]),_._v(" 定点数")]),_._v(" "),v("p",[_._v("科学计数法：")]),_._v(" "),v("p",[_._v("302657264526")]),_._v(" "),v("p",[_._v("+11+3.026")]),_._v(" "),v("p",[_._v("阶码+尾数")]),_._v(" "),v("h5",{attrs:{id:"阶码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#阶码"}},[_._v("#")]),_._v(" 阶码")]),_._v(" "),v("p",[_._v("阶码正负表示小数点左/右移")]),_._v(" "),v("p",[_._v("阶符+数值，反映数值大小")]),_._v(" "),v("h5",{attrs:{id:"尾数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#尾数"}},[_._v("#")]),_._v(" 尾数")]),_._v(" "),v("p",[_._v("数符表示整个数值正负")]),_._v(" "),v("p",[_._v("数符+数值，反映精度")]),_._v(" "),v("h4",{attrs:{id:"浮点数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[_._v("#")]),_._v(" 浮点数")]),_._v(" "),v("p",[_._v("阶码： 常用补码或移码表示的定点整数")]),_._v(" "),v("p",[_._v("尾数：常用原码或补码表示的定点小数")]),_._v(" "),v("p",[_._v("浮点数的真值：N = r"),v("sup",[_._v("E")]),_._v(" x M")]),_._v(" "),v("p",[_._v("r：阶码的底，通常为2")]),_._v(" "),v("p",[_._v("E：阶码E反映浮点数的表示范围及小数点的实际位置")]),_._v(" "),v("p",[_._v("M：尾数M的数值部分的位数反映浮点数的精度")]),_._v(" "),v("p",[_._v("尾数给出一个小数，阶码指明了小数点要向前/向后移动几位")]),_._v(" "),v("p",[_._v("例：阶码、尾数均用补码表示，求a、b真值的二进制表示。")]),_._v(" "),v("p",[_._v("a = 0,01;1.1001")]),_._v(" "),v("p",[_._v("阶码0,01对应真值+1；")]),_._v(" "),v("p",[_._v("尾数1.1001对应的真值-0.0111 = -(2"),v("sup",[_._v("-2")]),_._v("+2"),v("sup",[_._v("-3")]),_._v("+2"),v("sup",[_._v("-4")]),_._v(")")]),_._v(" "),v("p",[_._v("a的真值 = 2"),v("sup",[_._v("1")]),_._v(" x (-0.0111) = -0.111")]),_._v(" "),v("p",[_._v("b=0,10;0.01001")]),_._v(" "),v("p",[_._v("阶码0,10对应真值+2；")]),_._v(" "),v("p",[_._v("尾数0.01001对应的真值+0.01001 = +(2"),v("sup",[_._v("-2")]),_._v("+2"),v("sup",[_._v("-5")]),_._v(")")]),_._v(" "),v("p",[_._v("b的真值 = 2"),v("sup",[_._v("2")]),_._v(" x (+0.01001) = +1.001")]),_._v(" "),v("h4",{attrs:{id:"尾数规格化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#尾数规格化"}},[_._v("#")]),_._v(" 尾数规格化")]),_._v(" "),v("p",[_._v("如果尾数的最高位是无效值，会丧失精度")]),_._v(" "),v("p",[_._v("尾数去掉无效的最高位，例如：")]),_._v(" "),v("p",[_._v("2"),v("sup",[_._v("2")]),_._v(" x (+0.01001) => 2"),v("sup",[_._v("1")]),_._v(" x (+0.1001)")]),_._v(" "),v("p",[_._v("规则：")]),_._v(" "),v("p",[_._v("尾数算数左移1位，阶码减1。直到尾数最高位是有效值（左归）")]),_._v(" "),v("h4",{attrs:{id:"浮点数尾数的规格化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数尾数的规格化"}},[_._v("#")]),_._v(" 浮点数尾数的规格化")]),_._v(" "),v("p",[_._v("规格化浮点数：规定尾数的最高位数值位必须是一个有效值。")]),_._v(" "),v("p",[_._v("左归：当浮点数运算的结果为非规格化时要进行规格化处理，将尾数算数左移一位，阶码减1。")]),_._v(" "),v("p",[_._v("右归：当浮点数运算的结果尾数出现溢出（双符号位为01或10）时，将尾数算数右移一位，阶码加1。")]),_._v(" "),v("p",[_._v("例：a = 010; 00.1100, b = 010; 00.1000，求 a + b")]),_._v(" "),v("p",[_._v("a = 2"),v("sup",[_._v("2")]),_._v(" x 00.1100, b = 2"),v("sup",[_._v("2")]),_._v(" x 00.1000")]),_._v(" "),v("p",[_._v("a + b = 2"),v("sup",[_._v("2")]),_._v(" x (00.1100 +  00.1000)")]),_._v(" "),v("p",[_._v("​\t\t  =  2"),v("sup",[_._v("2")]),_._v(" x 01.0100")]),_._v(" "),v("p",[_._v("​\t\t =  2"),v("sup",[_._v("3")]),_._v(" x 00.1010")]),_._v(" "),v("p",[v("em",[_._v("采用“双符号位”，当溢出发生时，可以挽救。更高的符号位是正确的符号位")])]),_._v(" "),v("h3",{attrs:{id:"ieee745标准"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ieee745标准"}},[_._v("#")]),_._v(" IEEE745标准")]),_._v(" "),v("h4",{attrs:{id:"移码-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移码-3"}},[_._v("#")]),_._v(" 移码")]),_._v(" "),v("p",[_._v("定义：移码 = 真值 + 偏置值")]),_._v(" "),v("p",[_._v("此处8位移码的偏置值=128D=1000 0000B，即2"),v("sup",[_._v("n-1")])]),_._v(" "),v("p",[_._v("-127的移码：")]),_._v(" "),v("p",[_._v("真值-127 = -1111 111B")]),_._v(" "),v("p",[_._v("移码=-1111 111 + 1000 0000 = 0000 0001")]),_._v(" "),v("h4",{attrs:{id:"ieee745标准-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ieee745标准-2"}},[_._v("#")]),_._v(" IEEE745标准")]),_._v(" "),v("p",[_._v("规定：偏置值 = 127D = 0111 1111B，即2"),v("sup",[_._v("n-1")]),_._v(" -1")]),_._v(" "),v("p",[_._v("表示范围：-128～127，实际会取-126～127")]),_._v(" "),v("p",[_._v("特殊值：0000 0000（-127） 和 1111 11111（-128），这两个状态有特殊用途。")]),_._v(" "),v("p",[_._v("构成")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("数符部分")]),_._v(" "),v("th",[_._v("阶码部分（移码表示）")]),_._v(" "),v("th",[_._v("尾数部分（原码表示，隐藏表示最高位1，表示成1.M）")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("m"),v("sub",[_._v("s")])]),_._v(" "),v("td",[_._v("E")]),_._v(" "),v("td",[_._v("M")])])])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("类型")]),_._v(" "),v("th",[_._v("数符")]),_._v(" "),v("th",[_._v("阶码")]),_._v(" "),v("th",[_._v("尾数数值")]),_._v(" "),v("th",[_._v("总位数")]),_._v(" "),v("th",[_._v("偏置值（H）")]),_._v(" "),v("th",[_._v("偏置值（D）")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("短浮点数float，单精度")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("8")]),_._v(" "),v("td",[_._v("23")]),_._v(" "),v("td",[_._v("32")]),_._v(" "),v("td",[_._v("7FH")]),_._v(" "),v("td",[_._v("127")])]),_._v(" "),v("tr",[v("td",[_._v("长浮点数double，双精度")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("11")]),_._v(" "),v("td",[_._v("52")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("3FFH")]),_._v(" "),v("td",[_._v("1023")])]),_._v(" "),v("tr",[v("td",[_._v("临时浮点数long double")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("15")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("80")]),_._v(" "),v("td",[_._v("3FFFH")]),_._v(" "),v("td",[_._v("16383")])])])]),_._v(" "),v("p",[_._v("规格化的短浮点数的真值为：(-1)"),v("sup",[_._v("s")]),_._v(" x 1.M x 2"),v("sup",[_._v("E-127")])]),_._v(" "),v("p",[_._v("规格化的长浮点数的真值为：(-1)"),v("sup",[_._v("s")]),_._v(" x 1.M x 2"),v("sup",[_._v("E-1023")])]),_._v(" "),v("p",[_._v("例子：")]),_._v(" "),v("p",[_._v("将十进制数-0.75转换为IEEE754的单精度浮点数格式表示。")]),_._v(" "),v("p",[_._v("尾数规格化：(-0.75)"),v("sub",[_._v("10")]),_._v(" = (-0.11)"),v("sub",[_._v("2")]),_._v(" = (-1.1)"),v("sub",[_._v("2")]),_._v(" x 2"),v("sup",[_._v("-1")])]),_._v(" "),v("p",[_._v("数符 = 1")]),_._v(" "),v("p",[_._v("尾数部分 = .10000000...（隐含最高位1）")]),_._v(" "),v("p",[_._v("阶码真值 = -1")]),_._v(" "),v("p",[_._v("单精度浮点数偏移量 = 127D")]),_._v(" "),v("p",[_._v("移码 = 阶码真值 + 偏移量 = -1 + 111 1111 = 0111 1110（凑足8位）")]),_._v(" "),v("p",[v("em",[_._v("也可以这么算，移码 = 阶码真值 + 偏移量 = -1 + 127 = 126 = 0111 1110（凑足8位）")])]),_._v(" "),v("p",[_._v("最后得：1 0111 1110 1000 0000 0000 0000 0000 000")]),_._v(" "),v("h6",{attrs:{id:"ieee-754单精度浮点型能表示的最小绝对值、最大绝对值是多少"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ieee-754单精度浮点型能表示的最小绝对值、最大绝对值是多少"}},[_._v("#")]),_._v(" IEEE 754单精度浮点型能表示的最小绝对值、最大绝对值是多少？")]),_._v(" "),v("p",[_._v("最小绝对值：尾数全为0，阶码真值最小-126，对应移码机器数0000 0001，此时整体的真值为 (1.0)"),v("sub",[_._v("2")]),_._v(" x 2"),v("sup",[_._v("-126")])]),_._v(" "),v("p",[_._v("最大绝对值：尾数全为1，阶码真值最大127，对应移码机器数1111 1110，此时整体的真值为 (1.1111....11)"),v("sub",[_._v("2")]),_._v(" x 2"),v("sup",[_._v("127")])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("格式")]),_._v(" "),v("th",[_._v("规格化最小绝对值")]),_._v(" "),v("th",[_._v("规格化最大绝对值")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("单精度")]),_._v(" "),v("td",[_._v("E=1，M=0： 1.0 x 2"),v("sup",[_._v("1-127")]),_._v(" = 2"),v("sup",[_._v("-126")])]),_._v(" "),v("td",[_._v("E=254，M=.11...1：1.11...1 x 2"),v("sup",[_._v("254-127")]),_._v(" = 2"),v("sup",[_._v("127")]),_._v(" x (2 - 2 "),v("sup",[_._v("-23")]),_._v(")")])]),_._v(" "),v("tr",[v("td",[_._v("双精度")]),_._v(" "),v("td",[_._v("E=1，M=0： 1.0 x 2"),v("sup",[_._v("1-1023")]),_._v(" = 2"),v("sup",[_._v("-1022")])]),_._v(" "),v("td",[_._v("E=2046，M=.11...1：1.11...1 x 2"),v("sup",[_._v("2046-1023")]),_._v(" = 2"),v("sup",[_._v("1023")]),_._v(" x (2 - 2 "),v("sup",[_._v("-52")]),_._v(")")])])])]),_._v(" "),v("p",[_._v("总结：")]),_._v(" "),v("p",[_._v("由浮点数确定真值（阶码不是全0、也不是全1）")]),_._v(" "),v("ol",[v("li",[_._v("根据“某浮点数”确定数符、阶码、尾数分布")]),_._v(" "),v("li",[_._v("确定尾数1.M（注意补充最高的隐含位1）")]),_._v(" "),v("li",[_._v("确定阶码的真值 = 移码 - 偏置值（可将移码看作无符号数，用无符号数的值减去偏置值）")]),_._v(" "),v("li",[_._v("(-1)"),v("sup",[_._v("s")]),_._v(" x 1.M x 2"),v("sup",[_._v("E-偏置值")])])]),_._v(" "),v("h3",{attrs:{id:"浮点数的运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数的运算"}},[_._v("#")]),_._v(" 浮点数的运算")]),_._v(" "),v("h4",{attrs:{id:"浮点数加减运算步骤"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数加减运算步骤"}},[_._v("#")]),_._v(" 浮点数加减运算步骤")]),_._v(" "),v("ol",[v("li",[_._v("对阶")]),_._v(" "),v("li",[_._v("尾数加减")]),_._v(" "),v("li",[_._v("规格化")]),_._v(" "),v("li",[_._v("舍入")]),_._v(" "),v("li",[_._v("判溢出")])]),_._v(" "),v("p",[_._v("如：9.85211 x 10"),v("sup",[_._v("12")]),_._v(" + 9.96007 x 10"),v("sup",[_._v("10")])]),_._v(" "),v("p",[_._v("=>  9.85211 x 10"),v("sup",[_._v("12")]),_._v(" + 0.096007 x 10"),v("sup",[_._v("12")])]),_._v(" "),v("p",[_._v("=> 9.9517107 x 10"),v("sup",[_._v("12")])]),_._v(" "),v("p",[_._v("=> 如果尾数加减后出现类似 0.0099517107 x 10"),v("sup",[_._v("12")]),_._v("，需要“左规”，如果尾数加减出现类似 99.517107  x 10"),v("sup",[_._v("12")]),_._v("时，需要“右规”。")]),_._v(" "),v("p",[_._v("=> 若规定只能保留6位有效尾数，则 9.9517107 x 10"),v("sup",[_._v("12")]),_._v("  →  9.951710 x 10"),v("sup",[_._v("12")]),_._v("，多余的砍掉或者四舍五入。")]),_._v(" "),v("p",[_._v("=> 若规定阶码不能超过两位，则运算后阶码超出范围，则溢出，如：9.85211 x 10"),v("sup",[_._v("99")]),_._v(" + 9.96007 x 10"),v("sup",[_._v("99")]),_._v(" = 19.81218 x 10"),v("sup",[_._v("99")]),_._v("，规格化并用四舍五入保留六位小数，得：1.981218 x 10"),v("sup",[_._v("100")]),_._v("，阶码100超过两位，发生溢出（注：尾数发生溢出未必导致整体溢出，也许可以通过第二步、第三步来拯救）。")]),_._v(" "),v("p",[_._v("​")]),_._v(" "),v("h4",{attrs:{id:"舍入规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#舍入规则"}},[_._v("#")]),_._v(" 舍入规则")]),_._v(" "),v("p",[_._v("0舍1入法：类似十进制数运算中的“四舍五入”法，即在尾数右移时，被移去的最高数值为0，则舍去；被移去的最高数值为1，则在尾数的末位加1.这样可能会使尾数又溢出，此时需要再做一次右规。")]),_._v(" "),v("p",[_._v("恒置1法：尾数右移时，不论丢掉的最高数值位是1还是0，都使右移后的尾数末位恒置1。这种方法同样有使尾数变大和变小的两种可能。")]),_._v(" "),v("h4",{attrs:{id:"强制类型转换-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换-2"}},[_._v("#")]),_._v(" 强制类型转换")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("类型")]),_._v(" "),v("th",[_._v("16位机器")]),_._v(" "),v("th",[_._v("32位机器")]),_._v(" "),v("th",[_._v("64位机器")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("char")]),_._v(" "),v("td",[_._v("8")]),_._v(" "),v("td",[_._v("8")]),_._v(" "),v("td",[_._v("8")])]),_._v(" "),v("tr",[v("td",[_._v("short")]),_._v(" "),v("td",[_._v("16")]),_._v(" "),v("td",[_._v("16")]),_._v(" "),v("td",[_._v("16")])]),_._v(" "),v("tr",[v("td",[_._v("int")]),_._v(" "),v("td",[_._v("16")]),_._v(" "),v("td",[_._v("32")]),_._v(" "),v("td",[_._v("32")])]),_._v(" "),v("tr",[v("td",[_._v("long")]),_._v(" "),v("td",[_._v("32")]),_._v(" "),v("td",[_._v("32")]),_._v(" "),v("td",[_._v("64")])]),_._v(" "),v("tr",[v("td",[_._v("long long")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("64")])]),_._v(" "),v("tr",[v("td",[_._v("float")]),_._v(" "),v("td",[_._v("16")]),_._v(" "),v("td",[_._v("32")]),_._v(" "),v("td",[_._v("32")])]),_._v(" "),v("tr",[v("td",[_._v("double")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("64")]),_._v(" "),v("td",[_._v("64")])])])]),_._v(" "),v("h5",{attrs:{id:"无损转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#无损转换"}},[_._v("#")]),_._v(" 无损转换")]),_._v(" "),v("p",[_._v("char → int → long → double")]),_._v(" "),v("p",[_._v("float →  double")]),_._v(" "),v("p",[_._v("范围、精度从小到大，转换过程没有损失")]),_._v(" "),v("h5",{attrs:{id:"有损转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#有损转换"}},[_._v("#")]),_._v(" 有损转换")]),_._v(" "),v("p",[_._v("int → float 可能损失精度")]),_._v(" "),v("p",[_._v("float → int 可能溢出及损失精度")]),_._v(" "),v("h3",{attrs:{id:"电路的基本原理、加法器设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#电路的基本原理、加法器设计"}},[_._v("#")]),_._v(" 电路的基本原理、加法器设计")]),_._v(" "),v("p",[_._v("ALU的作用：")]),_._v(" "),v("ul",[v("li",[_._v("算数运算：加、减、乘、除等")]),_._v(" "),v("li",[_._v("逻辑运算：与、或、非、异或等")]),_._v(" "),v("li",[_._v("辅助功能：移位、求补等")])]),_._v(" "),v("h2",{attrs:{id:"第三章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第三章"}},[_._v("#")]),_._v(" 第三章")]),_._v(" "),v("h3",{attrs:{id:"主存简单模型和寻址概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主存简单模型和寻址概念"}},[_._v("#")]),_._v(" 主存简单模型和寻址概念")]),_._v(" "),v("h4",{attrs:{id:"主存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主存储器"}},[_._v("#")]),_._v(" 主存储器")]),_._v(" "),v("p",[_._v("存储体")]),_._v(" "),v("p",[_._v("MAR")]),_._v(" "),v("p",[_._v("MDR")]),_._v(" "),v("p",[_._v("地址线：")]),_._v(" "),v("p",[_._v("数据线：")]),_._v(" "),v("p",[_._v("K：2"),v("sup",[_._v("10")])]),_._v(" "),v("p",[_._v("M：2"),v("sup",[_._v("20")])]),_._v(" "),v("p",[_._v("G：2"),v("sup",[_._v("30")])]),_._v(" "),v("p",[_._v("T：2"),v("sup",[_._v("40")])]),_._v(" "),v("p",[_._v("常见的描述：")]),_._v(" "),v("p",[_._v("8K x 8位的存储芯片，即2"),v("sup",[_._v("13")]),_._v(" x 8bit，有13根地址线，8根数据线。")]),_._v(" "),v("h4",{attrs:{id:"寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#寻址"}},[_._v("#")]),_._v(" 寻址")]),_._v(" "),v("p",[_._v("按照不同大小的单元来切分整个存储器，总共可以切成多少份。")]),_._v(" "),v("p",[_._v("假设总容量位1KB")]),_._v(" "),v("p",[_._v("按字节寻址：1K个存储单元，每个单元1B")]),_._v(" "),v("p",[_._v("按字寻址：256个存储单元，每个单元4B")]),_._v(" "),v("p",[_._v("按半字寻址：512个存储单元，每个单元2B")]),_._v(" "),v("p",[_._v("按双字寻址：128个存储单元，每个单元8B")]),_._v(" "),v("h3",{attrs:{id:"半导体存储器ram"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#半导体存储器ram"}},[_._v("#")]),_._v(" 半导体存储器RAM")]),_._v(" "),v("h4",{attrs:{id:"半导体存储芯片的基本结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#半导体存储芯片的基本结构"}},[_._v("#")]),_._v(" 半导体存储芯片的基本结构")]),_._v(" "),v("h5",{attrs:{id:"存储矩阵"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储矩阵"}},[_._v("#")]),_._v(" 存储矩阵")]),_._v(" "),v("p",[_._v("由大量相同的位存储单元阵列构成。")]),_._v(" "),v("h5",{attrs:{id:"译码驱动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#译码驱动"}},[_._v("#")]),_._v(" 译码驱动")]),_._v(" "),v("p",[_._v("将来自地址总线的地址信号翻译成对应存储单元的选通信号，该信号在读写电路的配合下完成对被选中单元的读/写操作。")]),_._v(" "),v("h5",{attrs:{id:"读写电路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#读写电路"}},[_._v("#")]),_._v(" 读写电路")]),_._v(" "),v("p",[_._v("包括读出放大器和写入电路，用来完成读/写操作。")]),_._v(" "),v("h5",{attrs:{id:"读-写控制线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#读-写控制线"}},[_._v("#")]),_._v(" 读/写控制线")]),_._v(" "),v("p",[_._v("决定芯片进行读/写操作。读写共用一根线，或者分开两根线。")]),_._v(" "),v("h5",{attrs:{id:"片选线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#片选线"}},[_._v("#")]),_._v(" 片选线")]),_._v(" "),v("p",[_._v("确定哪个存储芯片被选中。可用于容量扩充。")]),_._v(" "),v("h5",{attrs:{id:"地址线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#地址线"}},[_._v("#")]),_._v(" 地址线")]),_._v(" "),v("p",[_._v("是单向输入的，其位数与存储字的个数有关。")]),_._v(" "),v("h6",{attrs:{id:"数据线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据线"}},[_._v("#")]),_._v(" 数据线")]),_._v(" "),v("p",[_._v("是双向的，其位数与读写或写入的数据位数有关。")]),_._v(" "),v("h4",{attrs:{id:"半导体随机存取器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#半导体随机存取器"}},[_._v("#")]),_._v(" 半导体随机存取器")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("类型")]),_._v(" "),v("th",[_._v("SRAM（Static Random Access Memory）静态随机存储器")]),_._v(" "),v("th",[_._v("DRAM（Dynamic Random Access Memory）动态随机存储器")]),_._v(" "),v("th",[_._v("备注")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("存储信息0，1")]),_._v(" "),v("td",[_._v("触发器，双稳态")]),_._v(" "),v("td",[_._v("电容，充放电")]),_._v(" "),v("td",[_._v("DRAM都以电信号的形式存储0/1，断电就丢失信息：易失性存储器")])]),_._v(" "),v("tr",[v("td",[_._v("破坏性读出")]),_._v(" "),v("td",[_._v("非，读：查看触发器状态，写：改变触发器状态")]),_._v(" "),v("td",[_._v("是，读：连接电容，检测电流变化，写：给电容充/放电")]),_._v(" "),v("td",[_._v("DRAM读出后需要重新充电")])]),_._v(" "),v("tr",[v("td",[_._v("需要刷新")]),_._v(" "),v("td",[_._v("不要，能保持两种稳定的状态")]),_._v(" "),v("td",[_._v("需要，电容上的电荷只能维持2ms")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("送行列地址")]),_._v(" "),v("td",[_._v("同时送")]),_._v(" "),v("td",[_._v("分两次送")]),_._v(" "),v("td",[_._v("DRAM地址线可以复用，线数减少一半")])]),_._v(" "),v("tr",[v("td",[_._v("运行速度")]),_._v(" "),v("td",[_._v("快")]),_._v(" "),v("td",[_._v("慢")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("集成度")]),_._v(" "),v("td",[_._v("低，6个逻辑元件构成")]),_._v(" "),v("td",[_._v("高，1个或3个逻辑元件构成")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("发热量")]),_._v(" "),v("td",[_._v("大")]),_._v(" "),v("td",[_._v("小")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("存储成本")]),_._v(" "),v("td",[_._v("高")]),_._v(" "),v("td",[_._v("低")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("应用")]),_._v(" "),v("td",[_._v("常用作Cache")]),_._v(" "),v("td",[_._v("常用作主存")]),_._v(" "),v("td")])])]),_._v(" "),v("h4",{attrs:{id:"dram的刷新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dram的刷新"}},[_._v("#")]),_._v(" DRAM的刷新")]),_._v(" "),v("h5",{attrs:{id:"多久刷新一次"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多久刷新一次"}},[_._v("#")]),_._v(" 多久刷新一次？")]),_._v(" "),v("p",[_._v("一般为2ms")]),_._v(" "),v("h5",{attrs:{id:"每次刷新多少存储单元"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#每次刷新多少存储单元"}},[_._v("#")]),_._v(" 每次刷新多少存储单元")]),_._v(" "),v("p",[_._v("以行为单位，每次刷新一行存储单元。")]),_._v(" "),v("p",[_._v("使用行列地址，可以减少选通线的数量")]),_._v(" "),v("h5",{attrs:{id:"如何刷新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何刷新"}},[_._v("#")]),_._v(" 如何刷新")]),_._v(" "),v("p",[_._v("有硬件支持，读出一行的信息后重新写入，占用1个读/写周期")]),_._v(" "),v("h5",{attrs:{id:"在什么时候刷新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在什么时候刷新"}},[_._v("#")]),_._v(" 在什么时候刷新")]),_._v(" "),v("p",[_._v("假设DRAM内部结构排列成128x128的形式，读/写周期（存取周期）0.5us。")]),_._v(" "),v("p",[_._v("方案一：分散刷新")]),_._v(" "),v("p",[_._v("每次读写完都刷新一行，系统的存取周期变为1us，前0.5us时间用于正常读写，后0.5us时间用于刷新某行")]),_._v(" "),v("p",[_._v("方案二：集中刷新")]),_._v(" "),v("p",[_._v("2ms内集中安排时间全部刷新，系统的存取周期还是0.5us，由于有一段时间专门用于刷新，造成无法访问存储器，称为访存“死区”。")]),_._v(" "),v("p",[_._v("方案三：异步刷新")]),_._v(" "),v("p",[_._v("2ms内每行刷新1次即可，2ms内需要产生128次刷新请求，每隔2ms/128=15.6us一次，每15.6us内有0.5us的“死时间”。")]),_._v(" "),v("h4",{attrs:{id:"ram的存储周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ram的存储周期"}},[_._v("#")]),_._v(" RAM的存储周期")]),_._v(" "),v("p",[_._v("启动存取\t\t\t\t\t\t存取完\t\t\t\t\t下次存取")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t存取时间\t\t\t\t\t恢复时间")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t存取周期")]),_._v(" "),v("h3",{attrs:{id:"半导体存储器rom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#半导体存储器rom"}},[_._v("#")]),_._v(" 半导体存储器ROM")]),_._v(" "),v("h4",{attrs:{id:"ram易失性存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ram易失性存储器"}},[_._v("#")]),_._v(" RAM易失性存储器")]),_._v(" "),v("p",[_._v("主存储器RAM：存储指令和数据")]),_._v(" "),v("p",[_._v("CPU：自动到主存中取指令；按指令的指示进行下一步工作。")]),_._v(" "),v("p",[_._v("ROM：保存固定的信息")]),_._v(" "),v("h4",{attrs:{id:"rom-read-only-memory-非易失性存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rom-read-only-memory-非易失性存储器"}},[_._v("#")]),_._v(" ROM（Read Only Memory）非易失性存储器")]),_._v(" "),v("h4",{attrs:{id:"发展历程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发展历程"}},[_._v("#")]),_._v(" 发展历程")]),_._v(" "),v("p",[_._v("掩膜式只读存储器（MROM）：")]),_._v(" "),v("p",[_._v("​\t存储内容由半导体制造厂按用户提出的要求在芯片的生产过程中直接写入，无法修改。")]),_._v(" "),v("p",[_._v("一次可编程只读存储器（PROM）")]),_._v(" "),v("p",[_._v("​\t存储内容由用户用专门的设备（编程器）一次性写入，之后无法修改。")]),_._v(" "),v("p",[_._v("可擦除可编程只读存储器（EPROM）")]),_._v(" "),v("p",[_._v("​\t紫外线擦除，电擦除，修改次数有限，写入时间很长。")]),_._v(" "),v("p",[_._v("闪速存储器（Flash Memory）")]),_._v(" "),v("p",[_._v("​\t如U盘，写入速度较快。")]),_._v(" "),v("p",[_._v("固态硬盘（Solid State Drives）")]),_._v(" "),v("p",[_._v("​\t控制单元+FLASH芯片。")]),_._v(" "),v("h3",{attrs:{id:"存储器基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储器基本概念"}},[_._v("#")]),_._v(" 存储器基本概念")]),_._v(" "),v("h4",{attrs:{id:"按存储介质分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按存储介质分类"}},[_._v("#")]),_._v(" 按存储介质分类")]),_._v(" "),v("p",[_._v("磁芯存储器")]),_._v(" "),v("p",[_._v("磁表面存储器，磁盘，磁带")]),_._v(" "),v("p",[_._v("半导体存储器")]),_._v(" "),v("p",[_._v("光存储器")]),_._v(" "),v("h4",{attrs:{id:"存储器的层次化结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储器的层次化结构"}},[_._v("#")]),_._v(" 存储器的层次化结构")]),_._v(" "),v("p",[_._v("CPU\t⇔ \tCache\t⇔\t主存\t⇔\t辅存")]),_._v(" "),v("p",[_._v("高速缓存为了解决CPU和主存速度不匹配的问题")]),_._v(" "),v("p",[_._v("辅存为了解决存储容量不够大的问题")]),_._v(" "),v("h3",{attrs:{id:"主存与cpu的连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主存与cpu的连接"}},[_._v("#")]),_._v(" 主存与CPU的连接")]),_._v(" "),v("p",[_._v("译码器")]),_._v(" "),v("h4",{attrs:{id:"主容量拓展"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主容量拓展"}},[_._v("#")]),_._v(" 主容量拓展")]),_._v(" "),v("h3",{attrs:{id:"位拓展"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#位拓展"}},[_._v("#")]),_._v(" 位拓展")]),_._v(" "),v("h3",{attrs:{id:"字拓展"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字拓展"}},[_._v("#")]),_._v(" 字拓展")]),_._v(" "),v("p",[_._v("线选法")]),_._v(" "),v("p",[_._v("译码片选法")]),_._v(" "),v("h3",{attrs:{id:"双口ram和多模块存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#双口ram和多模块存储器"}},[_._v("#")]),_._v(" 双口RAM和多模块存储器")]),_._v(" "),v("h4",{attrs:{id:"双端口ram"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#双端口ram"}},[_._v("#")]),_._v(" 双端口RAM")]),_._v(" "),v("p",[_._v("了解即可")]),_._v(" "),v("h4",{attrs:{id:"多模块存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多模块存储器"}},[_._v("#")]),_._v(" 多模块存储器")]),_._v(" "),v("h5",{attrs:{id:"单体多字存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#单体多字存储器"}},[_._v("#")]),_._v(" 单体多字存储器")]),_._v(" "),v("p",[_._v("多个普通存储器构成，每个存储单元存储m个字，总线宽度也为m个字，一次并行读出m个字")]),_._v(" "),v("p",[_._v("指令和数据在主存内必须是连续存放的。")]),_._v(" "),v("h5",{attrs:{id:"多体并行存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多体并行存储器"}},[_._v("#")]),_._v(" 多体并行存储器")]),_._v(" "),v("p",[_._v("每个模块都有相同的容量和存取速度。")]),_._v(" "),v("p",[_._v("各个模块都有独立的读写控制电路、地址寄存器和数据寄存器。")]),_._v(" "),v("p",[_._v("它们既能并行工作，又能交叉工作。")]),_._v(" "),v("h6",{attrs:{id:"高位交叉编址模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#高位交叉编址模式"}},[_._v("#")]),_._v(" 高位交叉编址模式")]),_._v(" "),v("p",[_._v("每个存储体存储周期为T")]),_._v(" "),v("p",[_._v("竖向编址")]),_._v(" "),v("p",[_._v("连续取n个存储字，耗时nT")]),_._v(" "),v("h6",{attrs:{id:"低位交叉编址模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#低位交叉编址模式"}},[_._v("#")]),_._v(" 低位交叉编址模式")]),_._v(" "),v("p",[_._v("横向编址")]),_._v(" "),v("p",[_._v("连续取n个存储字，耗时T+(n-1) $\\tau$")]),_._v(" "),v("p",[_._v("如：")]),_._v(" "),v("p",[_._v("模块数m=4，存储周期为T，字长为W，数据总线宽度为W，总线传输周期为r，连续存取n个字，求交叉存储器的带宽。")]),_._v(" "),v("p",[_._v("分析：")]),_._v(" "),v("p",[_._v("有m个存储体，存储周期为T，字长为W，每隔r时间启动下一个存储体，连续存取n个字，求存储器的存储速率。")]),_._v(" "),v("p",[_._v("连续存取n个字耗时 = T+(n-1)r，m > T/r\n$$\n带宽 = \\frac {nW} {T+(n-1)r}\n$$\n当n足够大时，带宽 = W / r")]),_._v(" "),v("h3",{attrs:{id:"高速缓冲存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#高速缓冲存储器"}},[_._v("#")]),_._v(" 高速缓冲存储器")]),_._v(" "),v("p",[_._v("命中率：CPU欲访问的信息已在Cache中的比率。")]),_._v(" "),v("p",[_._v("设一个程序执行期间，Cache的总命中次数为N"),v("sub",[_._v("c")]),_._v("，访问主存的总次数为N"),v("sub",[_._v("m")]),_._v("，则命中率：\n$$\nH = \\frac {N_c} {N_c + N_m}\n$$\n缺失率：M = 1 - H")]),_._v(" "),v("p",[_._v("例子：")]),_._v(" "),v("p",[_._v("假设Cache的速度时主存的5倍，且Cache的命中率为95%，则采用Cache后，存储器性能提高多少（设Cache和主主存同时被访问，若Cache命中则中断访问主存）？")]),_._v(" "),v("p",[_._v("解：")]),_._v(" "),v("p",[_._v("设Cache的存取周期为t，则主存的存取周期为5t")]),_._v(" "),v("p",[_._v("Cache和主存同时访问，不命中时访问时间为5t")]),_._v(" "),v("p",[_._v("故系统的平均访问时间为T"),v("sub",[_._v("a")]),_._v(" = 0.95 x t + 0.05 x 5t = 1.2t")]),_._v(" "),v("p",[_._v("设每个周期可存取的数据量为S，")]),_._v(" "),v("p",[_._v("则存储系统的带宽为S/1.2t，")]),_._v(" "),v("p",[_._v("不采用Cache时的带宽为S/5t，")]),_._v(" "),v("p",[_._v("故性能为原来的 (S/1.2t) / (S/5t) = 5t / 1.2t = 4.17倍，即提高了3.17倍。")]),_._v(" "),v("p",[_._v("系统效率 e = t / 1.2t = 83.3%")]),_._v(" "),v("h3",{attrs:{id:"cache-地址映射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cache-地址映射"}},[_._v("#")]),_._v(" Cache-地址映射")]),_._v(" "),v("h4",{attrs:{id:"全相联映射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#全相联映射"}},[_._v("#")]),_._v(" 全相联映射")]),_._v(" "),v("p",[_._v("空位随意放")]),_._v(" "),v("p",[_._v("主存字块标记 + 字块内地址")]),_._v(" "),v("h4",{attrs:{id:"直接映射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#直接映射"}},[_._v("#")]),_._v(" 直接映射")]),_._v(" "),v("p",[_._v("对号入座")]),_._v(" "),v("p",[_._v("主存字块标记 + Cache字块地址 + 字块内地址")]),_._v(" "),v("h4",{attrs:{id:"组相联映射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组相联映射"}},[_._v("#")]),_._v(" 组相联映射")]),_._v(" "),v("p",[_._v("按号分组")]),_._v(" "),v("p",[_._v("主存字块标记 + 组地址 + 字块内地址")]),_._v(" "),v("h3",{attrs:{id:"cache替换算法及写策略"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cache替换算法及写策略"}},[_._v("#")]),_._v(" Cache替换算法及写策略")]),_._v(" "),v("h4",{attrs:{id:"替换算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#替换算法"}},[_._v("#")]),_._v(" 替换算法")]),_._v(" "),v("h5",{attrs:{id:"随机算法-rand"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#随机算法-rand"}},[_._v("#")]),_._v(" 随机算法（RAND）")]),_._v(" "),v("p",[_._v("随机的确定替换的Cache。它的实现比较简单，但没有依据程序访问的局部性原理，故可能命中率较低。")]),_._v(" "),v("h5",{attrs:{id:"先进先出算法-fifo-first-in-first-out"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#先进先出算法-fifo-first-in-first-out"}},[_._v("#")]),_._v(" 先进先出算法（FIFO，First In First Out）")]),_._v(" "),v("p",[_._v("选择最早调入的进行替换，它比较容易实现，但也没有依据程序访问的局部性原理，可能会把一些需要经常使用的程序块（如循环程序）也作为最早进入Cache的块替换掉。")]),_._v(" "),v("h5",{attrs:{id:"近期最少使用算法-lru-least-recently-used"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#近期最少使用算法-lru-least-recently-used"}},[_._v("#")]),_._v(" 近期最少使用算法（LRU，Least Recently Used）")]),_._v(" "),v("p",[_._v("依据程序访问的局部性原理选择近期内长久未访问的存储行作为替换的行，平均命中率要比FIFO要高，是堆栈类算法。LRU算法对每行设置一个计数器，Cache每命中一次，命中行计数器清0，而其他各行计数器均加1，需要替换时比较各特定行的技术值，将技术值最大的行换出。")]),_._v(" "),v("h5",{attrs:{id:"最不经常使用算法-lfu"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最不经常使用算法-lfu"}},[_._v("#")]),_._v(" 最不经常使用算法（LFU）")]),_._v(" "),v("p",[_._v("将一段时间内被访问次数最少的存储行换出。每行也设置一个计数器，新行建立后从0开始计数，每访问一次，被访问的行计数器加1，需要替换时比较各特定行的计数值，将计数值最小的行换出。")]),_._v(" "),v("h4",{attrs:{id:"写策略"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#写策略"}},[_._v("#")]),_._v(" 写策略")]),_._v(" "),v("h5",{attrs:{id:"写回法搭配写分配法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#写回法搭配写分配法"}},[_._v("#")]),_._v(" 写回法搭配写分配法")]),_._v(" "),v("h5",{attrs:{id:"全写法搭配非写分配法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#全写法搭配非写分配法"}},[_._v("#")]),_._v(" 全写法搭配非写分配法")]),_._v(" "),v("h5",{attrs:{id:"多级cache"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多级cache"}},[_._v("#")]),_._v(" 多级Cache")]),_._v(" "),v("h3",{attrs:{id:"虚拟存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#虚拟存储器"}},[_._v("#")]),_._v(" 虚拟存储器")]),_._v(" "),v("p",[_._v("虚拟存储器是一个逻辑模型")]),_._v(" "),v("p",[_._v("功能：用户给出一个地址，叫做虚地址或逻辑地址，虚拟存储器要给出该地址对应的数据。")]),_._v(" "),v("p",[_._v("实现：由辅助硬件将虚地址映射到主存当中的某个单元，主存单元地址称为实地址或物理地址。")]),_._v(" "),v("h4",{attrs:{id:"页式虚拟存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#页式虚拟存储器"}},[_._v("#")]),_._v(" 页式虚拟存储器")]),_._v(" "),v("p",[_._v("虚拟空间与主存空间都被划分成同样大小的页，主存的页称为实页，虚存的页称为虚页。")]),_._v(" "),v("p",[_._v("虚地址结构：虚页号+页内地址")]),_._v(" "),v("p",[_._v("实地址结构：实页号+页内地址")]),_._v(" "),v("p",[_._v("虚页号到实页的映射号通过一张页表实现。")]),_._v(" "),v("h5",{attrs:{id:"页表基址寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#页表基址寄存器"}},[_._v("#")]),_._v(" 页表基址寄存器")]),_._v(" "),v("p",[_._v("负责存储页表起始地址。")]),_._v(" "),v("p",[_._v("页表起始地址和虚页号进行拼接得到页表项地址。")]),_._v(" "),v("p",[_._v("页表项地址指向虚页号对应的实页号所在位置。")]),_._v(" "),v("h4",{attrs:{id:"段式虚拟存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#段式虚拟存储器"}},[_._v("#")]),_._v(" 段式虚拟存储器")]),_._v(" "),v("p",[_._v("段式虚拟存储器中的段是按程序的逻辑结构划分的，各个段的长度因程序而异。")]),_._v(" "),v("p",[_._v("虚拟地址分为两部分：段号和段内地址。")]),_._v(" "),v("p",[_._v("段表：每一行记录了与某个段对应的段号、装入位、段起点和段长等信息。")]),_._v(" "),v("p",[_._v("由于段的长度可变，所以段表中要给出各段的起始地址与段的长度。")]),_._v(" "),v("p",[_._v("虚地址结构：段号+段内地址")]),_._v(" "),v("p",[_._v("实地址结构：主存地址")]),_._v(" "),v("h5",{attrs:{id:"段表基址寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#段表基址寄存器"}},[_._v("#")]),_._v(" 段表基址寄存器")]),_._v(" "),v("p",[_._v("负责存储段表起始地址。")]),_._v(" "),v("p",[_._v("段表起始地址和段号进行拼接得到页表项地址。")]),_._v(" "),v("p",[_._v("段表项地址与段内地址相加得到虚地址对应的主存地址。")]),_._v(" "),v("h2",{attrs:{id:"第四章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第四章"}},[_._v("#")]),_._v(" 第四章")]),_._v(" "),v("h3",{attrs:{id:"指令系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令系统"}},[_._v("#")]),_._v(" 指令系统")]),_._v(" "),v("h4",{attrs:{id:"指令的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令的定义"}},[_._v("#")]),_._v(" 指令的定义")]),_._v(" "),v("p",[_._v("指令（又称机器指令），是指示计算机执行某种操作的命令，是计算机运行的最小功能单位。")]),_._v(" "),v("p",[_._v("一台计算机的所有指令的集合构成该机的指令系统，也称为指令集。")]),_._v(" "),v("p",[_._v("注：")]),_._v(" "),v("p",[_._v("一台计算机只能执行自己指令系统中的指令，不能执行其他系统的指令。")]),_._v(" "),v("h4",{attrs:{id:"指令的格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令的格式"}},[_._v("#")]),_._v(" 指令的格式")]),_._v(" "),v("p",[_._v("一条指令就是机器语言的一个语句，它是一组有意义的二进制代码。")]),_._v(" "),v("p",[_._v("一条指令通常要包括操作码字段和地址码字段两部分：")]),_._v(" "),v("p",[_._v("一条指令的结构：")]),_._v(" "),v("p",[_._v("操作码（OP）+ 地址码（A）")]),_._v(" "),v("h5",{attrs:{id:"操作码的功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作码的功能"}},[_._v("#")]),_._v(" 操作码的功能")]),_._v(" "),v("p",[_._v("用户要干什么？")]),_._v(" "),v("p",[_._v("停机中断")]),_._v(" "),v("p",[_._v("求反求补")]),_._v(" "),v("p",[_._v("加减乘除")]),_._v(" "),v("p",[_._v("...")]),_._v(" "),v("h5",{attrs:{id:"地址码的功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#地址码的功能"}},[_._v("#")]),_._v(" 地址码的功能")]),_._v(" "),v("p",[_._v("对谁进行操作？")]),_._v(" "),v("p",[_._v("不需要操作对象")]),_._v(" "),v("p",[_._v("需要一个操作对象")]),_._v(" "),v("p",[_._v("...")]),_._v(" "),v("p",[_._v("例子：设指令字长及存储字长均为32位，操作码占8位。")]),_._v(" "),v("h4",{attrs:{id:"四地址指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四地址指令"}},[_._v("#")]),_._v(" 四地址指令")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("OP")]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("1")])]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("2")])]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("3")]),_._v("(结果)")]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("4")]),_._v("（下址）")])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("指令含义：")]),_._v(" "),v("p",[_._v("（A"),v("sub",[_._v("1")]),_._v("）OP（A"),v("sub",[_._v("2")]),_._v("）→\tA"),v("sub",[_._v("3")]),_._v("，A"),v("sub",[_._v("4")]),_._v(" = 下一条将要执行指令的地址。")]),_._v(" "),v("p",[_._v("4个地址码字段各占6位，指令操作数直接寻址范围为2"),v("sup",[_._v("6")]),_._v(" = 64；完成一条指令需要访存4次。")]),_._v(" "),v("h4",{attrs:{id:"三地址指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三地址指令"}},[_._v("#")]),_._v(" 三地址指令")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("OP")]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("1")])]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("2")])]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("3")]),_._v("(结果)")])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("引入程序计数器PC，执行一条指令后自动执行下一条指令。")]),_._v(" "),v("p",[_._v("指令含义：")]),_._v(" "),v("p",[_._v("（A"),v("sub",[_._v("1")]),_._v("）OP（A"),v("sub",[_._v("2")]),_._v("）→\tA"),v("sub",[_._v("3")])]),_._v(" "),v("p",[_._v("3个地址码字段各占8位，指令操作数直接寻址范围为2"),v("sup",[_._v("8")]),_._v(" = 256；完成一条指令需要访存4次。")]),_._v(" "),v("h4",{attrs:{id:"二地址指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二地址指令"}},[_._v("#")]),_._v(" 二地址指令")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("OP")]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("1")]),_._v("（目的操作数）")]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("2")]),_._v("（源操作数）")])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("指令含义：")]),_._v(" "),v("p",[_._v("（A"),v("sub",[_._v("1")]),_._v("）OP（A"),v("sub",[_._v("2")]),_._v("）→\tA"),v("sub",[_._v("1")])]),_._v(" "),v("p",[_._v("2个地址码字段各占12位，指令操作数直接寻址范围为2"),v("sup",[_._v("12")]),_._v(" = 4K；完成一条指令需要访存4次。")]),_._v(" "),v("h4",{attrs:{id:"一地址指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一地址指令"}},[_._v("#")]),_._v(" 一地址指令")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("OP")]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("1")])])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("指令含义：")]),_._v(" "),v("ol",[v("li",[_._v("OP（A"),v("sub",[_._v("1")]),_._v("）→\tA"),v("sub",[_._v("1")]),_._v("，如加1、减1、取反、求补等，完成一条指令需要访存3次。")]),_._v(" "),v("li",[_._v("（ACC）OP（A"),v("sub",[_._v("1")]),_._v("）→  ACC，隐含约定目的地址为ACC，完成一条指令需要访存2次。")])]),_._v(" "),v("p",[_._v("1个地址码字段各占24位，指令操作数直接寻址范围为2"),v("sup",[_._v("24")]),_._v(" = 16M。")]),_._v(" "),v("h4",{attrs:{id:"零地址指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#零地址指令"}},[_._v("#")]),_._v(" 零地址指令")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("OP")])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("指令含义：")]),_._v(" "),v("ol",[v("li",[_._v("不需要操作数，如空操作、停机、关中断等指令。")]),_._v(" "),v("li",[_._v("堆栈计算机，两个操作数隐含存放在栈顶和次栈顶，计算结果压回栈顶。")])]),_._v(" "),v("h4",{attrs:{id:"指令分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令分类"}},[_._v("#")]),_._v(" 指令分类")]),_._v(" "),v("h5",{attrs:{id:"按整条指令的长度分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按整条指令的长度分类"}},[_._v("#")]),_._v(" 按整条指令的长度分类")]),_._v(" "),v("p",[_._v("定长指令字结构：指令长度固定。")]),_._v(" "),v("p",[_._v("变长指令字结构：指令长度不等。")]),_._v(" "),v("h5",{attrs:{id:"按操作码的长度分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按操作码的长度分类"}},[_._v("#")]),_._v(" 按操作码的长度分类")]),_._v(" "),v("p",[_._v("定长操作码：n位 → 2"),v("sup",[_._v("n")]),_._v("条指令。")]),_._v(" "),v("p",[_._v("扩展操作码：操作码长度可变。")]),_._v(" "),v("h4",{attrs:{id:"扩展操作码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#扩展操作码"}},[_._v("#")]),_._v(" 扩展操作码")]),_._v(" "),v("p",[_._v("基本结构：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("OP")]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("1")])]),_._v(" "),v("th",[_._v("A"),v("sub",[_._v("2")])]),_._v(" "),v("th",[_._v("A3")])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("设指令字长为16位：")]),_._v(" "),v("p",[_._v("前4位为基本操作码字段OP，另有3个4位长的地址字段A"),v("sub",[_._v("1")]),_._v("、A"),v("sub",[_._v("2")]),_._v("和A"),v("sub",[_._v("3")]),_._v("。")]),_._v(" "),v("p",[_._v("4位基本操作码若全部用于三地址指令，则有16条。")]),_._v(" "),v("p",[_._v("但至少须将1111留作扩展操作码之用，即三地址指令为15条；")]),_._v(" "),v("p",[_._v("1111 1111留作扩展操作码之用，二地址指令为15条；")]),_._v(" "),v("p",[_._v("1111 1111 1111 留作扩展操作码之用，一地址指令为15条；")]),_._v(" "),v("p",[_._v("零地址指令为16条。")]),_._v(" "),v("h4",{attrs:{id:"操作类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作类型"}},[_._v("#")]),_._v(" 操作类型")]),_._v(" "),v("h4",{attrs:{id:"数据传送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据传送"}},[_._v("#")]),_._v(" 数据传送")]),_._v(" "),v("p",[_._v("LOAD作用：把存储器中的数据放到寄存器中。")]),_._v(" "),v("p",[_._v("STORE作用：把寄存器中的数据放到存储器中。")]),_._v(" "),v("h4",{attrs:{id:"算术逻辑操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算术逻辑操作"}},[_._v("#")]),_._v(" 算术逻辑操作")]),_._v(" "),v("p",[_._v("算术：加、减、乘、除、增1、减1、求补、浮点运算、十进制运算")]),_._v(" "),v("p",[_._v("逻辑：与、或、非、异或、位操组、位测试、位清除、位求反")]),_._v(" "),v("h4",{attrs:{id:"移位操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移位操作"}},[_._v("#")]),_._v(" 移位操作")]),_._v(" "),v("p",[_._v("算术移位、逻辑移位、循环移位（带进位和不带进位）")]),_._v(" "),v("h4",{attrs:{id:"转移操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#转移操作"}},[_._v("#")]),_._v(" 转移操作")]),_._v(" "),v("p",[_._v("无条件转移：JMP")]),_._v(" "),v("p",[_._v("条件转移：JZ，结果为0，JO：结果溢出，JC：结果有进位")]),_._v(" "),v("p",[_._v("调用和返回CALL和RETURN")]),_._v(" "),v("p",[_._v("陷阱（Trap）与陷阱指令")]),_._v(" "),v("h4",{attrs:{id:"输入输出操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输入输出操作"}},[_._v("#")]),_._v(" 输入输出操作")]),_._v(" "),v("p",[_._v("CPU寄存器与IO端口之间的数据传送（端口即IO接口中的寄存器）")]),_._v(" "),v("h3",{attrs:{id:"指令寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令寻址"}},[_._v("#")]),_._v(" 指令寻址")]),_._v(" "),v("h4",{attrs:{id:"数据存放"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据存放"}},[_._v("#")]),_._v(" 数据存放")]),_._v(" "),v("h5",{attrs:{id:"按字节编址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按字节编址"}},[_._v("#")]),_._v(" 按字节编址")]),_._v(" "),v("p",[_._v("每个字节存储单元都有一个地址编号，一个格子为一个字节")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("0")]),_._v(" "),v("th",[_._v("1")]),_._v(" "),v("th",[_._v("2")]),_._v(" "),v("th",[_._v("3")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("4")]),_._v(" "),v("td",[_._v("5")]),_._v(" "),v("td",[_._v("6")]),_._v(" "),v("td",[_._v("7")])]),_._v(" "),v("tr",[v("td",[_._v("8")]),_._v(" "),v("td",[_._v("9")]),_._v(" "),v("td",[_._v("10")]),_._v(" "),v("td",[_._v("11")])]),_._v(" "),v("tr",[v("td",[_._v("12")]),_._v(" "),v("td",[_._v("13")]),_._v(" "),v("td",[_._v("14")]),_._v(" "),v("td",[_._v("15")])]),_._v(" "),v("tr",[v("td",[_._v("16")]),_._v(" "),v("td",[_._v("17")]),_._v(" "),v("td",[_._v("18")]),_._v(" "),v("td",[_._v("19")])]),_._v(" "),v("tr",[v("td",[_._v("20")]),_._v(" "),v("td",[_._v("21")]),_._v(" "),v("td",[_._v("22")]),_._v(" "),v("td",[_._v("23")])]),_._v(" "),v("tr",[v("td",[_._v("24")]),_._v(" "),v("td",[_._v("25")]),_._v(" "),v("td",[_._v("26")]),_._v(" "),v("td",[_._v("27")])])])]),_._v(" "),v("h6",{attrs:{id:"按字节地址寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按字节地址寻址"}},[_._v("#")]),_._v(" 按字节地址寻址")]),_._v(" "),v("p",[_._v("以一个格子为一个存储单元，称为字节存储单元。")]),_._v(" "),v("p",[_._v("按字节地址寻址：给出一个字节地址，可以取出长度为一个字节的数据。")]),_._v(" "),v("p",[_._v("假设某数据长度为4B，则需要给出4个字节地址。")]),_._v(" "),v("h6",{attrs:{id:"按字地址寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按字地址寻址"}},[_._v("#")]),_._v(" 按字地址寻址")]),_._v(" "),v("p",[_._v("以4个格子为一个存储单元，称为字存储单元。")]),_._v(" "),v("p",[_._v("按字地址寻址：给出一个字地址，可以取出长度为一个字的数据。")]),_._v(" "),v("p",[_._v("字地址：")]),_._v(" "),v("p",[_._v("0～3为一个字，4～7为一个字...，每个字中最小的字节地址为字地址。")]),_._v(" "),v("p",[_._v("假设某数据长度为4B，则需要给出1个字地址。")]),_._v(" "),v("h5",{attrs:{id:"按字编址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按字编址"}},[_._v("#")]),_._v(" 按字编址")]),_._v(" "),v("p",[_._v("4个字节为一个存储单元来编号")]),_._v(" "),v("h4",{attrs:{id:"数据存放方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据存放方式"}},[_._v("#")]),_._v(" 数据存放方式")]),_._v(" "),v("p",[_._v("大端方式：数据的高位存放在存储单元的低地址部分。")]),_._v(" "),v("p",[_._v("小端方式：数据的低位存放在存储单元的低地址部分。")]),_._v(" "),v("h4",{attrs:{id:"三个字长"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三个字长"}},[_._v("#")]),_._v(" 三个字长")]),_._v(" "),v("p",[_._v("机器字长：CPU一次能处理的二进制数据的位数。")]),_._v(" "),v("p",[_._v("指令字长：一个指令字中包含二进制代码的位数。")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[_._v("- 单字长指令：指令长度 = 机器字长\n- 半字长指令：指令长度 = 机器字长/2\n- 双字长指令：指令长度 = 机器字长*2\n")])])]),v("p",[_._v("存储字长：一个存储单元存储二进制代码的长度。")]),_._v(" "),v("h4",{attrs:{id:"边界对齐存储"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#边界对齐存储"}},[_._v("#")]),_._v(" 边界对齐存储")]),_._v(" "),v("p",[_._v("起始地址是字长（按字节算）的整数倍。")]),_._v(" "),v("h4",{attrs:{id:"指令寻址-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令寻址-2"}},[_._v("#")]),_._v(" 指令寻址")]),_._v(" "),v("p",[_._v("下一条欲执行指令的指令地址，始终由程序计数器PC给出。")]),_._v(" "),v("h5",{attrs:{id:"顺序寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#顺序寻址"}},[_._v("#")]),_._v(" 顺序寻址")]),_._v(" "),v("p",[_._v("（PC）+1  →  PC")]),_._v(" "),v("h5",{attrs:{id:"跳跃寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#跳跃寻址"}},[_._v("#")]),_._v(" 跳跃寻址")]),_._v(" "),v("p",[_._v("由转移指令指出")]),_._v(" "),v("p",[_._v("举例：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("指令地址")]),_._v(" "),v("th",[_._v("操作码")]),_._v(" "),v("th",[_._v("地址码")]),_._v(" "),v("th",[_._v("PC（默认指向第一条地址0）")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("LDA")]),_._v(" "),v("td",[_._v("1000")]),_._v(" "),v("td",[_._v("执行完后自动+1，变为1")])]),_._v(" "),v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("ADD")]),_._v(" "),v("td",[_._v("1001")]),_._v(" "),v("td",[_._v("2")])]),_._v(" "),v("tr",[v("td",[_._v("2")]),_._v(" "),v("td",[_._v("DEC")]),_._v(" "),v("td",[_._v("1200")]),_._v(" "),v("td",[_._v("3")])]),_._v(" "),v("tr",[v("td",[_._v("3")]),_._v(" "),v("td",[_._v("JMP")]),_._v(" "),v("td",[_._v("7")]),_._v(" "),v("td",[_._v("将PC指向7，跳到第7条指令执行")])]),_._v(" "),v("tr",[v("td",[_._v("4")]),_._v(" "),v("td",[_._v("LDA")]),_._v(" "),v("td",[_._v("2000")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("5")]),_._v(" "),v("td",[_._v("SUB")]),_._v(" "),v("td",[_._v("2001")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("6")]),_._v(" "),v("td",[_._v("INC")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("7")]),_._v(" "),v("td",[_._v("LDA")]),_._v(" "),v("td",[_._v("1100")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("...")]),_._v(" "),v("td"),_._v(" "),v("td")])])]),_._v(" "),v("h3",{attrs:{id:"数据寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据寻址"}},[_._v("#")]),_._v(" 数据寻址")]),_._v(" "),v("p",[_._v("确定本条指令的操组数地址")]),_._v(" "),v("h4",{attrs:{id:"操作数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作数类型"}},[_._v("#")]),_._v(" 操作数类型")]),_._v(" "),v("p",[_._v("地址：无符号数")]),_._v(" "),v("p",[_._v("数字：定点数、浮点数、十进制数")]),_._v(" "),v("p",[_._v("字符：ASCII码")]),_._v(" "),v("p",[_._v("逻辑数：逻辑运算")]),_._v(" "),v("h4",{attrs:{id:"寻址方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#寻址方式"}},[_._v("#")]),_._v(" 寻址方式")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("0000 隐含寻址")]),_._v(" "),v("th",[_._v("0001 立即寻址")]),_._v(" "),v("th",[_._v("0010 直接寻址")]),_._v(" "),v("th",[_._v("0011 间接寻址")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0100 寄存器寻址")]),_._v(" "),v("td",[_._v("0101 寄存器间接寻址")]),_._v(" "),v("td",[_._v("0110 相对寻址")]),_._v(" "),v("td",[_._v("0111 基础寻址")])]),_._v(" "),v("tr",[v("td",[_._v("1000 变址寻址")]),_._v(" "),v("td",[_._v("1001 堆栈寻址")]),_._v(" "),v("td"),_._v(" "),v("td")])])]),_._v(" "),v("h4",{attrs:{id:"组成-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组成-2"}},[_._v("#")]),_._v(" 组成")]),_._v(" "),v("h5",{attrs:{id:"一地址指令-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一地址指令-2"}},[_._v("#")]),_._v(" 一地址指令")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作码（OP）")]),_._v(" "),v("th",[_._v("寻址特征")]),_._v(" "),v("th",[_._v("形式地址（A）")])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("操作数的真实地址称为EA。")]),_._v(" "),v("p",[_._v("假设指令字长 = 机器字长 = 存储字长，假设操作数为3")]),_._v(" "),v("h4",{attrs:{id:"立即寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#立即寻址"}},[_._v("#")]),_._v(" 立即寻址")]),_._v(" "),v("p",[_._v("形式地址A就是操作数本身，又称为立即数，一般采用补码形式。#号表示立即寻址特征。")]),_._v(" "),v("p",[_._v("优点：指令执行阶段不访问主存，指令执行时间最短。")]),_._v(" "),v("p",[_._v("缺点：A的位数限制了立即数的范围，如A的位数为n，且立即数采用补码时，可表示的数据范围为-2"),v("sup",[_._v("n-1")]),_._v(" ~ 2"),v("sup",[_._v("n-1")]),_._v(" - 1。")]),_._v(" "),v("h5",{attrs:{id:"访存次数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访存次数"}},[_._v("#")]),_._v(" 访存次数")]),_._v(" "),v("p",[_._v("取指令，访存1次")]),_._v(" "),v("p",[_._v("执行指令，访存0次")]),_._v(" "),v("p",[_._v("不考虑存结果，共访存1次。")]),_._v(" "),v("h4",{attrs:{id:"直接寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#直接寻址"}},[_._v("#")]),_._v(" 直接寻址")]),_._v(" "),v("p",[_._v("指令中的形式地址A就是操组数的真实地址EA，即EA=A。")]),_._v(" "),v("p",[_._v("优点：简单，指令执行阶段仅访问一次主存，不需要专门计算操作数地址。")]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("ul",[v("li",[_._v("A的位数决定了该指令操作数的寻址范围；操作数的地址不易修改。")])]),_._v(" "),v("h5",{attrs:{id:"访存次数-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访存次数-2"}},[_._v("#")]),_._v(" 访存次数")]),_._v(" "),v("p",[_._v("取指令，访存1次")]),_._v(" "),v("p",[_._v("执行指令，访存1次")]),_._v(" "),v("p",[_._v("不考虑存结果，共访存2次。")]),_._v(" "),v("h4",{attrs:{id:"间接寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#间接寻址"}},[_._v("#")]),_._v(" 间接寻址")]),_._v(" "),v("p",[_._v("指令的地址字段给出的形式地址不是操作数的真正地址，而是操作数的有效地址所在的存储单元的地址，也就是操作数地址的地址，即EA=(A)。")]),_._v(" "),v("p",[_._v("又可分为一次间址和两次间址")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("ul",[v("li",[_._v("可扩大寻址范围（有效地址EA的位数大于形式地址A的位数）。")]),_._v(" "),v("li",[_._v("便于编制程序（用间接寻址可以方便的完成子程序返回）。")])]),_._v(" "),v("p",[_._v("缺点：指令在执行阶段要多次访存（一次间址需两次访存，多次寻址需根据存储字的最高位确定几次访存）。")]),_._v(" "),v("h5",{attrs:{id:"访存次数-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访存次数-3"}},[_._v("#")]),_._v(" 访存次数")]),_._v(" "),v("p",[_._v("一次间址")]),_._v(" "),v("p",[_._v("取指令，访存1次")]),_._v(" "),v("p",[_._v("执行指令，访存2次")]),_._v(" "),v("p",[_._v("不考虑存结果，共访存3次。")]),_._v(" "),v("h4",{attrs:{id:"寄存器寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#寄存器寻址"}},[_._v("#")]),_._v(" 寄存器寻址")]),_._v(" "),v("p",[_._v("在指令字中直接给出操组数所在的寄存器编号，即EA=R"),v("sub",[_._v("i")]),_._v("，其操作数在由R"),v("sub",[_._v("i")]),_._v("所指的寄存器内。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("ul",[v("li",[_._v("指令在执行阶段不访问主存，只访问寄存器。")]),_._v(" "),v("li",[_._v("指令字短且执行速度快，支持向量/矩阵运算。")])]),_._v(" "),v("p",[_._v("缺点：寄存器价格昂贵，计算机中寄存器个数有限。")]),_._v(" "),v("h5",{attrs:{id:"访存次数-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访存次数-4"}},[_._v("#")]),_._v(" 访存次数")]),_._v(" "),v("p",[_._v("取指令，访存1次")]),_._v(" "),v("p",[_._v("执行指令，访存0次")]),_._v(" "),v("p",[_._v("不考虑存结果，共访存1次。")]),_._v(" "),v("h4",{attrs:{id:"寄存器间接寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#寄存器间接寻址"}},[_._v("#")]),_._v(" 寄存器间接寻址")]),_._v(" "),v("p",[_._v("寄存器R"),v("sub",[_._v("i")]),_._v("中给出的不是一个操作数，而是操作数所在主存单元的地址，即EA=(R"),v("sub",[_._v("i")]),_._v(")。")]),_._v(" "),v("p",[_._v("特点：与一般间接寻址相比速度更快，但指令的执行阶段需要访问主存（因为操作数在主存中）。")]),_._v(" "),v("h5",{attrs:{id:"访存次数-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访存次数-5"}},[_._v("#")]),_._v(" 访存次数")]),_._v(" "),v("p",[_._v("取指令，访存1次")]),_._v(" "),v("p",[_._v("执行指令，访存1次")]),_._v(" "),v("p",[_._v("不考虑存结果，共访存2次。")]),_._v(" "),v("h4",{attrs:{id:"隐含寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#隐含寻址"}},[_._v("#")]),_._v(" 隐含寻址")]),_._v(" "),v("p",[_._v("不是明显的给出操作数地址，而是在指令中隐含着操组数的地址。")]),_._v(" "),v("p",[_._v("优点：有利于缩短指令字长。")]),_._v(" "),v("p",[_._v("缺点：需增加存储操组数或隐含地址的硬件。")]),_._v(" "),v("p",[_._v("​")]),_._v(" "),v("h3",{attrs:{id:"数据寻址-偏移寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据寻址-偏移寻址"}},[_._v("#")]),_._v(" 数据寻址-偏移寻址")]),_._v(" "),v("h4",{attrs:{id:"基址寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基址寻址"}},[_._v("#")]),_._v(" 基址寻址")]),_._v(" "),v("p",[_._v("将CPU中基址寄存器（BR）的内容加上指令格式中的形式地址A，而形成操作数的有效地址，即EA=(BR)+A。")]),_._v(" "),v("ul",[v("li",[_._v("采用专用寄存器BR作为基址寄存器")]),_._v(" "),v("li",[_._v("采用通用寄存器作为基址寄存器")])]),_._v(" "),v("p",[_._v("基址寄存器是面向操作系统的，其内容由操作系统或管理程序确定。在程序执行过程中，基址寄存器的内容不变（作为基地址），形式地址可变（作为偏移量）。当采用通用寄存器作为基址寄存器时，可由用户决定哪个寄存器作为基址寄存器，但其内容仍由操作系统决定。")]),_._v(" "),v("p",[_._v("优点：可扩大寻址范围（基址寄存器的位数大于形式地址A的位数）；用户不必考虑自己的程序存于主存的哪一个空间区域，故有利于多道程序设计，以及可用于编制浮动程序。")]),_._v(" "),v("h4",{attrs:{id:"变址寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变址寻址"}},[_._v("#")]),_._v(" 变址寻址")]),_._v(" "),v("p",[_._v("有效地址EA等于指令字中的形式地址A与变址寄存器IX的内容相加之和，即EA=(IX)+A，其中IX为变址寄存器（专用），也可用通用寄存器作为变址寄存器。")]),_._v(" "),v("p",[_._v("变址寄存器是面向用户的，在程序执行过程中，变址寄存器的内容可由用户改变（作为偏移量），形式地址A不变（作为基础）。")]),_._v(" "),v("p",[_._v("优点：可扩大寻址范围（变址寄存器的位数大于形式地址A的位数）；在数组处理过程中，可设定A为数组的首地址，不断改变变址寄存器IX的内容，便可很容易形成数组中任一数据的地址，特别适合编制循环程序。")]),_._v(" "),v("p",[_._v("变址寻址与基址寻址配合使用：EA=A+(BR)+(IX)")]),_._v(" "),v("p",[_._v("变址寻址与间接寻址配合使用：")]),_._v(" "),v("p",[_._v("EA=(A+(IX))，先变址后间址；")]),_._v(" "),v("p",[_._v("EA=(A)+(IX)，先间址后变址。")]),_._v(" "),v("h4",{attrs:{id:"相对寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#相对寻址"}},[_._v("#")]),_._v(" 相对寻址")]),_._v(" "),v("p",[_._v("把程序计数器PC的内容加上指令格式中的形式地址A而形成操组数的有效地址，即EA=(PC)+A，其中A是相对于当前指令地址的位移量，可正可负，补码表示。")]),_._v(" "),v("p",[_._v("优点：操组数的地址不是固定的，它随着PC值的变化而变化，并且指令地址之间总是相差一个固定值，因此便于程序浮动。")]),_._v(" "),v("p",[_._v("相对寻址广泛应用于转移指令。")]),_._v(" "),v("h3",{attrs:{id:"数据寻址-堆栈寻址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据寻址-堆栈寻址"}},[_._v("#")]),_._v(" 数据寻址-堆栈寻址")]),_._v(" "),v("p",[_._v("操作数存放在堆栈中，隐含使用堆栈指针(SP)作为操组数地址。")]),_._v(" "),v("p",[_._v("堆栈是存储器（或专用寄存器组）中一块特定的按“后进先出（LIFO）”原则管理的存储区，该存储区中被读/写单元的地址是用一个特定的寄存器给出的，该寄存器称为堆栈指针（SP）。")]),_._v(" "),v("h3",{attrs:{id:"cisc和risc替换版"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cisc和risc替换版"}},[_._v("#")]),_._v(" CISC和RISC替换版")]),_._v(" "),v("h4",{attrs:{id:"cisc-complex-instruction-set-computer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cisc-complex-instruction-set-computer"}},[_._v("#")]),_._v(" CISC（Complex Instruction Set Computer）")]),_._v(" "),v("p",[_._v("设计思路：一条指令完成一个复杂的基本功能。")]),_._v(" "),v("p",[_._v("代表：x86架构，主要用于笔记本、台式机等。")]),_._v(" "),v("p",[_._v("80-20规律：典型程序中80%的语句仅仅使用处理机中20%的指令，所以诞生RISC")]),_._v(" "),v("h4",{attrs:{id:"risc-reduced-instruction-set-computer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#risc-reduced-instruction-set-computer"}},[_._v("#")]),_._v(" RISC（Reduced Instruction Set Computer）")]),_._v(" "),v("p",[_._v("设计思路：一条指令完成一个基本“动作”，多条指令组合完成一个复杂的基本功能。")]),_._v(" "),v("p",[_._v("代表：ARM架构，主要用于手机、平板等。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("类别")]),_._v(" "),v("th",[_._v("CISC")]),_._v(" "),v("th",[_._v("RISC")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("指令系统高")]),_._v(" "),v("td",[_._v("复杂，庞大")]),_._v(" "),v("td",[_._v("简单，精简")])]),_._v(" "),v("tr",[v("td",[_._v("指令数目")]),_._v(" "),v("td",[_._v("一般大于200条")]),_._v(" "),v("td",[_._v("一般小于100条")])]),_._v(" "),v("tr",[v("td",[_._v("指令字长")]),_._v(" "),v("td",[_._v("不固定")]),_._v(" "),v("td",[_._v("定长")])]),_._v(" "),v("tr",[v("td",[_._v("可访存指令")]),_._v(" "),v("td",[_._v("不加限制")]),_._v(" "),v("td",[_._v("只有LOAD/STORE指令")])]),_._v(" "),v("tr",[v("td",[_._v("各种指令执行时间")]),_._v(" "),v("td",[_._v("相差较大")]),_._v(" "),v("td",[_._v("绝大多数在一个周期内完成")])]),_._v(" "),v("tr",[v("td",[_._v("各种指令使用频度")]),_._v(" "),v("td",[_._v("相差很大")]),_._v(" "),v("td",[_._v("都比较常用")])]),_._v(" "),v("tr",[v("td",[_._v("通用寄存器数量")]),_._v(" "),v("td",[_._v("较少")]),_._v(" "),v("td",[_._v("多")])]),_._v(" "),v("tr",[v("td",[_._v("目标代码")]),_._v(" "),v("td",[_._v("难以用优化编译生成高效的目标代码程序")]),_._v(" "),v("td",[_._v("采用优化的编译程序，生成代码较为高效")])]),_._v(" "),v("tr",[v("td",[_._v("控制方式")]),_._v(" "),v("td",[_._v("绝大多数为微程序控制")]),_._v(" "),v("td",[_._v("绝大多数为组合逻辑控制")])]),_._v(" "),v("tr",[v("td",[_._v("指令流水线")]),_._v(" "),v("td",[_._v("可以通过一定方式实现")]),_._v(" "),v("td",[_._v("必须实现")])])])]),_._v(" "),v("h2",{attrs:{id:"第五章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第五章"}},[_._v("#")]),_._v(" 第五章")]),_._v(" "),v("p",[_._v("中央处理器")]),_._v(" "),v("h3",{attrs:{id:"cpu的功能和结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu的功能和结构"}},[_._v("#")]),_._v(" CPU的功能和结构")]),_._v(" "),v("h4",{attrs:{id:"cpu的功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu的功能"}},[_._v("#")]),_._v(" CPU的功能")]),_._v(" "),v("ol",[v("li",[_._v("指令控制：完成取指令、分析指令和执行指令的操作，即程序的顺序控制。")]),_._v(" "),v("li",[_._v("操作控制：一条指令的功能往往是由若干操作信号的组合来实现的。CPU管理并产生由内存取出的每条指令的操作信号，把各种操作信号送往相应的部件，从而控制这些部件按指令的要求进行动作。")]),_._v(" "),v("li",[_._v("时间控制：对各种操作加以时间上的控制。时间控制要为每条指令按时间顺序提供应有的控制信号。")]),_._v(" "),v("li",[_._v("数据加工：对数据进行算术和逻辑运算。")]),_._v(" "),v("li",[_._v("中断处理：对计算机运行过程中出现的异常情况和特殊请求进行处理。")])]),_._v(" "),v("h4",{attrs:{id:"运算器-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运算器-2"}},[_._v("#")]),_._v(" 运算器")]),_._v(" "),v("p",[_._v("对数据进行加工")]),_._v(" "),v("h4",{attrs:{id:"控制器-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器-2"}},[_._v("#")]),_._v(" 控制器")]),_._v(" "),v("p",[_._v("协调并控制计算机各部件执行程序的指令序列，基本功能包括取指令、分析指令、执行指令。")]),_._v(" "),v("p",[_._v("取指令：自动形成指令地址；自动发出取指令的命令。")]),_._v(" "),v("p",[_._v("分析指令：操作码译码（分析本条指令要完成什么操作）；产生操作数的有效地址。")]),_._v(" "),v("p",[_._v("执行指令：根据分析指令得到的“操作命令”和“操作数地址”，形成操作信号控制序列，控制运算器、存储器以及IO设备完成相应的操作。")]),_._v(" "),v("p",[_._v("中断处理：管理总线及输入输出；处理异常情况（如掉电）和特殊请求（如打印机请求打印一行字符）。")]),_._v(" "),v("h4",{attrs:{id:"运算器的基本结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运算器的基本结构"}},[_._v("#")]),_._v(" 运算器的基本结构")]),_._v(" "),v("p",[_._v("算术逻辑单元：主要功能是进行算术和逻辑运算。")]),_._v(" "),v("p",[_._v("通用寄存器：用于存放操作数（包括源操作数、目的操作数及中间结果）和各种地址信息等。")]),_._v(" "),v("p",[_._v("暂存寄存器：用于暂存从主存读来的数据，这个数据不能存放在通用寄存器中，否则会破坏其原有内容。")]),_._v(" "),v("p",[_._v("累加寄存器：它是一个通用寄存器，用于暂时存放ALU运算的结果信息，用于实现加法运算。")]),_._v(" "),v("p",[_._v("程序状态字寄存器：保留由算术逻辑运算指令或测试指令的结果而建立的各种状态信息，如溢出标志（OP）、符号标志（SF）、零标志（ZF）、进位标志（CF）等。PSW中的这些位参与并决定微操作的形成。")]),_._v(" "),v("p",[_._v("移位器：对运算结果进行移位运算。")]),_._v(" "),v("p",[_._v("计数器：控制乘除运算的操作步数。")]),_._v(" "),v("h4",{attrs:{id:"专用数据通路方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#专用数据通路方式"}},[_._v("#")]),_._v(" 专用数据通路方式")]),_._v(" "),v("p",[_._v("根据指令执行过程中的数据和地址的流动方向安排连接线路。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("p",[_._v("性能较高，基本不存在数据冲突现象，但结构复杂，硬件量大，不易实现。")]),_._v(" "),v("p",[_._v("方案一：")]),_._v(" "),v("p",[_._v("使用多路选择器根据控制信号选择一路输出。")]),_._v(" "),v("p",[_._v("方案二：")]),_._v(" "),v("p",[_._v("使用三态门可以控制每一路是否输出。")]),_._v(" "),v("h4",{attrs:{id:"cpu内部单总线方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu内部单总线方式"}},[_._v("#")]),_._v(" CPU内部单总线方式")]),_._v(" "),v("p",[_._v("将所有寄存器的输入端和输出端都连接到一条公共的通路上。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("p",[_._v("结构简单，容易实现，但数据传输存在较多冲突的现象，性能较低。")]),_._v(" "),v("h4",{attrs:{id:"运算器的基本结构-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运算器的基本结构-2"}},[_._v("#")]),_._v(" 运算器的基本结构")]),_._v(" "),v("p",[_._v("程序计数器：用于指出下一条指令在主存中存放地址。CPU就是根据PC的内容去主存中取指令的。因程序中指令（通常）是顺序执行的，所以PC有自增功能。")]),_._v(" "),v("p",[_._v("指令寄存器：用于保存当前正在执行的那条指令。")]),_._v(" "),v("p",[_._v("指令译码器：仅对操作码字段进行译码，向控制器提供特定的操作信号。")]),_._v(" "),v("p",[_._v("微操作信号发生器：根据IR的内容（指令）、PSW的内容（状态信息）及时序信号，产生控制整个计算机系统所需的各种控制信号，其结构有组合逻辑型和存储逻辑型两种。")]),_._v(" "),v("p",[_._v("时序系统：用于产生各种时序信号，它们都是由统一时钟（CLOCK）分频得到。")]),_._v(" "),v("p",[_._v("存储地址寄存器：用于存放所要访问的主存单元的地址。")]),_._v(" "),v("p",[_._v("存储器数据寄存器：用于存放向主存写入的信息或从主存中读出的信息。")]),_._v(" "),v("h4",{attrs:{id:"cpu基本结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu基本结构"}},[_._v("#")]),_._v(" CPU基本结构")]),_._v(" "),v("p",[_._v("ALU")]),_._v(" "),v("p",[_._v("寄存器")]),_._v(" "),v("p",[_._v("中断系统")]),_._v(" "),v("p",[_._v("CU")]),_._v(" "),v("h3",{attrs:{id:"指令周期的数据流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令周期的数据流"}},[_._v("#")]),_._v(" 指令周期的数据流")]),_._v(" "),v("h4",{attrs:{id:"指令执行过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令执行过程"}},[_._v("#")]),_._v(" 指令执行过程")]),_._v(" "),v("p",[_._v("指令周期：CPU从主存中每取出并执行一条指令所需的全部时间。")]),_._v(" "),v("p",[_._v("指令周期常常用若干机器周期来表示，机器周期又叫CPU周期。")]),_._v(" "),v("p",[_._v("一个机器周期又包含若干始终周期（也称为节拍、T周期或CPU时钟周期，它是CPU操作的最基本单位）。")]),_._v(" "),v("p",[_._v("每个指令周期内的机器周期数可以不等，每个机器周期内的节拍数也可以不等。")]),_._v(" "),v("h4",{attrs:{id:"指令周期流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令周期流程"}},[_._v("#")]),_._v(" 指令周期流程")]),_._v(" "),v("p",[_._v("取指周期：取指令")]),_._v(" "),v("p",[_._v("间址周期：取有效地址")]),_._v(" "),v("p",[_._v("执行周期：取操作数")]),_._v(" "),v("p",[_._v("中断周期：保护程序断点")]),_._v(" "),v("p",[_._v("四个周期都有CPU访存操作，只是访问的目的不同。")]),_._v(" "),v("p",[_._v("CLK触发器，判断处在哪一个周期。")]),_._v(" "),v("h5",{attrs:{id:"取指周期的数据流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#取指周期的数据流"}},[_._v("#")]),_._v(" 取指周期的数据流")]),_._v(" "),v("ol",[v("li",[_._v("当前指令地址送至存储器地址寄存器，记做：(PC)\t→\tMAR")]),_._v(" "),v("li",[_._v("CU发出控制信号，记控制总线传到主存，这里是读信号，记做：1→R")]),_._v(" "),v("li",[_._v("将MAR所指主存中的内容经数据总线送入MDR，记做：M(MAR)→MDR")]),_._v(" "),v("li",[_._v("将MDR中的内容（此时是指令）送入IR，记做：(MDR)→IR")]),_._v(" "),v("li",[_._v("CU发出控制信号，形成下一条指令地址，记做：(PC)+1→PC")])]),_._v(" "),v("h5",{attrs:{id:"间址周期的数据流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#间址周期的数据流"}},[_._v("#")]),_._v(" 间址周期的数据流")]),_._v(" "),v("ol",[v("li",[_._v("将指令的地址码送入MAR，记做：Ad(IR)→MAR 或 Ad(MDR)→MAR")]),_._v(" "),v("li",[_._v("CU发出控制信号，启动主存做读操作，记做：1→R")]),_._v(" "),v("li",[_._v("将MAR所指主存中的内容经数据总线送入MDR，记做：M(MAR)→MDR")]),_._v(" "),v("li",[_._v("将有效地址送至指令的地址码字段，记做：MDR→Ad(IR)")])]),_._v(" "),v("h5",{attrs:{id:"执行周期的数据流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行周期的数据流"}},[_._v("#")]),_._v(" 执行周期的数据流")]),_._v(" "),v("p",[_._v("执行周期的任务是根据IR中的指令字的操作码和操作数通过ALU操作产生执行结果。不同指令的执行周期操作不同，因此没有统一的数据流向。")]),_._v(" "),v("h5",{attrs:{id:"中断周期的数据流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断周期的数据流"}},[_._v("#")]),_._v(" 中断周期的数据流")]),_._v(" "),v("p",[_._v("中断：暂停当前任务去完成其他任务。为了能够恢复当前任务，需要保存断点。一般使用堆栈来保存断点，这里用SP表示栈顶地址，假设SP指向栈顶元素，进栈操作是先修改指针，后存入数据。")]),_._v(" "),v("ol",[v("li",[_._v("CU控制将SP减1，修改后的地址送入MAR，记做：(SP)-1 → SP，(SP)→MAR，本质上是将断点存入某个存储单元，假设其地址为a，故可记做：a→MAR")]),_._v(" "),v("li",[_._v("CU发出控制信号，启动主存做写操作，记做：1 → W")]),_._v(" "),v("li",[_._v("将断点(PC内容)送入MDR，记做：(PC) → MDR")]),_._v(" "),v("li",[_._v("CU控制将中断服务程序的入口地址（由向量地址形成部件产生）送入PC，记做：向量地址→PC")])]),_._v(" "),v("h6",{attrs:{id:"指令执行方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令执行方案"}},[_._v("#")]),_._v(" 指令执行方案")]),_._v(" "),v("p",[_._v("一个指令周期通常要包括几个时间段（执行步骤），每个步骤完成指令的一部分功能，几个依次执行的步骤完成这条指令的全部功能。")]),_._v(" "),v("p",[_._v("方案一：单指令周期")]),_._v(" "),v("p",[_._v("对所有指令都选用相同的执行时间来完成。")]),_._v(" "),v("p",[_._v("指令之间串行执行；指令周期取决于执行时间最长的指令的执行时间。")]),_._v(" "),v("p",[_._v("对于那些本来可以在更短时间内完成的指令，要使用这个较长的周期来完成，会降低整个系统的运行速度。")]),_._v(" "),v("p",[_._v("方案二：多指令周期")]),_._v(" "),v("p",[_._v("对不同类型的指令选用不同的执行步骤来完成。")]),_._v(" "),v("p",[_._v("指令之间串行执行；可选用不同个数的时钟周期来完成不同指令的执行过程。")]),_._v(" "),v("p",[_._v("需要更复杂的硬件设计。")]),_._v(" "),v("p",[_._v("方案三：流水线方案")]),_._v(" "),v("p",[_._v("在每一个时钟周期启动一条指令，尽量让多条指令同时运行，但各自处在不同的执行步骤中。")]),_._v(" "),v("p",[_._v("指令之间并行执行。")]),_._v(" "),v("h3",{attrs:{id:"数据通路-cpu内部单总线方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据通路-cpu内部单总线方式"}},[_._v("#")]),_._v(" 数据通路-CPU内部单总线方式")]),_._v(" "),v("p",[_._v("数据通路：数据在功能部件之间传送的路径。")]),_._v(" "),v("p",[_._v("信息从哪里开始中间经过哪些部件最后传到哪里。")]),_._v(" "),v("p",[_._v("由控制部件产生的控制信号建立数据通路。")]),_._v(" "),v("p",[_._v("数据通路的基本结构：")]),_._v(" "),v("ul",[v("li",[_._v("CPU内部单总线方式")]),_._v(" "),v("li",[_._v("CPU内部多总线方式")]),_._v(" "),v("li",[_._v("专用数据通路方式")])]),_._v(" "),v("h4",{attrs:{id:"cpu内部单总线方式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu内部单总线方式-2"}},[_._v("#")]),_._v(" CPU内部单总线方式")]),_._v(" "),v("p",[_._v("内部总线：")]),_._v(" "),v("p",[_._v("是指同一部件，如CPU内部连接各寄存器及运算部件之间的总线。")]),_._v(" "),v("p",[_._v("系统总线：")]),_._v(" "),v("p",[_._v("是指同一台计算机系统的各部件，如CPU、内存、通道和各类I/O接口间互相连接的总线。")]),_._v(" "),v("h4",{attrs:{id:"寄存器之间的数据传送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#寄存器之间的数据传送"}},[_._v("#")]),_._v(" 寄存器之间的数据传送")]),_._v(" "),v("p",[_._v("比如把PC内容送至MAR，实现传送操作的流程及控制信号为：")]),_._v(" "),v("p",[_._v("(PC) → Bus，PC"),v("sub",[_._v("out")]),_._v("有效，PC内容送总线")]),_._v(" "),v("p",[_._v("Bus → MAR，MAR"),v("sub",[_._v("in")]),_._v("有效，总线内容送MAR")]),_._v(" "),v("h4",{attrs:{id:"主存与cpu之间的数据传送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主存与cpu之间的数据传送"}},[_._v("#")]),_._v(" 主存与CPU之间的数据传送")]),_._v(" "),v("p",[_._v("比如CPU从主存读取指令，实现传送操作的流程及控制信号为：")]),_._v(" "),v("p",[_._v("(PC) → Bus → MAR，PC"),v("sub",[_._v("out")]),_._v("和MAR"),v("sub",[_._v("in")]),_._v("有效，现行指令地址 → MAR")]),_._v(" "),v("p",[_._v("1 → R，CU发读命令")]),_._v(" "),v("p",[_._v("MEM(MAR) → MDR，MDR"),v("sub",[_._v("in")]),_._v("有效")]),_._v(" "),v("p",[_._v("MDR → Bus → IR，MDR"),v("sub",[_._v("out")]),_._v("和IR"),v("sub",[_._v("in")]),_._v("有效，现行指令 → IR")]),_._v(" "),v("h4",{attrs:{id:"执行算术或逻辑运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行算术或逻辑运算"}},[_._v("#")]),_._v(" 执行算术或逻辑运算")]),_._v(" "),v("p",[_._v("比如一条加法指令，微操作序列及控制信号为：")]),_._v(" "),v("p",[_._v("Ad(IR) → Bus → MAR，MDR"),v("sub",[_._v("out")]),_._v("和MAR"),v("sub",[_._v("in")]),_._v("有效")]),_._v(" "),v("p",[_._v("1 → R，CU发读命令")]),_._v(" "),v("p",[_._v("MEM(MAR) → 数据线 → MDR，MDR"),v("sub",[_._v("in")]),_._v("有效")]),_._v(" "),v("p",[_._v("MDR → Bus → Y，MDR"),v("sub",[_._v("out")]),_._v("和Y"),v("sub",[_._v("in")]),_._v("有效，操作数 → Y")]),_._v(" "),v("p",[_._v("(ACC) + (Y) → Z，ACC"),v("sub",[_._v("out")]),_._v("和ALU"),v("sub",[_._v("in")]),_._v("有效，CU向ALU发送加命令")]),_._v(" "),v("p",[_._v("Z → ACC，Z"),v("sub",[_._v("out")]),_._v("和ACC"),v("sub",[_._v("in")]),_._v("有效，结果 → ACC")]),_._v(" "),v("p",[_._v("例子：设有如图所示的单总线结构，分析指令ADD(R0)，R1的指令流程和控制信号。")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("分析指令功能和指令周期")]),_._v(" "),v("p",[_._v("功能：((R0)) + (R1) → (R0)")]),_._v(" "),v("p",[_._v("取指周期、间址周期、执行周期")])]),_._v(" "),v("li",[v("p",[_._v("写出各阶段的指令流程")])])]),_._v(" "),v("p",[_._v("取指周期：公共操作")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("时序")]),_._v(" "),v("th",[_._v("微操作")]),_._v(" "),v("th",[_._v("有效控制信号")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("(PC) → MAR")]),_._v(" "),v("td",[_._v("PC"),v("sub",[_._v("out")]),_._v("，MAR"),v("sub",[_._v("in")])])]),_._v(" "),v("tr",[v("td",[_._v("2")]),_._v(" "),v("td",[_._v("M(MAR) → MDR")]),_._v(" "),v("td",[_._v("MemR，MAR"),v("sub",[_._v("out")]),_._v("，MDR"),v("sub",[_._v("in")]),_._v("E")])]),_._v(" "),v("tr",[v("td",[_._v("3")]),_._v(" "),v("td",[_._v("(MDR) → IR")]),_._v(" "),v("td",[_._v("MDR"),v("sub",[_._v("out")]),_._v("，IR"),v("sub",[_._v("in")])])]),_._v(" "),v("tr",[v("td",[_._v("4")]),_._v(" "),v("td",[_._v("指令译码")]),_._v(" "),v("td",[_._v("-")])]),_._v(" "),v("tr",[v("td",[_._v("5")]),_._v(" "),v("td",[_._v("(PC) +1 → PC")]),_._v(" "),v("td",[_._v("-")])])])]),_._v(" "),v("p",[_._v("间址周期：完成取数操作，被加数在主存中，加数已经放在寄存器R1中。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("时序")]),_._v(" "),v("th",[_._v("微操作")]),_._v(" "),v("th",[_._v("有效控制信号")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("(R0) → MAR")]),_._v(" "),v("td",[_._v("R0"),v("sub",[_._v("out")]),_._v("，MAR"),v("sub",[_._v("in")])])]),_._v(" "),v("tr",[v("td",[_._v("2")]),_._v(" "),v("td",[_._v("M(MAR) → MDR")]),_._v(" "),v("td",[_._v("MemR，MAR"),v("sub",[_._v("out")]),_._v("，MDR"),v("sub",[_._v("in")]),_._v("E")])]),_._v(" "),v("tr",[v("td",[_._v("3")]),_._v(" "),v("td",[_._v("(MDR) → Y")]),_._v(" "),v("td",[_._v("MDR"),v("sub",[_._v("out")]),_._v("，Y"),v("sub",[_._v("in")])])])])]),_._v(" "),v("p",[_._v("执行周期：相加操作")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("时序")]),_._v(" "),v("th",[_._v("微操作")]),_._v(" "),v("th",[_._v("有效控制信号")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("(R1) + (Y) → Z")]),_._v(" "),v("td",[_._v("R1"),v("sub",[_._v("out")]),_._v("，ALU"),v("sub",[_._v("in")]),_._v("，CU向ALU发ADD控制信号")])]),_._v(" "),v("tr",[v("td",[_._v("2")]),_._v(" "),v("td",[_._v("(Z) → MDR")]),_._v(" "),v("td",[_._v("Z"),v("sub",[_._v("out")]),_._v("，MDR"),v("sub",[_._v("in")])])]),_._v(" "),v("tr",[v("td",[_._v("3")]),_._v(" "),v("td",[_._v("(MDR) → M(MAR)")]),_._v(" "),v("td",[_._v("MemW，MDR"),v("sub",[_._v("out")]),_._v("E，MAR"),v("sub",[_._v("out")])])])])]),_._v(" "),v("h3",{attrs:{id:"数据通路-专用数据通路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据通路-专用数据通路"}},[_._v("#")]),_._v(" 数据通路-专用数据通路")]),_._v(" "),v("h4",{attrs:{id:"取指周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#取指周期"}},[_._v("#")]),_._v(" 取指周期")]),_._v(" "),v("p",[_._v("(PC) → MAR")]),_._v(" "),v("p",[_._v("(MAR) → 主存")]),_._v(" "),v("p",[_._v("1 → R，控制单元向主存发送读命令")]),_._v(" "),v("p",[_._v("M(MAR) → MDR")]),_._v(" "),v("p",[_._v("(MDR) → IR")]),_._v(" "),v("p",[_._v("(PC) + 1 → PC")]),_._v(" "),v("p",[_._v("Op(IR) → CU")]),_._v(" "),v("h3",{attrs:{id:"控制器-硬布线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器-硬布线"}},[_._v("#")]),_._v(" 控制器-硬布线")]),_._v(" "),v("h4",{attrs:{id:"控制器的功能和工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器的功能和工作原理"}},[_._v("#")]),_._v(" 控制器的功能和工作原理")]),_._v(" "),v("p",[_._v("地址总线（AB）：内存储器、输入设备和输出设备从地址总线接收地址信息。")]),_._v(" "),v("p",[_._v("控制总线（CB）：内存储器、输入设备和输出设备从控制总线得到控制信号。")]),_._v(" "),v("p",[_._v("数据总线（DB）：内存储器、输入设备和输出设备通过数据总线与其他部件传送数据。")]),_._v(" "),v("p",[_._v("输入设备和输出设备通过接口电路与总线相连。")]),_._v(" "),v("p",[_._v("运算器部件通过数据总线与内存储器、输入设备和输出设备传送数据。")]),_._v(" "),v("p",[_._v("控制器部件送出指令地址到地址总线。")]),_._v(" "),v("p",[_._v("控制器部件从数据总线接收指令信息。")]),_._v(" "),v("p",[_._v("控制器部件向系统中的部件提供它们运行所需要的控制信号。")]),_._v(" "),v("h4",{attrs:{id:"控制器的结构和功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器的结构和功能"}},[_._v("#")]),_._v(" 控制器的结构和功能")]),_._v(" "),v("p",[_._v("控制器是计算机系统的指挥中心，控制器的主要功能有：")]),_._v(" "),v("ol",[v("li",[_._v("从主存中取出一条指令，并指出下一条指令在主存中的位置。")]),_._v(" "),v("li",[_._v("对指令进行译码或测试，产生相应的操作控制信号，以便启动规定的动作。")]),_._v(" "),v("li",[_._v("指挥并控制CPU、主存、输入和输出设备之间的数据流动方向。")])]),_._v(" "),v("p",[_._v("简称：取指令、分析指令、执行指令。")]),_._v(" "),v("h4",{attrs:{id:"控制单元的输入和输出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制单元的输入和输出"}},[_._v("#")]),_._v(" 控制单元的输入和输出")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t指令寄存器IR")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t↓")]),_._v(" "),v("p",[_._v("标志，时钟 → 控制单元CU ← 系统总线")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t↑")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\tCPU内部控制信号")]),_._v(" "),v("h5",{attrs:{id:"输入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输入"}},[_._v("#")]),_._v(" 输入")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("指令寄存器OP(IR) → CU")]),_._v(" "),v("p",[_._v("控制信号的产生与操作码有关")])]),_._v(" "),v("li",[v("p",[_._v("时钟")]),_._v(" "),v("p",[_._v("一个时钟脉冲发出一个操作命令或一组需要同时执行的操作命令。")])]),_._v(" "),v("li",[v("p",[_._v("标志")]),_._v(" "),v("p",[_._v("如条件转移指令，根据相应的标志位决定下一步操作。")])]),_._v(" "),v("li",[v("p",[_._v("外来信号")]),_._v(" "),v("p",[_._v("如：中断请求信号INTR")]),_._v(" "),v("p",[_._v("​\t\t总线请求信号HRQ")])])]),_._v(" "),v("h5",{attrs:{id:"输出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[_._v("#")]),_._v(" 输出")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("CPU内部的控制信号")]),_._v(" "),v("p",[_._v("寄存器之间的数据传输、PC的修改、控制ALU进行的运算")])]),_._v(" "),v("li",[v("p",[_._v("到控制总线的控制信号")]),_._v(" "),v("p",[_._v("到存储器：访存控制信号$\\overline{MREQ}$、读命令$\\overline{RD}$、写命令$\\overline{WR}$")]),_._v(" "),v("p",[_._v("到I/O设备：访问I/O设备的控制信号$\\overline{IO}$")]),_._v(" "),v("p",[_._v("中断响应信号INTA、总线响应信号HLDA")])])]),_._v(" "),v("p",[_._v("CU的设计：")]),_._v(" "),v("ol",[v("li",[_._v("硬布线（组合逻辑电路+触发器）")]),_._v(" "),v("li",[_._v("微程序")])]),_._v(" "),v("h4",{attrs:{id:"硬布线控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#硬布线控制器"}},[_._v("#")]),_._v(" 硬布线控制器")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t指令寄存器IR")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t↓")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t操作码译码器")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t↓")]),_._v(" "),v("p",[_._v("​\t\t机器主频（CLK）→\t节拍发生器 → 控制单元CU ← 标志（来自执行单元的反馈信息）")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t↑")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCPU内部控制信号")]),_._v(" "),v("p",[_._v("设计步骤：")]),_._v(" "),v("ol",[v("li",[_._v("分析每个阶段的微操作序列")]),_._v(" "),v("li",[_._v("选择CPU的控制方式")]),_._v(" "),v("li",[_._v("安排微操作时序")]),_._v(" "),v("li",[_._v("电路设计")])]),_._v(" "),v("h4",{attrs:{id:"cpu的控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu的控制方式"}},[_._v("#")]),_._v(" CPU的控制方式")]),_._v(" "),v("p",[_._v("CPU控制方式：产生不同微操作命令序列所用的时序控制方式。")]),_._v(" "),v("h5",{attrs:{id:"同步控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#同步控制方式"}},[_._v("#")]),_._v(" 同步控制方式")]),_._v(" "),v("p",[_._v("整个系统所有的控制信号均来自一个统一的时钟信号。")]),_._v(" "),v("p",[_._v("通常以最长的微操作序列和最繁琐的微操作作为标准，采取完全统一的、具有相同时间间隔和相同数目的节拍作为机器周期来运行不同的指令。")]),_._v(" "),v("p",[_._v("同步控制方式的优点是控制电路简单，缺点是运行速度慢。")]),_._v(" "),v("h5",{attrs:{id:"异步控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#异步控制方式"}},[_._v("#")]),_._v(" 异步控制方式")]),_._v(" "),v("p",[_._v("异步控制方式不存在基准时标信号。")]),_._v(" "),v("p",[_._v("各部件按自身固有的速度工作，通过应答方式进行联络。")]),_._v(" "),v("p",[_._v("异步控制方式的优点是运行速度快，缺点是控制电路比较复杂。")]),_._v(" "),v("h5",{attrs:{id:"联合控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#联合控制方式"}},[_._v("#")]),_._v(" 联合控制方式")]),_._v(" "),v("p",[_._v("对各种不同的指令的微操作实行大部分采用同步控制、小部分采用异步控制方法。")]),_._v(" "),v("h4",{attrs:{id:"安排操作时序的原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安排操作时序的原则"}},[_._v("#")]),_._v(" 安排操作时序的原则")]),_._v(" "),v("h5",{attrs:{id:"原则一"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原则一"}},[_._v("#")]),_._v(" 原则一")]),_._v(" "),v("p",[_._v("微操作的先后顺序不得随意更改。")]),_._v(" "),v("h5",{attrs:{id:"原则二"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原则二"}},[_._v("#")]),_._v(" 原则二")]),_._v(" "),v("p",[_._v("被控对象不同的微操作尽量安排在一个节拍内完成。")]),_._v(" "),v("h5",{attrs:{id:"原则三"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原则三"}},[_._v("#")]),_._v(" 原则三")]),_._v(" "),v("p",[_._v("占用时间较短的微操作尽量安排在一个节拍内完成，并允许有先后顺序。")]),_._v(" "),v("h4",{attrs:{id:"安排操作时序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安排操作时序"}},[_._v("#")]),_._v(" 安排操作时序")]),_._v(" "),v("h5",{attrs:{id:"取指周期-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#取指周期-2"}},[_._v("#")]),_._v(" 取指周期")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("周期")]),_._v(" "),v("th",[_._v("时序及内容")]),_._v(" "),v("th",[_._v("备注")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("(1) PC → MAR")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("(2) 1 → R")]),_._v(" "),v("td",[_._v("发出读信号")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td",[_._v("(3) M(MAR) → MDR")]),_._v(" "),v("td",[_._v("在(1)之后")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td",[_._v("(6) (PC) + 1 → PC")]),_._v(" "),v("td",[_._v("在(1)之后")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td",[_._v("(4) MDR→ IR")]),_._v(" "),v("td",[_._v("在(3)之后")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td",[_._v("(5) OP(IR) → ID")]),_._v(" "),v("td",[_._v("在(4)之后")])])])]),_._v(" "),v("h5",{attrs:{id:"间址周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#间址周期"}},[_._v("#")]),_._v(" 间址周期")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("周期")]),_._v(" "),v("th",[_._v("时序及内容")]),_._v(" "),v("th",[_._v("备注")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("(1) Ad(IR) → MAR")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("(2) 1 → R")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td",[_._v("(3) M(MAR) → MDR")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td",[_._v("(4) MDR→ Ad(IR)")]),_._v(" "),v("td")])])]),_._v(" "),v("h5",{attrs:{id:"执行周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行周期"}},[_._v("#")]),_._v(" 执行周期")]),_._v(" "),v("p",[_._v("非访存指令")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("CLA（clear），ACC清零")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\t0 → AC")])]),_._v(" "),v("li",[v("p",[_._v("COM（complement），ACC取反")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\t&\\overline{AC}& → AC")])]),_._v(" "),v("li",[v("p",[_._v("SHR（shift right），算术右移")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")]),_._v("\tL(AC) → R(AC)")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\tAC"),v("sub",[_._v("0")]),_._v(" → AC"),v("sub",[_._v("0")])])]),_._v(" "),v("li",[v("p",[_._v("CSL（cycle shift left），循环左移")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\tR(AC) → L(AC)，AC"),v("sub",[_._v("0")]),_._v(" → AC"),v("sub",[_._v("n")])])]),_._v(" "),v("li",[v("p",[_._v("STP（stop），停机")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\t0 → G")])])]),_._v(" "),v("p",[_._v("访存指令")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("ADD（add），加法指令，隐含ACC")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")]),_._v("\tAd(IR) → MAR, 1 → R")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")]),_._v("\tM(MAR) → MDR")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\t(AC) + (MDR) → AC")])]),_._v(" "),v("li",[v("p",[_._v("STA X（store acc），存数指令")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")]),_._v("\tAd(IR) → MAR, 1 → W")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")]),_._v("\tAC → MDR")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\tMDR → M(MAR)")])]),_._v(" "),v("li",[v("p",[_._v("LDA X（load acc），取数指令")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")]),_._v("\tAd(IR) → MAR, 1 → R")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")]),_._v("\tM(MAR) → MDR")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\tMDR → AC")])])]),_._v(" "),v("p",[_._v("转移指令")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("JMP X（jump），无条件转移")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\tAd(IR) → PC")])]),_._v(" "),v("li",[v("p",[_._v("BAN X（branch acc negative），条件转移")]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("p",[_._v("T"),v("sub",[_._v("2")]),_._v("\tA"),v("sub",[_._v("0")]),_._v("•Ad(IR) + $\\overline{A_0}$•PC → PC")])])]),_._v(" "),v("h5",{attrs:{id:"中断周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断周期"}},[_._v("#")]),_._v(" 中断周期")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("周期")]),_._v(" "),v("th",[_._v("时序及内容")]),_._v(" "),v("th",[_._v("备注")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("(1) a → MAR")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("(2) 1 → W")]),_._v(" "),v("td",[_._v("发出写信号")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td",[_._v("(3) 0 → EINT")]),_._v(" "),v("td",[_._v("硬件关中断")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td",[_._v("(4) (PC) → MDR")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td",[_._v("(5) MDR→ M(MAR)")]),_._v(" "),v("td",[_._v("在(4)之后")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td",[_._v("(6) 向量地址 → PC")]),_._v(" "),v("td",[_._v("在(4)之后")])])])]),_._v(" "),v("h4",{attrs:{id:"组合逻辑设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组合逻辑设计"}},[_._v("#")]),_._v(" 组合逻辑设计")]),_._v(" "),v("p",[_._v("设计步骤：")]),_._v(" "),v("ul",[v("li",[_._v("列出操作时间表")]),_._v(" "),v("li",[_._v("写出微操作命令的最简表达式")]),_._v(" "),v("li",[_._v("画出逻辑图")])]),_._v(" "),v("h5",{attrs:{id:"列出操作时间表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#列出操作时间表"}},[_._v("#")]),_._v(" 列出操作时间表")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("工作周期")]),_._v(" "),v("th",[_._v("节拍")]),_._v(" "),v("th",[_._v("状态条件")]),_._v(" "),v("th",[_._v("微操作")]),_._v(" "),v("th",[_._v("CLA")]),_._v(" "),v("th",[_._v("COM")]),_._v(" "),v("th",[_._v("SHR")]),_._v(" "),v("th",[_._v("CSL")]),_._v(" "),v("th",[_._v("STP")]),_._v(" "),v("th",[_._v("ADD")]),_._v(" "),v("th",[_._v("STA")]),_._v(" "),v("th",[_._v("LDA")]),_._v(" "),v("th",[_._v("JMP")]),_._v(" "),v("th",[_._v("BAN")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("FE取指")]),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("PC → MAR")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1 → R")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("M(MAR) → MDR")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("(PC)+1 → PC")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("MDR → IR")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("OP(IR) → ID")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("I(间址特征)")]),_._v(" "),v("td",[_._v("1 → IND")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("$\\overline{I}$")]),_._v(" "),v("td",[_._v("1 → EX")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td",[_._v("IND间址")]),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("Ad(IR) → MAR")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1 → R")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("M(MAR) → MDR")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("MDR → Ad(IR)")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("$\\overline{IND}$（间址周期标志）")]),_._v(" "),v("td",[_._v("1 → EX")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td",[_._v("EX执行")]),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("Ad(IR) → MAR")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1 → R")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1 → W")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("M(MAR) → MDR")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("AC → MDR")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("(AC)+(MDR) → AC")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("MDR → M(MAR)")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("MDR → AC")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("0 → AC")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("$\\overline{AC}$ → AC")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("Ad(IR) → PC")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("A"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("Ad(IR) → PC")]),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td"),_._v(" "),v("td",[_._v("1")])])])]),_._v(" "),v("h5",{attrs:{id:"写出微操作命令的最简表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#写出微操作命令的最简表达式"}},[_._v("#")]),_._v(" 写出微操作命令的最简表达式")]),_._v(" "),v("p",[_._v("M(MAR) → MDR 微操作命令的逻辑表达式：")]),_._v(" "),v("p",[_._v("FE•T"),v("sub",[_._v("1")]),_._v(" + IND•T"),v("sub",[_._v("1")]),_._v("(ADD+STA+LDA+JMP+BAN) + EX•T"),v("sub",[_._v("1")]),_._v("(ADD+LDA)")]),_._v(" "),v("p",[_._v("= T"),v("sub",[_._v("1")]),_._v("{FE+IND(ADD+STA+LDA+JMP+BAN)+EX(ADD+LDA)}")]),_._v(" "),v("h5",{attrs:{id:"画出逻辑图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#画出逻辑图"}},[_._v("#")]),_._v(" 画出逻辑图")]),_._v(" "),v("h4",{attrs:{id:"硬布线控制器小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#硬布线控制器小结"}},[_._v("#")]),_._v(" 硬布线控制器小结")]),_._v(" "),v("p",[_._v("设计步骤：")]),_._v(" "),v("ol",[v("li",[_._v("分析每个阶段的微操作序列")]),_._v(" "),v("li",[_._v("选择CPU的控制方式")]),_._v(" "),v("li",[_._v("安排微操作时序")]),_._v(" "),v("li",[_._v("电路设计\n"),v("ul",[v("li",[_._v("列出操作时间表")]),_._v(" "),v("li",[_._v("写出微操作命令的最简表达式")]),_._v(" "),v("li",[_._v("画出逻辑图")])])])]),_._v(" "),v("h3",{attrs:{id:"控制器-微程序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器-微程序"}},[_._v("#")]),_._v(" 控制器-微程序")]),_._v(" "),v("h4",{attrs:{id:"控制器的功能和工作原理-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器的功能和工作原理-2"}},[_._v("#")]),_._v(" 控制器的功能和工作原理")]),_._v(" "),v("p",[_._v("硬布线工作原理：微操作控制信号由组合逻辑电路根据当前的指令码、状态和时序，即使产生。")]),_._v(" "),v("p",[_._v("微程序工作原理：事先把微操作控制信号存储在一个专门的存储器（控制存储器）中，将每一条机器指令编写成一个微程序，这些微程序可以存到一个控制存储器中，用寻址用户程序机器指令的办法来寻址每个微程序中的微指令。")]),_._v(" "),v("h4",{attrs:{id:"微程序的基本思想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微程序的基本思想"}},[_._v("#")]),_._v(" 微程序的基本思想")]),_._v(" "),v("p",[_._v("完成一条机器指令")]),_._v(" "),v("p",[_._v("= 微操作命令1 + 微操作命令2+ ... + 微操作命令n")]),_._v(" "),v("p",[_._v("= 微指令1 + ... 微指令n")]),_._v(" "),v("p",[_._v("= 微指令")]),_._v(" "),v("p",[_._v("微操作命令，即微命令，是微操作的控制信号。微操作是微命令的执行过程。")]),_._v(" "),v("p",[_._v("相容性微命令：可以同时产生、共同完成某一些微操作的微命令。")]),_._v(" "),v("p",[_._v("互斥性微命令：在机器中不允许同时出现的微命令。")]),_._v(" "),v("p",[_._v("一条机器指令对应一个微程序。")]),_._v(" "),v("p",[_._v("微指令的基本格式 = 操作控制（微操作码） + 顺序控制（微地址码）")]),_._v(" "),v("p",[_._v("每条指令取指周期的操作是相同的，所以将取指操作的微命令统一编成一个微程序，而每条机器指令所对应的具体操作再单独编写一个对应的微程序。")]),_._v(" "),v("h4",{attrs:{id:"微程序控制器的基本结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微程序控制器的基本结构"}},[_._v("#")]),_._v(" 微程序控制器的基本结构")]),_._v(" "),v("h5",{attrs:{id:"控制存储器cm"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制存储器cm"}},[_._v("#")]),_._v(" 控制存储器CM")]),_._v(" "),v("p",[_._v("用于存放各指令对应的微程序，控制存储器可用只读存储器ROM构成。")]),_._v(" "),v("h5",{attrs:{id:"地址译码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#地址译码"}},[_._v("#")]),_._v(" 地址译码")]),_._v(" "),v("p",[_._v("将地址码转化为存储单元控制信号。")]),_._v(" "),v("h5",{attrs:{id:"cmar"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cmar"}},[_._v("#")]),_._v(" CMAR")]),_._v(" "),v("p",[_._v("微地址寄存器，接收微地址形成部件送来的微地址，为在CM中读取微指令作准备。")]),_._v(" "),v("h5",{attrs:{id:"cmdr"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cmdr"}},[_._v("#")]),_._v(" CMDR")]),_._v(" "),v("p",[_._v("用于存放从CM中取出的微指令，它的位数同微指令字长相等。")]),_._v(" "),v("h5",{attrs:{id:"微指令形成部件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微指令形成部件"}},[_._v("#")]),_._v(" 微指令形成部件")]),_._v(" "),v("p",[_._v("产生初始微地址和后继微地址，以保证微指令的连续执行。")]),_._v(" "),v("h5",{attrs:{id:"顺序逻辑"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#顺序逻辑"}},[_._v("#")]),_._v(" 顺序逻辑")]),_._v(" "),v("p",[_._v("标志和CLK")]),_._v(" "),v("h4",{attrs:{id:"控制存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制存储器"}},[_._v("#")]),_._v(" 控制存储器")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("M")]),_._v(" "),v("th",[_._v("M+1")]),_._v(" "),v("th",[_._v("取指周期微程序")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("M+1")]),_._v(" "),v("td",[_._v("M+2")]),_._v(" "),v("td",[_._v("取指周期微程序")])]),_._v(" "),v("tr",[v("td",[_._v("M+2")]),_._v(" "),v("td",[_._v("M+3")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("...")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("间址周期微程序")])]),_._v(" "),v("tr",[v("td",[_._v("转执行周期微指令")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("...")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("中断周期微程序")])]),_._v(" "),v("tr",[v("td",[_._v("转取指周期微指令")]),_._v(" "),v("td"),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("P")]),_._v(" "),v("td",[_._v("P+1")]),_._v(" "),v("td",[_._v("LDA操作的微程序")])]),_._v(" "),v("tr",[v("td",[_._v("P+1")]),_._v(" "),v("td",[_._v("P+2")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("P+2")]),_._v(" "),v("td",[_._v("M")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("K")]),_._v(" "),v("td",[_._v("K+1")]),_._v(" "),v("td",[_._v("STA操作的微程序")])]),_._v(" "),v("tr",[v("td",[_._v("K+1")]),_._v(" "),v("td",[_._v("K+2")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("K+2")]),_._v(" "),v("td",[_._v("M")]),_._v(" "),v("td")])])]),_._v(" "),v("p",[_._v("取指周期微程序，默认是公共的，故如果某指令系统中有n条机器指令，则CM中微程序的个数至少是n+1个。")]),_._v(" "),v("p",[_._v("间址周期和中断周期微程序，不一定是公共的，此处做成公共的，故如果这台计算机指令系统中有n条机器指令，则CM中微程序的个数是n+3个。")]),_._v(" "),v("h4",{attrs:{id:"微指令的格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微指令的格式"}},[_._v("#")]),_._v(" 微指令的格式")]),_._v(" "),v("h5",{attrs:{id:"水平型微指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#水平型微指令"}},[_._v("#")]),_._v(" 水平型微指令")]),_._v(" "),v("p",[_._v("一次能定义执行多个并行操作。")]),_._v(" "),v("p",[_._v("基本格式：操作控制 + 顺序控制")]),_._v(" "),v("p",[_._v("优点：微程序短，执行速度快。")]),_._v(" "),v("p",[_._v("缺点：微指令长，编写程序较麻烦。")]),_._v(" "),v("h5",{attrs:{id:"垂直型微指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#垂直型微指令"}},[_._v("#")]),_._v(" 垂直型微指令")]),_._v(" "),v("p",[_._v("类似机器指令操作码的方式，由微操作码规定微指令的功能。")]),_._v(" "),v("p",[_._v("基本格式：微操作码(uOP) + 目的地址(Rd) + 源地址(Rs)")]),_._v(" "),v("p",[_._v("优点：微指令短、简单、规整，便于编写微程序。")]),_._v(" "),v("p",[_._v("缺点：微程序长，执行速度慢，工作效率低。")]),_._v(" "),v("h5",{attrs:{id:"混合型微指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#混合型微指令"}},[_._v("#")]),_._v(" 混合型微指令")]),_._v(" "),v("p",[_._v("在垂直型的基础上增加一些不太复杂的并行操作。")]),_._v(" "),v("p",[_._v("微指令较短，仍便于编写。")]),_._v(" "),v("p",[_._v("微程序也不长，执行速度加快。")]),_._v(" "),v("h4",{attrs:{id:"微指令的编码方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微指令的编码方式"}},[_._v("#")]),_._v(" 微指令的编码方式")]),_._v(" "),v("p",[_._v("微指令的编码方式有称为微指令的控制方式，它是指如何对微指令的控制字段进行编码，以形成控制信号。编码的目标是在保证速度的情况下，尽量缩短微指令字长。")]),_._v(" "),v("h5",{attrs:{id:"水平型微指令-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#水平型微指令-2"}},[_._v("#")]),_._v(" 水平型微指令")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("直接编码（直接控制）方式")]),_._v(" "),v("p",[_._v("在微指令的操作控制字段中，每一位代表一个微操作命令，某位为“1”表示该控制信号有效。")]),_._v(" "),v("p",[_._v("优点：简单、直观、执行速度快，操作并行性好。")]),_._v(" "),v("p",[_._v("缺点：微指令字长过长，n个微命令就要求微指令的操作字段有n位，造成控存容量极大。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("1，(PC) → MAR")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("0")]),_._v(" "),v("th",[_._v("1，1 → R")]),_._v(" "),v("th",[_._v("下地址")])])]),_._v(" "),v("tbody")])]),_._v(" "),v("li",[v("p",[_._v("字段直接编码方式")]),_._v(" "),v("p",[_._v("将微指令的控制字段分成若干“段”，每段经译码后发出控制信号。")]),_._v(" "),v("p",[_._v("微命令字段分段的原则：")]),_._v(" "),v("ul",[v("li",[_._v("互斥性微命令分在同一段内，相容性微命令分在不同段内。")]),_._v(" "),v("li",[_._v("每个小段中包含的信息位不能太多，否则将增加译码线路的复杂性和译码时间。")]),_._v(" "),v("li",[_._v("一般每个小段还要留出一个状态，表示本字段不发出任何微命令。因此，当某字段的长度为3位时，最多只能表示7个互斥的微命令，通常用000表示不操作。")])]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("001，(PC) → MAR")]),_._v(" "),v("th",[_._v("00...0")]),_._v(" "),v("th",[_._v("111，1 → R")]),_._v(" "),v("th",[_._v("下地址")])])]),_._v(" "),v("tbody")])])]),_._v(" "),v("p",[_._v("​\t\t优点：可以缩短微指令字长")]),_._v(" "),v("p",[_._v("​\t\t缺点：要通过译码电路后再发出微命令，因此比直接编码方式慢。")]),_._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[v("p",[_._v("字段间接编码方式")]),_._v(" "),v("p",[_._v("一个字段的某些微命令需由另一个字段中的某些微命令来解释，由于不是靠字段直接译码发出的微命令，故称为字段间接编码，又称隐式编码。")]),_._v(" "),v("p",[_._v("优点：可进一步缩短微指令字长。")]),_._v(" "),v("p",[_._v("缺点：削弱了微指令的并行控制能力，故通常作为字段直接编码方式的一种辅助手段。")])])]),_._v(" "),v("h4",{attrs:{id:"微指令的地址形成方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微指令的地址形成方式"}},[_._v("#")]),_._v(" 微指令的地址形成方式")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("微指令的下地址字段指出")]),_._v(" "),v("p",[_._v("微指令格式中设置一个下地址字段，由微指令的下地址字段直接指出后继指令的地址，这种方式又称为断定方式")])]),_._v(" "),v("li",[v("p",[_._v("根据机器指令的操作码形成")]),_._v(" "),v("p",[_._v("当机器指令取至指令寄存器后，微指令的地址由操作码经微地址形成部件形成")])]),_._v(" "),v("li",[v("p",[_._v("增量计数器法（CMAR）+ 1 → CMAR")])]),_._v(" "),v("li",[v("p",[_._v("分支转移")]),_._v(" "),v("p",[_._v("转移方式：指明判别条件。")]),_._v(" "),v("p",[_._v("转移地址：指明转移成功后的去向。")]),_._v(" "),v("p",[_._v("操作控制字段 + 转移方式 + 转移地址")])]),_._v(" "),v("li",[v("p",[_._v("通过测试网络")])]),_._v(" "),v("li",[v("p",[_._v("由硬件产生微程序入口地址")]),_._v(" "),v("p",[_._v("第一条微指令地址由专门硬件产生")]),_._v(" "),v("p",[_._v("中断周期由硬件产生中断周期微程序首地址")])])]),_._v(" "),v("h4",{attrs:{id:"微程序控制的基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微程序控制的基本概念"}},[_._v("#")]),_._v(" 微程序控制的基本概念")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("微命令与微操作")]),_._v(" "),v("p",[_._v("微命令是微操作的控制信号")]),_._v(" "),v("p",[_._v("微操作是微命令的执行过程")])]),_._v(" "),v("li",[v("p",[_._v("微指令与微周期")]),_._v(" "),v("p",[_._v("微指令是若干微命令的集合")]),_._v(" "),v("p",[_._v("微周期通常指从控制存储器中读取一条微指令并执行相应的微操作所需的时间。")])]),_._v(" "),v("li",[v("p",[_._v("主存储器与控制存储器")]),_._v(" "),v("p",[_._v("主存储器用于存放程序和数据，在CPU外部，用RAM实现。")]),_._v(" "),v("p",[_._v("控制存储器(CM)，用于存放微程序，在CPU内部，用ROM实现。")])]),_._v(" "),v("li",[v("p",[_._v("程序与微程序")]),_._v(" "),v("p",[_._v("程序是指令的有序集合，用于完成特定的功能。")]),_._v(" "),v("p",[_._v("微程序是微指令的有序集合，一条指令的功能由一段微程序来实现。")])])]),_._v(" "),v("h4",{attrs:{id:"微程序控制单元的设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微程序控制单元的设计"}},[_._v("#")]),_._v(" 微程序控制单元的设计")]),_._v(" "),v("p",[_._v("设计步骤：")]),_._v(" "),v("ol",[v("li",[_._v("分析每个阶段的微操作序列")]),_._v(" "),v("li",[_._v("写出对应机器指令的微操作命令及节拍安排")]),_._v(" "),v("li",[_._v("确定微指令格式")]),_._v(" "),v("li",[_._v("编写微指令码点")])]),_._v(" "),v("h5",{attrs:{id:"取指周期-微程序控制器的节拍安排"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#取指周期-微程序控制器的节拍安排"}},[_._v("#")]),_._v(" 取指周期-微程序控制器的节拍安排")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("周期")]),_._v(" "),v("th",[_._v("时序及内容")]),_._v(" "),v("th",[_._v("备注")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("PC → MAR")]),_._v(" "),v("td",[_._v("(1)")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("0")])]),_._v(" "),v("td",[_._v("1 → R")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("1")])]),_._v(" "),v("td",[_._v("Ad(CMDR) → CMAR")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td",[_._v("M(MAR) → MDR")]),_._v(" "),v("td",[_._v("(2)")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("2")])]),_._v(" "),v("td",[_._v("(PC) + 1 → PC")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("3")])]),_._v(" "),v("td",[_._v("Ad(CMDR) → CMAR")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("4")])]),_._v(" "),v("td",[_._v("MDR→ IR")]),_._v(" "),v("td",[_._v("(3)")])]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("4")])]),_._v(" "),v("td",[_._v("OP(IR) → 微地址形成部件")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("T"),v("sub",[_._v("5")])]),_._v(" "),v("td",[_._v("OP(IR) &CMAR")]),_._v(" "),v("td")])])]),_._v(" "),v("p",[_._v("总共由3条微指令组成")]),_._v(" "),v("h4",{attrs:{id:"微程序设计的分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微程序设计的分类"}},[_._v("#")]),_._v(" 微程序设计的分类")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("静态微程序设计和动态微程序设计")]),_._v(" "),v("p",[_._v("静态：微程序无需改变，采用ROM")]),_._v(" "),v("p",[_._v("动态：通过改变微指令和微程序改变机器指令有利于仿真，采用EPROM")])]),_._v(" "),v("li",[v("p",[_._v("毫微程序设计")]),_._v(" "),v("p",[_._v("毫微程序设计的基本概念")]),_._v(" "),v("p",[_._v("微程序设计用微程序解释机器指令")]),_._v(" "),v("p",[_._v("毫微程序设计用毫微程序解释程序")]),_._v(" "),v("p",[_._v("毫微指令与微指令的关系好比微指令与机器指令的关系")])])]),_._v(" "),v("h4",{attrs:{id:"硬布线与微程序的比较"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#硬布线与微程序的比较"}},[_._v("#")]),_._v(" 硬布线与微程序的比较")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("类别")]),_._v(" "),v("th",[_._v("微程序控制器")]),_._v(" "),v("th",[_._v("硬布线控制器")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("工作原理")]),_._v(" "),v("td",[_._v("微操作控制信号以微程序的形式存放在控制存储器中，执行指令时读出即可。")]),_._v(" "),v("td",[_._v("微操作控制信号由组合逻辑电路根据当前的指令码、状态和时序，即时产生")])]),_._v(" "),v("tr",[v("td",[_._v("执行速度")]),_._v(" "),v("td",[_._v("慢")]),_._v(" "),v("td",[_._v("快")])]),_._v(" "),v("tr",[v("td",[_._v("规整性")]),_._v(" "),v("td",[_._v("较规整")]),_._v(" "),v("td",[_._v("繁琐、不规整")])]),_._v(" "),v("tr",[v("td",[_._v("应用场合")]),_._v(" "),v("td",[_._v("CISC、CPU")]),_._v(" "),v("td",[_._v("RISC、CPU")])]),_._v(" "),v("tr",[v("td",[_._v("易扩充性")]),_._v(" "),v("td",[_._v("易扩充修改")]),_._v(" "),v("td",[_._v("困难")])])])]),_._v(" "),v("h3",{attrs:{id:"指令流水线概念及性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令流水线概念及性能指标"}},[_._v("#")]),_._v(" 指令流水线概念及性能指标")]),_._v(" "),v("h4",{attrs:{id:"指令流水的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令流水的定义"}},[_._v("#")]),_._v(" 指令流水的定义")]),_._v(" "),v("p",[_._v("设取指、分析、执行3个阶段的时间都相等，用t表示，按以下几种执行方式分析n条指令的执行时间。")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("顺序执行方式")]),_._v(" "),v("p",[_._v("取指k → 分析k → 执行k → 取指k+1 → 分析k+1 → 执行k+1 ... 取指k+n → 分析k+n → 执行k+n")]),_._v(" "),v("p",[_._v("总耗时T = n x 3t = 3nt")]),_._v(" "),v("p",[_._v("传统冯•诺伊曼机采用顺序执行方式，又称串行执行方式。")]),_._v(" "),v("p",[_._v("优点：控制简单，硬件代价小。")]),_._v(" "),v("p",[_._v("缺点：执行指令的速度缓慢，在任何时刻，处理机中只有一条指令在执行，各功能部件的利用率很低。")])]),_._v(" "),v("li",[v("p",[_._v("一次重叠执行方式")]),_._v(" "),v("p",[_._v("取指k → 分析k → 执行k")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t取指k+1 → 分析k+1 → 执行k+1")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t...")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t取指k+n → 分析k+n → 执行k+n")]),_._v(" "),v("p",[_._v("总耗时T = 3t + (n-1) x 2t = (1 + 2n)t")]),_._v(" "),v("p",[_._v("优点：程序执行时间缩短了1/3，各功能部件的利用率明显提高。")]),_._v(" "),v("p",[_._v("缺点：需要付出硬件上较大的开销代价，控制过程也比顺序执行复杂了。")])]),_._v(" "),v("li",[v("p",[_._v("二次重叠执行方式")]),_._v(" "),v("p",[_._v("取指k → 分析k → 执行k")]),_._v(" "),v("p",[_._v("​\t\t\t\t取指k+1 → 分析k+1 → 执行k+1")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t...")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t\t\t取指k+n → 分析k+n → 执行k+n")]),_._v(" "),v("p",[_._v("总耗时T = 3t + (n-1) x t = (2 + n)t")]),_._v(" "),v("p",[_._v("优点：与顺序执行方式相比，指令的执行时间缩短了近2/3，在理想情况下，处理机中同时有3条指令在执行。")])])]),_._v(" "),v("p",[_._v("注：也可以把每条指令的执行过程分成4个或5个阶段，分成5个阶段是比较常见的做法。")]),_._v(" "),v("h4",{attrs:{id:"指令流水的表示方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令流水的表示方法"}},[_._v("#")]),_._v(" 指令流水的表示方法")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("指令执行过程图")]),_._v(" "),v("p",[_._v("主要用于分析指令的执行过程以及影响流水线等因素")])]),_._v(" "),v("li",[v("p",[_._v("时空图")]),_._v(" "),v("p",[_._v("不同的阶段所对对应的不同的硬件资源")]),_._v(" "),v("p",[_._v("主要用于分析流水线的性能")])])]),_._v(" "),v("h4",{attrs:{id:"流水线的性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流水线的性能指标"}},[_._v("#")]),_._v(" 流水线的性能指标")]),_._v(" "),v("h5",{attrs:{id:"吞吐率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#吞吐率"}},[_._v("#")]),_._v(" 吞吐率")]),_._v(" "),v("p",[_._v("吞吐率是指在单位时间内流水线所完成的任务数量，或是输出结果的数量。")]),_._v(" "),v("p",[_._v("设任务数量为n；处理完成n个任务所用的时间为T"),v("sub",[_._v("k")]),_._v("，则计算流水线吞吐率(TP)的最基本的公式为：\n$$\nTP = \\frac{n}{T_k} \\[2ex]\n一条指令的执行分为k个阶段，每个阶段耗时\\Delta{t}，一般取\\Delta{t} = 一个时钟周期。 \\[2ex]\nT_k = (k+n-1)\\Delta{t} \\[2ex]\n流水线的实际吞吐量为：\\[2ex]\nTP = \\frac{n}{(k+n-1)\\Delta{t}} \\[2ex]\n当连续输入的任务n \\rightarrow \\infty，得最大吞吐率为TP_max = 1/\\Delta{t}\n$$")]),_._v(" "),v("h5",{attrs:{id:"加速比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加速比"}},[_._v("#")]),_._v(" 加速比")]),_._v(" "),v("p",[_._v("完成同样的一批任务，不使用流水线所用的时间与使用流水线所用的时间之比。")]),_._v(" "),v("p",[_._v("设T"),v("sub",[_._v("0")]),_._v("表示不使用流水线时的执行时间，即顺序执行所用的时间，T"),v("sub",[_._v("k")]),_._v("表示使用流水线时的执行时间，则计算流水线加速比（S）的基本公式为：\n$$\nS = \\frac{T_0}{T_k} \\[2ex]\n一条指令的执行分为k个阶段，每个阶段耗时\\Delta{t}，一般取\\Delta{t} = 一个时钟周期。 \\[2ex]\n单独完成一个任务耗时为k\\Delta{t}，则顺序完成n个任务耗时T_0 =nk\\Delta{t}，\nT_k = (k+n-1)\\Delta{t} \\[2ex]\nS = \\frac{kn\\Delta{t}}{(k+n-1)\\Delta{t}} = \\frac{kn}{k+n-1} \\[2ex]\n当连续输入的任务n \\rightarrow \\infty，得最大加速度比S_max = k\n$$")]),_._v(" "),v("h5",{attrs:{id:"效率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#效率"}},[_._v("#")]),_._v(" 效率")]),_._v(" "),v("p",[_._v("流水线的设备利用率称为流水线的效率，在时空图上，流水线的效率定义完成n个任务占用的时空区有效面积与n个任务所用的时间与k个流水段所围成的时空区总面积之比。则流水线效率（E）的一般公式为：\n$$\nE = \\frac{n个任务占用k时空区有效面积}{n个任务所用的时间与k个流水段所围成的时空区总面积} = \\frac{T_0}{kT_k} \\[2ex]\n一条指令的执行分为k个阶段，每个阶段耗时\\Delta{t}，一般取\\Delta{t} = 一个时钟周期。 \\[2ex]\n当连续输入的任务n \\rightarrow \\infty，得最高效率E_max = 1\n$$")]),_._v(" "),v("h4",{attrs:{id:"影响流水线的因素及分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#影响流水线的因素及分类"}},[_._v("#")]),_._v(" 影响流水线的因素及分类")]),_._v(" "),v("h5",{attrs:{id:"机器周期的设置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#机器周期的设置"}},[_._v("#")]),_._v(" 机器周期的设置")]),_._v(" "),v("p",[_._v("为了方便流水线的设计，将每个阶段的耗时取成一样，以最长耗时为准。")]),_._v(" "),v("p",[_._v("流水线每一个功能段部件后面都要有一个缓冲寄存器，或称为锁存器，其作用是保存本流水段的执行结果，提供给下一流水段使用。")]),_._v(" "),v("h5",{attrs:{id:"影响流水线的因素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#影响流水线的因素"}},[_._v("#")]),_._v(" 影响流水线的因素")]),_._v(" "),v("ol",[v("li",[_._v("结构相关（资源冲突）")]),_._v(" "),v("li",[_._v("数据相关（数据冲突）")]),_._v(" "),v("li",[_._v("控制相关（控制冲突）")])]),_._v(" "),v("h5",{attrs:{id:"结构相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#结构相关"}},[_._v("#")]),_._v(" 结构相关")]),_._v(" "),v("p",[_._v("由于多条指令在同一时刻争用统一资源而形成的冲突称为结构相关。")]),_._v(" "),v("p",[_._v("解决办法：")]),_._v(" "),v("ul",[v("li",[_._v("后一相关指令暂停一周期")]),_._v(" "),v("li",[_._v("资源重复配置：数据存储器 + 指令存储器")])]),_._v(" "),v("h5",{attrs:{id:"数据相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据相关"}},[_._v("#")]),_._v(" 数据相关")]),_._v(" "),v("p",[_._v("数据相关指令在一个程序中，存在必须等前一条指令完才能执行后一条指令的情况，则这两条指令即为数据相关。")]),_._v(" "),v("p",[_._v("解决办法：")]),_._v(" "),v("ol",[v("li",[_._v("把遇到数据相关的指令及其后续指令都暂停一至几个时钟周期，直到数据相关问题消失后再继续执行。可分为硬件阻塞（stall）和软件插入（NOP）两种方法。")]),_._v(" "),v("li",[_._v("数据旁路技术")]),_._v(" "),v("li",[_._v("编译优化：通过编译器调整指令顺序来解决数据相关。")])]),_._v(" "),v("p",[_._v("数据的基本操作：读（R）、写（W）")]),_._v(" "),v("p",[_._v("冲突的基本类型：")]),_._v(" "),v("ul",[v("li",[_._v("RAW 写后读")]),_._v(" "),v("li",[_._v("WAR 读后写")]),_._v(" "),v("li",[_._v("WAW 写后写")])]),_._v(" "),v("h5",{attrs:{id:"控制相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制相关"}},[_._v("#")]),_._v(" 控制相关")]),_._v(" "),v("p",[_._v("当流水线遇到转移指令和其他改变PC值当指令而造成断流时，会引起控制相关。")]),_._v(" "),v("p",[_._v("解决办法：")]),_._v(" "),v("ol",[v("li",[_._v("尽早判别转移是否发生，尽早生成转移目标地址。")]),_._v(" "),v("li",[_._v("预取转移成功和不成功两个控制流方向上的目标指令。")]),_._v(" "),v("li",[_._v("加快和提前形成条件码。")]),_._v(" "),v("li",[_._v("提高转移方向的猜准率。")])]),_._v(" "),v("h4",{attrs:{id:"流水线的分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流水线的分类"}},[_._v("#")]),_._v(" 流水线的分类")]),_._v(" "),v("h5",{attrs:{id:"部件功能级、处理机级和处理机间级流水线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部件功能级、处理机级和处理机间级流水线"}},[_._v("#")]),_._v(" 部件功能级、处理机级和处理机间级流水线")]),_._v(" "),v("p",[_._v("根据流水线使用的级别的不同，流水线可分为部件功能级流水线、处理机级流水线和处理机间流水线。")]),_._v(" "),v("p",[_._v("部件功能级：")]),_._v(" "),v("p",[_._v("​\t就是将复杂的算术逻辑运算组成流水线工作方式。例如，可将浮点加法操作分成求阶差、对阶、尾数相加以及结果规格化等4个子过程。")]),_._v(" "),v("p",[_._v("处理机级：")]),_._v(" "),v("p",[_._v("​\t是一种宏流水，其中每一个处理机完成某一专门任务，各个处理机所得到的结果需存放在与下一个处理机所共享的存储器中。")]),_._v(" "),v("h5",{attrs:{id:"单功能和多功能流水线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#单功能和多功能流水线"}},[_._v("#")]),_._v(" 单功能和多功能流水线")]),_._v(" "),v("p",[_._v("按流水线可以完成的功能，流水线可分为单功能流水线和多功能流水线。")]),_._v(" "),v("p",[_._v("单功能流水线，是指只能实现一种固定的专门功能的流水线。")]),_._v(" "),v("p",[_._v("多功能流水线，是指通过各段不同的连接方式以同时或不同时实现多种功能的流水线。")]),_._v(" "),v("h5",{attrs:{id:"动态流水线和静态流水线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态流水线和静态流水线"}},[_._v("#")]),_._v(" 动态流水线和静态流水线")]),_._v(" "),v("p",[_._v("按同一时间内各段之间的连接方式，流水线可分为静态流水线和动态流水线。")]),_._v(" "),v("p",[_._v("静态流水线指在同一时间内，流水线的各段只能按同一种功能的连接方式工作。")]),_._v(" "),v("p",[_._v("动态流水线指在同一时间内，当某些段正在实现某种运算时，另一段却正在进行另一种运算。这样对提高流水线的效率很有好处，但会使流水线控制变得复杂。")]),_._v(" "),v("h5",{attrs:{id:"线性流水线和非线性流水线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线性流水线和非线性流水线"}},[_._v("#")]),_._v(" 线性流水线和非线性流水线")]),_._v(" "),v("p",[_._v("按流水线的各个功能段之间是否有反馈信号，流水线可分为线性流水线与非线性流水线。")]),_._v(" "),v("p",[_._v("线性流水线中，从输入到输出，每个功能段只允许经过一次，不存在反馈回路。")]),_._v(" "),v("p",[_._v("非线性流水线存在反馈回路，从输入到输出过程中，某些功能段将数次通过流水线，这种流水线适合进行线性递归的运算。")]),_._v(" "),v("h4",{attrs:{id:"流水线的多发技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流水线的多发技术"}},[_._v("#")]),_._v(" 流水线的多发技术")]),_._v(" "),v("h5",{attrs:{id:"超标量技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#超标量技术"}},[_._v("#")]),_._v(" 超标量技术")]),_._v(" "),v("p",[_._v("每个周期内可并发多条独立指令")]),_._v(" "),v("p",[_._v("要配置多个功能部件")]),_._v(" "),v("p",[_._v("不能调整指令的执行顺序")]),_._v(" "),v("p",[_._v("通过编译优化技术，把可并行执行的指令搭配起来。")]),_._v(" "),v("h5",{attrs:{id:"超流水技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#超流水技术"}},[_._v("#")]),_._v(" 超流水技术")]),_._v(" "),v("p",[_._v("在一个时钟周期内再分段")]),_._v(" "),v("p",[_._v("在一个时钟周期内一个功能部件使用多次")]),_._v(" "),v("p",[_._v("不能调整指令的执行顺序")]),_._v(" "),v("p",[_._v("靠编译程序解决优化问题。")]),_._v(" "),v("p",[_._v("流水线的速度是普通流水线的n倍。")]),_._v(" "),v("h5",{attrs:{id:"超长指令字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#超长指令字"}},[_._v("#")]),_._v(" 超长指令字")]),_._v(" "),v("p",[_._v("由编译程序挖掘出指令间潜在的并行性，将多条能并行操作的指令组合成一条，具有多个操作码字段的超长指令字（可达几百位），采用多个处理部件。")]),_._v(" "),v("h2",{attrs:{id:"第六章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第六章"}},[_._v("#")]),_._v(" 第六章")]),_._v(" "),v("p",[_._v("总线")]),_._v(" "),v("h3",{attrs:{id:"总线的概念与分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的概念与分类"}},[_._v("#")]),_._v(" 总线的概念与分类")]),_._v(" "),v("h4",{attrs:{id:"总线的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的特点"}},[_._v("#")]),_._v(" 总线的特点")]),_._v(" "),v("p",[_._v("总线是一组能为多个部件分时共享的公共信息传递线路。")]),_._v(" "),v("ul",[v("li",[_._v("共享是指总线上可以挂接多个部件，各个部件之间互相交换的信息都可以通过这组线路分时共享。")]),_._v(" "),v("li",[_._v("分时是指同一时刻只允许有一个部件向总线发送信息，如果系统中有多个部件，则它们只能分时的向总线发送信息。")])]),_._v(" "),v("p",[_._v("为什么要用总线？")]),_._v(" "),v("p",[_._v("早起计算机外接设备时大多采用分散连接方式，不易实现随时增减外部设备。为了更好地解决I/O设备和主机之间连接的灵活性问题，计算机的结构从分散连接发展为总线连接。")]),_._v(" "),v("h4",{attrs:{id:"总线的特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的特性"}},[_._v("#")]),_._v(" 总线的特性")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("机械特性")]),_._v(" "),v("p",[_._v("尺寸、形状、管脚数、排列顺序")])]),_._v(" "),v("li",[v("p",[_._v("电气特性")]),_._v(" "),v("p",[_._v("传输方向和有效的电平范围")])]),_._v(" "),v("li",[v("p",[_._v("功能特性")]),_._v(" "),v("p",[_._v("每根传输线的功能（地址、数据、控制）")])]),_._v(" "),v("li",[v("p",[_._v("时间特性")]),_._v(" "),v("p",[_._v("信号的时序关系")])])]),_._v(" "),v("h4",{attrs:{id:"总线的分类-按数据传输格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的分类-按数据传输格式"}},[_._v("#")]),_._v(" 总线的分类-按数据传输格式")]),_._v(" "),v("h5",{attrs:{id:"串行总线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#串行总线"}},[_._v("#")]),_._v(" 串行总线")]),_._v(" "),v("p",[_._v("优点：只需要一条传输线，成本低廉，广泛应用于长距离传输；应用于计算机内部时，可以节省布线空间。")]),_._v(" "),v("p",[_._v("缺点：在数据发送和接收的时候要进行拆卸和装配，要考虑串行-并行转换的问题。")]),_._v(" "),v("h5",{attrs:{id:"并行总线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#并行总线"}},[_._v("#")]),_._v(" 并行总线")]),_._v(" "),v("p",[_._v("优点：总线逻辑时序比较简单，电路实现起来比较容易。")]),_._v(" "),v("p",[_._v("缺点：信号线数量多，占用更多的布线空间；远距离传输成本高昂；由于工作频率较高时，并行的信号线之间会产生严重干扰，对每条线等长的要求也越高，所以无法持续提升工作频率。")]),_._v(" "),v("p",[_._v("注：")]),_._v(" "),v("ol",[v("li",[_._v("工作频率相同时，串行总线传输速度比并行总线慢。")]),_._v(" "),v("li",[_._v("并行总线的工作频率无法持续提高，而串行总线可以通过不断提高工作频率来提高传输速度，最终超过并行总线。")])]),_._v(" "),v("h4",{attrs:{id:"总线的分类-按总线功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的分类-按总线功能"}},[_._v("#")]),_._v(" 总线的分类-按总线功能")]),_._v(" "),v("h5",{attrs:{id:"片内总线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#片内总线"}},[_._v("#")]),_._v(" 片内总线")]),_._v(" "),v("p",[_._v("片内总线时芯片内部的总线，它是CPU芯片内部寄存器与寄存器之间、寄存器与ALU之间的公共连接线。")]),_._v(" "),v("h5",{attrs:{id:"系统总线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统总线"}},[_._v("#")]),_._v(" 系统总线")]),_._v(" "),v("p",[_._v("系统总线是计算机系统内各部件（CPU、主存、I/O接口）之间互相连接的总线。")]),_._v(" "),v("p",[_._v("按系统总线传输信息内容的不同，又可分为3类：")]),_._v(" "),v("ul",[v("li",[_._v("数据总线\n"),v("ul",[v("li",[_._v("传输各功能部件之间的数据信息，包括指令和操作数；")]),_._v(" "),v("li",[_._v("位数（根数）与机器字长、存储字长有关")]),_._v(" "),v("li",[_._v("双向")])])]),_._v(" "),v("li",[_._v("地址总线\n"),v("ul",[v("li",[_._v("传输地址信息，包括主存单元或I/O端口的地址")]),_._v(" "),v("li",[_._v("位数（根数）与主存地址空间大小及设备数量有关")]),_._v(" "),v("li",[_._v("单向")])])]),_._v(" "),v("li",[_._v("控制总线\n"),v("ul",[v("li",[_._v("传输控制信息")]),_._v(" "),v("li",[_._v("一根控制线传输一个信号\n"),v("ul",[v("li",[_._v("有出：CPU送出控制命令")]),_._v(" "),v("li",[_._v("有入：主存（或外设）返回CPU的反馈信号")])])])])])]),_._v(" "),v("h5",{attrs:{id:"通信总线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通信总线"}},[_._v("#")]),_._v(" 通信总线")]),_._v(" "),v("p",[_._v("通信总线是用于计算机系统之间或计算机系统与其他系统（如远程通信设备、测试设备）之间信息传送的总线，通信总线也称为外部总线。")]),_._v(" "),v("h4",{attrs:{id:"系统总线的结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统总线的结构"}},[_._v("#")]),_._v(" 系统总线的结构")]),_._v(" "),v("h5",{attrs:{id:"单总线结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#单总线结构"}},[_._v("#")]),_._v(" 单总线结构")]),_._v(" "),v("p",[_._v("结构：CPU、主存、I/O设备（通过I/O接口）都连接在一组总线上，允许I/O设备之间、I/O设备和PC之间或I/O设备与主存之间直接交换信息。")]),_._v(" "),v("p",[_._v("优点：结构简单，成本低，易于接入新的设备")]),_._v(" "),v("p",[_._v("缺点：带宽低、负载重，多个部件只能争用唯一的总线，且不支持并发传送操作。")]),_._v(" "),v("p",[_._v("注：单总线不是指只有一根信号线，系统总线按传送信息的不同可以细分为地址总线、数据总线和控制总线。")]),_._v(" "),v("h5",{attrs:{id:"双总线结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#双总线结构"}},[_._v("#")]),_._v(" 双总线结构")]),_._v(" "),v("p",[_._v("结构：双总线结构有两条总线，一条是主存总线，用于CPU、主存和通道之间进行数据传送，另一条是I/O总线，用于多个设备与通道之间进行数据传送。")]),_._v(" "),v("p",[_._v("优点：将较低速的I/O设备从单总线上分离出来，实现存储器总线和I/O总线分离。")]),_._v(" "),v("p",[_._v("缺点：需要增加通道等硬件设备。")]),_._v(" "),v("p",[_._v("通道：是具有特殊功能的处理器，能对I/O设备进行统一的管理。通道程序存放在主存中。")]),_._v(" "),v("h5",{attrs:{id:"三总线结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三总线结构"}},[_._v("#")]),_._v(" 三总线结构")]),_._v(" "),v("p",[_._v("结构：三总线结构在计算机系统各部件之间采用3条各自独立的总线来构成信息通路，这3条总线分别为：主存总线、I/O总线和直接内存访问DMA总线。")]),_._v(" "),v("p",[_._v("优点：提高了I/O设备的性能，使其更快的响应命令，提高系统吞吐量。")]),_._v(" "),v("p",[_._v("缺点：系统工作效率较低。")]),_._v(" "),v("p",[_._v("DMA总线：Direct Memory Access，直接访问内存。")]),_._v(" "),v("h3",{attrs:{id:"总线的性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的性能指标"}},[_._v("#")]),_._v(" 总线的性能指标")]),_._v(" "),v("ol",[v("li",[_._v("总线的传输周期（总线周期）")]),_._v(" "),v("li",[_._v("总线时钟周期")]),_._v(" "),v("li",[_._v("总线工作频率")]),_._v(" "),v("li",[_._v("总线的时钟频率")]),_._v(" "),v("li",[_._v("总线宽度")]),_._v(" "),v("li",[_._v("总线带宽")]),_._v(" "),v("li",[_._v("总线复用")]),_._v(" "),v("li",[_._v("信号线数")])]),_._v(" "),v("h5",{attrs:{id:"总线的传输周期-总线周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的传输周期-总线周期"}},[_._v("#")]),_._v(" 总线的传输周期（总线周期）")]),_._v(" "),v("p",[_._v("一次总线操作所需的时间（包括申请阶段、寻址阶段、传输阶段和结束阶段），通常由若干个总线时钟周期构成。")]),_._v(" "),v("h5",{attrs:{id:"总线时钟周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线时钟周期"}},[_._v("#")]),_._v(" 总线时钟周期")]),_._v(" "),v("p",[_._v("即机器的时钟周期。计算机有一个统一的时钟，以控制整个计算机各个部件，总线也要受此时钟的控制。")]),_._v(" "),v("h5",{attrs:{id:"总线的工作频率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的工作频率"}},[_._v("#")]),_._v(" 总线的工作频率")]),_._v(" "),v("p",[_._v("总线上各种操作的频率，为总线周期的倒数。")]),_._v(" "),v("p",[_._v("若总线周期=N个时钟周期，则总线的工作频率=时钟频率/N。")]),_._v(" "),v("p",[_._v("实际上指一秒内传送几次数据。")]),_._v(" "),v("h5",{attrs:{id:"总线的时钟频率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的时钟频率"}},[_._v("#")]),_._v(" 总线的时钟频率")]),_._v(" "),v("p",[_._v("即机器的时钟频率，为时钟周期的倒数。")]),_._v(" "),v("p",[_._v("若时钟周期为$\\pi$，则时钟频率为1/$\\pi$。")]),_._v(" "),v("p",[_._v("实际上指一秒内有多少个时钟周期。")]),_._v(" "),v("h5",{attrs:{id:"总线宽度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线宽度"}},[_._v("#")]),_._v(" 总线宽度")]),_._v(" "),v("p",[_._v("又称总线位宽，它是总线上同时能够传输的数据位数，通常是指数据总线的根数，如32根称为32位（bit）总线。")]),_._v(" "),v("h5",{attrs:{id:"总线带宽"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线带宽"}},[_._v("#")]),_._v(" 总线带宽")]),_._v(" "),v("p",[_._v("可理解为总线的数据传输率，即单位时间内总线上可传输数据的位数，通常用每秒钟传送信息的字节数来衡量，单位可用字节/秒（B/s）表示。\n$$\n总线带宽 = 总线工作频率\\cdot总线宽度（bit/s） = 总线工作频率 \\cdot \\frac{总线宽度}{8}（B/s） = \\frac{总线宽度}{总线周期}（bit/s） = \\frac{总线宽度}{8 \\cdot 总线周期}（B/s）\n$$\n注：总线带宽是指总线本身所能达到的最高传输速率，在计算实际的有效数据传输时，要用实际传输的数据量除以耗时。")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Kilo（10"),v("sub",[_._v("3")]),_._v("）")])]),_._v(" "),v("li",[v("p",[_._v("Mega（10"),v("sub",[_._v("6")]),_._v("）")])]),_._v(" "),v("li",[v("p",[_._v("Giga（10"),v("sub",[_._v("9")]),_._v("）")])]),_._v(" "),v("li",[v("p",[_._v("Tera（10"),v("sub",[_._v("12")]),_._v("）")])])]),_._v(" "),v("p",[_._v("1s = 10"),v("sub",[_._v("9")]),_._v("n")]),_._v(" "),v("p",[_._v("例子: 某同步总线采用数据线和地址线复用方式，其中地址/数据线有32根，总线时钟频率为66MHz，每个时钟周期传送两次数据（上升沿和下降沿各传送一次数据）。")]),_._v(" "),v("ol",[v("li",[_._v("该总线的最大数据传输率（总线带宽）是多少？")]),_._v(" "),v("li",[_._v("若该总线支持突发（猝发）传输方式，传输一个地址占用一个时钟周期，则一次“主存写”总线事务传输128位数据所需要的时间至少是多少？")])]),_._v(" "),v("p",[_._v("解答：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("每个时钟周期传送两次数据，则总线工作频率是时钟频率的两倍。")]),_._v(" "),v("p",[_._v("总线工作频率 = 2 x 66MHz = 132MHz")]),_._v(" "),v("p",[_._v("总线宽度 = 32bit = 4B")]),_._v(" "),v("p",[_._v("总线带宽 = 总线工作频率 x 总线宽度 = 132 x 4MB/s = 528MB/s")])]),_._v(" "),v("li",[v("p",[_._v("突发（猝发）传输方式：一次总线事务中，主设备只需给出一个首地址，从设备就能从首地址开始的若干连续单元读出或写入多个数据。")]),_._v(" "),v("p",[_._v("发送首地址占用1个时钟周期，128位数据需传输4次，占用2个时钟周期")]),_._v(" "),v("p",[_._v("一个时钟周期 = 1/66MHz 约= 15ns")]),_._v(" "),v("p",[_._v("总耗时 = (1 +2 ) x 15ns = 45ns")])])]),_._v(" "),v("h3",{attrs:{id:"总线仲裁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线仲裁"}},[_._v("#")]),_._v(" 总线仲裁")]),_._v(" "),v("h4",{attrs:{id:"总线仲裁的基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线仲裁的基本概念"}},[_._v("#")]),_._v(" 总线仲裁的基本概念")]),_._v(" "),v("p",[_._v("同一时刻只能有一个设备控制总线传输操作，可以有一个或多个设备从总线接收数据。")]),_._v(" "),v("p",[_._v("将总线上所连接的各类设备按其对总线有无控制功能分为：")]),_._v(" "),v("ul",[v("li",[_._v("主设备：获得总线控制权的设备")]),_._v(" "),v("li",[_._v("从设备：被主设备访问的设备，只能响应从主设备发来的各种命令。")])]),_._v(" "),v("p",[_._v("为什么要仲裁？")]),_._v(" "),v("p",[_._v("总线作为一种共享设备，不可避免的会出现同一时刻有多个主设备竞争总线控制权的问题。")]),_._v(" "),v("p",[_._v("总线仲裁分类：")]),_._v(" "),v("ul",[v("li",[_._v("集中仲裁方式：链式查询方式、计数器顶式查询方式、独立请求方式")]),_._v(" "),v("li",[_._v("分布仲裁方式")])]),_._v(" "),v("h4",{attrs:{id:"集中仲裁方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#集中仲裁方式"}},[_._v("#")]),_._v(" 集中仲裁方式")]),_._v(" "),v("h5",{attrs:{id:"工作流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[_._v("#")]),_._v(" 工作流程")]),_._v(" "),v("ol",[v("li",[_._v("主设备发出请求信号")]),_._v(" "),v("li",[_._v("若多个主设备同时要使用总线，则由总线控制器的判优、仲裁逻辑按一定的优先等级顺序确定那个主设备能使用总线。")]),_._v(" "),v("li",[_._v("获得总线控制权的主设备开始传送数据。")])]),_._v(" "),v("h5",{attrs:{id:"链式查询方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#链式查询方式"}},[_._v("#")]),_._v(" 链式查询方式")]),_._v(" "),v("p",[_._v("新增三根线：")]),_._v(" "),v("ul",[v("li",[_._v("BG：总线允许")]),_._v(" "),v("li",[_._v("BR：总线请求")]),_._v(" "),v("li",[_._v("BS：总线忙")])]),_._v(" "),v("p",[_._v("总线忙信号的建立者是获得总线控制权的设备。")]),_._v(" "),v("p",[_._v("优先级：")]),_._v(" "),v("p",[_._v("离总线控制器越近的部件，其优先级越高。")]),_._v(" "),v("p",[_._v("离总线控制器越远的部件，其优先级越低。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("p",[_._v("链式查询方式优先级固定，只需用很少的几根控制线就能按一定优先次序实现总线控制，结构简单，扩充容易。")]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("p",[_._v("对硬件电路的故障敏感，并且优先级不能改变。当优先级高的部件频繁请求使用总线时，会使优先级较低的部件长期不能使用总线。")]),_._v(" "),v("h5",{attrs:{id:"计数器查询方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计数器查询方式"}},[_._v("#")]),_._v(" 计数器查询方式")]),_._v(" "),v("p",[_._v("当地址线上的技术值与请求使用总线设备地址一致时，该设备获得总线控制权，同时，中止计数器的技术及查询。")]),_._v(" "),v("p",[_._v("当总线控制器接收到总线请求信号，判断总线空闲时，计数器开始计数，计数值通过设备地址线发向各个部件。")]),_._v(" "),v("p",[_._v("结构特点：")]),_._v(" "),v("p",[_._v("用一个计数器控制总线使用权，相对链式查询方式多了一组设备地址线，少了一根总线响应线BG，它仍共用一根总线请求线。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("计数初始值可以改变优先次序")]),_._v(" "),v("ul",[v("li",[_._v("计数每次从“0”开始，设备的优先级就按顺序排列，固定不变。")]),_._v(" "),v("li",[_._v("计数从上一次的终点开始，此时设备使用总线的优先级相等。")]),_._v(" "),v("li",[_._v("计数器的初始值还可以由程序设置。")])])]),_._v(" "),v("li",[v("p",[_._v("对电路的故障没有链式敏感")])])]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("ol",[v("li",[_._v("增加了控制线数，若设备有n个，则需log"),v("sub",[_._v("2")]),_._v("n + 2条控制线")]),_._v(" "),v("li",[_._v("控制相对比链式查询相对复杂")])]),_._v(" "),v("h5",{attrs:{id:"独立请求方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#独立请求方式"}},[_._v("#")]),_._v(" 独立请求方式")]),_._v(" "),v("p",[_._v("当总线上的部件需要使用总线时，经各自的总线请求线发送总线请求信号，在总线控制器中排队。")]),_._v(" "),v("p",[_._v("当总线控制器按一定的优先次序决定批准某个部件的请求时，则给该部件发送总线响应信号。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("ol",[v("li",[_._v("响应速度快，总线允许信号BG直接从控制器发送到有关设备，不必在设备间传递或者查询。")]),_._v(" "),v("li",[_._v("对优先次序的控制相当灵活。")])]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("控制线数量多")]),_._v(" "),v("p",[_._v("若设备有n个，则需要2n+1条控制线，其中+1为BS线，其用处为，用于设备向总线控制部件反馈已经使用完毕总线。")])]),_._v(" "),v("li",[v("p",[_._v("总线的控制逻辑更加复杂。")])])]),_._v(" "),v("h4",{attrs:{id:"集中总裁方式小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#集中总裁方式小结"}},[_._v("#")]),_._v(" 集中总裁方式小结")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("对比项目")]),_._v(" "),v("th",[_._v("链式查询")]),_._v(" "),v("th",[_._v("计数器定时查询")]),_._v(" "),v("th",[_._v("独立请求")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("控制线数")]),_._v(" "),v("td",[_._v("3，总线请求：1；总线允许：1；总线忙：1")]),_._v(" "),v("td",[_._v("log"),v("sub",[_._v("2")]),_._v("n+2，总线请求：1；总线允许：log"),v("sub",[_._v("2")]),_._v("n；总线忙：1")]),_._v(" "),v("td",[_._v("2n+1，总线请求：n；总线允许：n；总线忙：1")])]),_._v(" "),v("tr",[v("td",[_._v("优点")]),_._v(" "),v("td",[_._v("优先级固定，结构简单，扩充容易")]),_._v(" "),v("td",[_._v("优先级较灵活")]),_._v(" "),v("td",[_._v("响应速度快，优先级灵活")])]),_._v(" "),v("tr",[v("td",[_._v("缺点")]),_._v(" "),v("td",[_._v("对电路故障敏感优先级不灵活")]),_._v(" "),v("td",[_._v("控制线较多，控制相对复杂")]),_._v(" "),v("td",[_._v("控制线多，控制复杂")])])])]),_._v(" "),v("p",[_._v("总线忙信号的建立者是获得总线控制权的设备")]),_._v(" "),v("h3",{attrs:{id:"总线的操作和定时"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线的操作和定时"}},[_._v("#")]),_._v(" 总线的操作和定时")]),_._v(" "),v("h4",{attrs:{id:"总线传输的四个阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线传输的四个阶段"}},[_._v("#")]),_._v(" 总线传输的四个阶段")]),_._v(" "),v("h5",{attrs:{id:"总线周期的四个阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线周期的四个阶段"}},[_._v("#")]),_._v(" 总线周期的四个阶段")]),_._v(" "),v("ol",[v("li",[_._v("申请分配阶段：由需要使用总线的主模块（或主设备）提出申请，经总线仲裁机构决定将下一传输周期的总线使用权授予某一申请者。也可将此阶段细分为传输请求和总线仲裁两个阶段。")]),_._v(" "),v("li",[_._v("寻址阶段：获得使用权的主模块通过总线发出本次要访问的从模块的地址及有关命令，启动参与本次传输的从模块。")]),_._v(" "),v("li",[_._v("传输阶段：主模块和从模块进行数据交换，可单向或双向进行数据传送。")]),_._v(" "),v("li",[_._v("结束阶段：主模块的有关信息均从系统总线上撤除，让出总线使用权。")])]),_._v(" "),v("h5",{attrs:{id:"总线定时"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线定时"}},[_._v("#")]),_._v(" 总线定时")]),_._v(" "),v("p",[_._v("是指总线在双方交换数据的过程中需要时间上配合关系的控制，这种控制称为总线定时，它的实质是一种协议或规则。")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("同步通信（同步定时方式）")]),_._v(" "),v("p",[_._v("由统一时钟控制数据传送")])]),_._v(" "),v("li",[v("p",[_._v("异步通信（异步定时方式）")]),_._v(" "),v("p",[_._v("采用应答方式，没有公共时钟标准")])]),_._v(" "),v("li",[v("p",[_._v("半同步通信")]),_._v(" "),v("p",[_._v("同步、异步结合")])]),_._v(" "),v("li",[v("p",[_._v("分离式通信")]),_._v(" "),v("p",[_._v("充分挖掘系统总线每瞬间的潜力")])])]),_._v(" "),v("h4",{attrs:{id:"同步定时方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#同步定时方式"}},[_._v("#")]),_._v(" 同步定时方式")]),_._v(" "),v("p",[_._v("同步定时方式是指系统采用一个统一的时钟信号来协调发送和接收双方的传送定时关系。")]),_._v(" "),v("p",[_._v("时钟产生相等的时间间隔，每个间隔构成一个总线周期。")]),_._v(" "),v("p",[_._v("在一个总线周期中，发送方和接收方可进行一次数据传送。")]),_._v(" "),v("p",[_._v("因为采用统一时钟，每个部件或设备发送或接收信息都在固定的总线传送周期中，一个总线的传送周期结束，下一个总线传送周期开始。")]),_._v(" "),v("p",[_._v("优点：传送速度快，具有较高的传输速率，总线控制逻辑简单。")]),_._v(" "),v("p",[_._v("缺点：主从设备属于强制性同步，不能及时进行数据通信的有效性检验，可靠性较差。")]),_._v(" "),v("p",[_._v("同步通信适用于总线长度较短及总线所接部件的存取时间比较接近的系统。")]),_._v(" "),v("h4",{attrs:{id:"异步定时方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#异步定时方式"}},[_._v("#")]),_._v(" 异步定时方式")]),_._v(" "),v("p",[_._v("在异步定时方式中，没有统一的时钟，也没有固定的时间间隔，完全依靠传送双方相互制约的“握手”信号来实现定时控制。")]),_._v(" "),v("p",[_._v("主设备提出交换信息的“请求”信号，经接口传送到从设备；从设备接到主设备的请求后，通过接口向主设备发出“回答”信号。")]),_._v(" "),v("p",[_._v("根据“请求”和“回答”信号的撤销是否互锁，分为以下3种类型。")]),_._v(" "),v("ul",[v("li",[_._v("不互锁方式")]),_._v(" "),v("li",[_._v("半互锁方式")]),_._v(" "),v("li",[_._v("全互锁方式")])]),_._v(" "),v("h5",{attrs:{id:"不互锁方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#不互锁方式"}},[_._v("#")]),_._v(" 不互锁方式")]),_._v(" "),v("p",[_._v("主设备发出“请求”信号后，不必等到接到从设备的“回答”信号，而是经过一段时间，便撤销“请求”信号。")]),_._v(" "),v("p",[_._v("而从设备在接到“请求”信号后，发出“回答”信号，并经过一段时间，自动撤销“回答信号”。双方不存在互锁关系。")]),_._v(" "),v("h5",{attrs:{id:"半互锁方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#半互锁方式"}},[_._v("#")]),_._v(" 半互锁方式")]),_._v(" "),v("p",[_._v("主设备发出“请求”信号后，必须待接到从设备的“回答”信号后，才撤销“请求”信号，有互锁的关系。")]),_._v(" "),v("p",[_._v("而从设备在接到“请求”信号后，发出“回答”信号，单不必等待获知主设备的“请求”信号已经撤销，而是隔一段四件后自动撤销“回答”信号，不存在互锁关系。")]),_._v(" "),v("h5",{attrs:{id:"全互锁方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#全互锁方式"}},[_._v("#")]),_._v(" 全互锁方式")]),_._v(" "),v("p",[_._v("主设备发出“请求”信号后，必须待从设备“回答”后，才撤销“请求”信号。")]),_._v(" "),v("p",[_._v("从设备发出“回答”信号，必须待获知主设备“请求”信号已撤销后，再撤销其“回答”信号。双方存在互锁关系。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("p",[_._v("总线周期长度可变，能保证两个工作速度相差很大的部件或设备之间可靠的进行信息交换，自动适应时间的配合。")]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("p",[_._v("比同步控制方式稍复杂一些，速度比同步定时方式慢。")]),_._v(" "),v("h5",{attrs:{id:"数据传输率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据传输率"}},[_._v("#")]),_._v(" 数据传输率")]),_._v(" "),v("p",[_._v("波特率：单位时间内传送的二进制数据的位数，单位用bps（位/秒）表示，记做波特。")]),_._v(" "),v("p",[_._v("比特率：单位时间内传送二进制有效数据的位数，单位用bps表示，bps即bit/s\n$$\n\\frac{比特率}{波特率} = \\frac{数据位数}{数据位数+其他附加位位数}\n$$\n例子：")]),_._v(" "),v("p",[_._v("在异步串行传输方式下，其实位为1位，数据传输位为7位，偶校验位为1位，停止位为1位，如果波特率为1200bit/s，求这是的有效数据传输率为多少？")]),_._v(" "),v("p",[_._v("解答：")]),_._v(" "),v("p",[_._v("每传送(1+7+1+1) = 10个二进制位，就传送了7个有效数据位，故有效数据传输率为1200 x 7 / 10 = 840bit/s")]),_._v(" "),v("h4",{attrs:{id:"半同步信号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#半同步信号"}},[_._v("#")]),_._v(" 半同步信号")]),_._v(" "),v("p",[_._v("统一时钟的基础上，增加一个“等待”响应信号$\\overline{WAIT}$")]),_._v(" "),v("h4",{attrs:{id:"分离式通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分离式通信"}},[_._v("#")]),_._v(" 分离式通信")]),_._v(" "),v("p",[_._v("上述三种通信的共同点")]),_._v(" "),v("p",[_._v("一个总线传输周期（以输入数据为例）")]),_._v(" "),v("ul",[v("li",[_._v("主模块发地址、命令，使用总线")]),_._v(" "),v("li",[_._v("从模块准备数据，不使用总线，总线空闲")]),_._v(" "),v("li",[_._v("从模块向主模块发数据，使用总线")])]),_._v(" "),v("p",[_._v("分离式通信的一个总线传输周期分为")]),_._v(" "),v("ul",[v("li",[_._v("子周期1：主模块申请占用总线，使用完后放弃总线的使用权")]),_._v(" "),v("li",[_._v("子周期2：从模块申请占用总线，将各种信息送至总线上")])]),_._v(" "),v("p",[_._v("特点：")]),_._v(" "),v("ol",[v("li",[_._v("各模块均有权申请占用总线")]),_._v(" "),v("li",[_._v("采用同步方式通信，不等对方回答")]),_._v(" "),v("li",[_._v("各模块准备数据时，不占用总线")]),_._v(" "),v("li",[_._v("总线利用率提高")])]),_._v(" "),v("h3",{attrs:{id:"总线标准"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总线标准"}},[_._v("#")]),_._v(" 总线标准")]),_._v(" "),v("p",[_._v("总线标准是国际上公布或推荐的互连各个模块的标准，它是把各种不同的模块组成计算机系统时必须遵守的规范。按总线标准设计的借口可视为通用接口，在接口的两端，任何一方只需根据总线标准的要求完成自身方面的功能要求，而无需了解对方接口的要求。")]),_._v(" "),v("p",[_._v("系统总线标准：ISA、EISA、VESA、PCI、PCI-Express等")]),_._v(" "),v("p",[_._v("设备总线标准：IDE、AGP、RS-232C、USB、SATA、SCSI、PCMCIA等。")]),_._v(" "),v("p",[_._v("局部总线标准：在ISA总线和CPU总线之间增加的一级总线或管理层，如PCI、PCI-E、VESA、AGP等，可以节省系统的总带宽。")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("即插即用")])]),_._v(" "),v("li",[v("p",[_._v("热插拔")])])]),_._v(" "),v("h2",{attrs:{id:"第七章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第七章"}},[_._v("#")]),_._v(" 第七章")]),_._v(" "),v("p",[_._v("输入输出系统")]),_._v(" "),v("h3",{attrs:{id:"i-o系统基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o系统基本概念"}},[_._v("#")]),_._v(" I/O系统基本概念")]),_._v(" "),v("h4",{attrs:{id:"i-o系统演变过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o系统演变过程"}},[_._v("#")]),_._v(" I/O系统演变过程")]),_._v(" "),v("h5",{attrs:{id:"早期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#早期"}},[_._v("#")]),_._v(" 早期")]),_._v(" "),v("p",[_._v("CPU和I/O串行工作，分散连接")]),_._v(" "),v("p",[_._v("程序查询方式：")]),_._v(" "),v("p",[_._v("由CPU通过程序不断查询I/O设备是否已做好准备，从而控制I/O设备与主机交换信息。")]),_._v(" "),v("h5",{attrs:{id:"接口模块和dma阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口模块和dma阶段"}},[_._v("#")]),_._v(" 接口模块和DMA阶段")]),_._v(" "),v("p",[_._v("CPU和I/O并行工作，总线连接")]),_._v(" "),v("p",[_._v("中断方式：")]),_._v(" "),v("p",[_._v("只在I/O设备准备就绪并向CPU发出中断请求时才予以响应。")]),_._v(" "),v("p",[_._v("DMA方式：")]),_._v(" "),v("p",[_._v("主存和I/O设备之间有一条直接数据通路，当主存和I/O设备交换信息时，无需调用中断服务程序。")]),_._v(" "),v("h5",{attrs:{id:"具有i-o通道结构的阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#具有i-o通道结构的阶段"}},[_._v("#")]),_._v(" 具有I/O通道结构的阶段")]),_._v(" "),v("p",[_._v("在系统中设有通道控制部件，每个通道都挂接若干外设，主机在执行I/O命令时，只需启动有关通道，通道将执行通路程序，从而完成I/O操作。")]),_._v(" "),v("h5",{attrs:{id:"具有i-o处理机阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#具有i-o处理机阶段"}},[_._v("#")]),_._v(" 具有I/O处理机阶段")]),_._v(" "),v("h4",{attrs:{id:"i-o系统基本组成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o系统基本组成"}},[_._v("#")]),_._v(" I/O系统基本组成")]),_._v(" "),v("h5",{attrs:{id:"i-o软件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o软件"}},[_._v("#")]),_._v(" I/O软件")]),_._v(" "),v("p",[_._v("包括驱动程序、用户程序、管理程序、升级补丁等。")]),_._v(" "),v("p",[_._v("通常采用I/O指令和通道指令实现CPU和I/O设备的信息交换。")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("I/O指令")]),_._v(" "),v("p",[_._v("CPU指令的一部分")]),_._v(" "),v("p",[_._v("组成：操作码 + 命令码 + 设备码")]),_._v(" "),v("p",[_._v("操作码：识别I/O指令")]),_._v(" "),v("p",[_._v("命令码：做什么操作")]),_._v(" "),v("p",[_._v("设备码：对哪个设备进行操作")])]),_._v(" "),v("li",[v("p",[_._v("通道指令")])])]),_._v(" "),v("p",[_._v("通道指令自身的指令")]),_._v(" "),v("p",[_._v("指出数据的首地址、传送字数、操作命令")]),_._v(" "),v("p",[_._v("通道指令放在主存中")]),_._v(" "),v("p",[_._v("由CPU执行启动I/O设备的指令，由通道代替CPU对I/O设备进行管理")]),_._v(" "),v("h5",{attrs:{id:"i-o硬件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o硬件"}},[_._v("#")]),_._v(" I/O硬件")]),_._v(" "),v("p",[_._v("包括外部设备、设备控制器和接口、I/O总线等。")]),_._v(" "),v("h4",{attrs:{id:"i-o方式简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o方式简介"}},[_._v("#")]),_._v(" I/O方式简介")]),_._v(" "),v("h5",{attrs:{id:"程序查询方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#程序查询方式"}},[_._v("#")]),_._v(" 程序查询方式")]),_._v(" "),v("p",[_._v("I/O与CPU串行，CPU有踏步等待现象")]),_._v(" "),v("h5",{attrs:{id:"程序中断方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#程序中断方式"}},[_._v("#")]),_._v(" 程序中断方式")]),_._v(" "),v("p",[_._v("I/O准备数据时CPU继续工作，在指令执行借宿时响应中断")]),_._v(" "),v("h5",{attrs:{id:"dma方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dma方式"}},[_._v("#")]),_._v(" DMA方式")]),_._v(" "),v("p",[_._v("主存与I/O交换信息时由DMA控制器控制，主存取周期结束时响应DMA请求")]),_._v(" "),v("h5",{attrs:{id:"通道方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通道方式"}},[_._v("#")]),_._v(" 通道方式")]),_._v(" "),v("p",[_._v("通过I/O指令启动通道，通道程序放在主存中")]),_._v(" "),v("p",[_._v("程序查询/中断方式主要由程序控制，用于速度较低的外设")]),_._v(" "),v("p",[_._v("DMA/通道方式主要由硬件控制，用于速度较高的外设")]),_._v(" "),v("h3",{attrs:{id:"输入与输出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输入与输出"}},[_._v("#")]),_._v(" 输入与输出")]),_._v(" "),v("h4",{attrs:{id:"外部设备"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#外部设备"}},[_._v("#")]),_._v(" 外部设备")]),_._v(" "),v("p",[_._v("外部设备也称外围设备，是除了主机以外的、能直接或间接与计算机交换信息的装置。")]),_._v(" "),v("h5",{attrs:{id:"输入设备"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输入设备"}},[_._v("#")]),_._v(" 输入设备")]),_._v(" "),v("p",[_._v("用于向计算机系统输入命令和文本、数据等信息的部件。键盘和鼠标是最基本的输入设备。")]),_._v(" "),v("h5",{attrs:{id:"输出设备"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输出设备"}},[_._v("#")]),_._v(" 输出设备")]),_._v(" "),v("p",[_._v("用于将计算机系统中的信息输出到计算机外部进行显示、交换等的部件。显示器和打印机是最基本的输出设备。")]),_._v(" "),v("h5",{attrs:{id:"外存设备"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#外存设备"}},[_._v("#")]),_._v(" 外存设备")]),_._v(" "),v("p",[_._v("是指除计算机内存及CPU缓存等以外的存储器。硬磁盘、光盘等是最基本的外存设备。")]),_._v(" "),v("h4",{attrs:{id:"显示器的分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#显示器的分类"}},[_._v("#")]),_._v(" 显示器的分类")]),_._v(" "),v("ul",[v("li",[_._v("阴极射线管（CRT）显示器")]),_._v(" "),v("li",[_._v("液晶显示器")]),_._v(" "),v("li",[_._v("LED（发光二极管）显示器")])]),_._v(" "),v("h4",{attrs:{id:"显示器的指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#显示器的指标"}},[_._v("#")]),_._v(" 显示器的指标")]),_._v(" "),v("h5",{attrs:{id:"屏幕大小"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#屏幕大小"}},[_._v("#")]),_._v(" 屏幕大小")]),_._v(" "),v("p",[_._v("以对角线长度表示，常用的有12-29英寸等")]),_._v(" "),v("h5",{attrs:{id:"分辨率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分辨率"}},[_._v("#")]),_._v(" 分辨率")]),_._v(" "),v("p",[_._v("所能表示的像素个数，屏幕上的每一个光点就是一个像素，以宽、高的像素的乘积表示，例如，800x600、1024x768和1280x1024等。")]),_._v(" "),v("h5",{attrs:{id:"灰度级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#灰度级"}},[_._v("#")]),_._v(" 灰度级")]),_._v(" "),v("p",[_._v("灰度级是指黑白显示器中所显示的像素点的亮暗差别，在彩色显示器中则表现为颜色的不同，灰度级越多，图像层次越清楚逼真，典型的有8位（256级）、16位等。n位可以表示2"),v("sub",[_._v("n")]),_._v("种不同的亮度或颜色。")]),_._v(" "),v("h5",{attrs:{id:"刷新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#刷新"}},[_._v("#")]),_._v(" 刷新")]),_._v(" "),v("p",[_._v("光点只能保持极短的时间便会消失，为此必须在光点消失之前再重新扫描显示一遍，这个过程称为刷新。")]),_._v(" "),v("p",[_._v("刷新频率：单位时间内扫描整个屏幕内容的次数，按照人的视觉生理，刷新频率大于30Hz时才不会感到闪烁，通常显示器刷新频率在60-120Hz。")]),_._v(" "),v("h5",{attrs:{id:"显示存储器vram"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#显示存储器vram"}},[_._v("#")]),_._v(" 显示存储器VRAM")]),_._v(" "),v("p",[_._v("也称刷新存储器，为了不断提高刷新图像的信号，必须把一帧图像信息存储在刷新存储器中。其中存储容量由图像分辨率和灰度级决定，分辨率越高，刷新存储器容量越大。")]),_._v(" "),v("p",[_._v("VRAM容量 = 分辨率 x 灰度级位数")]),_._v(" "),v("p",[_._v("VRAM带宽 = 分辨率 x 灰度级位数 x 帧数")]),_._v(" "),v("h4",{attrs:{id:"阴极射线管-crt-显示器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#阴极射线管-crt-显示器"}},[_._v("#")]),_._v(" 阴极射线管（CRT）显示器")]),_._v(" "),v("h5",{attrs:{id:"按显示信息内容不同"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按显示信息内容不同"}},[_._v("#")]),_._v(" 按显示信息内容不同")]),_._v(" "),v("ul",[v("li",[_._v("字符显示器")]),_._v(" "),v("li",[_._v("图形显示器")]),_._v(" "),v("li",[_._v("图像显示器")])]),_._v(" "),v("h5",{attrs:{id:"按扫描方式不同可分为"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按扫描方式不同可分为"}},[_._v("#")]),_._v(" 按扫描方式不同可分为")]),_._v(" "),v("ul",[v("li",[_._v("光栅扫描显示器")]),_._v(" "),v("li",[_._v("随机扫描显示器")])]),_._v(" "),v("h4",{attrs:{id:"打印机"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#打印机"}},[_._v("#")]),_._v(" 打印机")]),_._v(" "),v("p",[_._v("打印机时计算机的输出设备之一，用于将计算机处理结果打印在相关介质上。")]),_._v(" "),v("h5",{attrs:{id:"按印字原理不同可分为"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按印字原理不同可分为"}},[_._v("#")]),_._v(" 按印字原理不同可分为")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("击打式打印机")]),_._v(" "),v("p",[_._v("利用机械动作使印字机构与色带和纸相撞而打印字符")]),_._v(" "),v("p",[_._v("优点：设备成本低、印字质量好")]),_._v(" "),v("p",[_._v("缺点：噪声大，速度慢")])]),_._v(" "),v("li",[v("p",[_._v("非击打式打印机")]),_._v(" "),v("p",[_._v("采用电、磁、光、喷墨等物理、化学方法来印刷字符")]),_._v(" "),v("p",[_._v("优点：速度快、噪声小")]),_._v(" "),v("p",[_._v("缺点：成本高")])])]),_._v(" "),v("h5",{attrs:{id:"按打印机工作方式不同可分为"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按打印机工作方式不同可分为"}},[_._v("#")]),_._v(" 按打印机工作方式不同可分为")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("串行打印机")]),_._v(" "),v("p",[_._v("逐字打印，速度慢")])]),_._v(" "),v("li",[v("p",[_._v("行式打印机")]),_._v(" "),v("p",[_._v("逐行打印，速度快")])])]),_._v(" "),v("h5",{attrs:{id:"按工作方式可分为"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按工作方式可分为"}},[_._v("#")]),_._v(" 按工作方式可分为")]),_._v(" "),v("ul",[v("li",[_._v("针式打印机")]),_._v(" "),v("li",[_._v("喷墨式打印机")]),_._v(" "),v("li",[_._v("激光打印机")])]),_._v(" "),v("h3",{attrs:{id:"外存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#外存储器"}},[_._v("#")]),_._v(" 外存储器")]),_._v(" "),v("p",[_._v("计算机等外存储器又称辅助存储器，目前主要使用磁表面存储器。")]),_._v(" "),v("p",[_._v("所谓磁表面存储，是指把某些磁性材料薄薄的涂在金属铝或塑料表面上作为载磁体来存信息。磁盘存储器、磁带存储器和磁鼓存储器均属于磁表面存储器。")]),_._v(" "),v("h5",{attrs:{id:"磁表面存储器的优点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁表面存储器的优点"}},[_._v("#")]),_._v(" 磁表面存储器的优点：")]),_._v(" "),v("ol",[v("li",[_._v("存储容量大，价位低")]),_._v(" "),v("li",[_._v("记录介质可以重复使用")]),_._v(" "),v("li",[_._v("记录信息可以长期保存而不丢失，甚至可以脱及存档")]),_._v(" "),v("li",[_._v("非破坏性读出，读出时不需要再生")])]),_._v(" "),v("h5",{attrs:{id:"磁表面存储器的缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁表面存储器的缺点"}},[_._v("#")]),_._v(" 磁表面存储器的缺点：")]),_._v(" "),v("ol",[v("li",[_._v("存取速度慢")]),_._v(" "),v("li",[_._v("机械结构复杂")]),_._v(" "),v("li",[_._v("对工作环境要求较高")])]),_._v(" "),v("h5",{attrs:{id:"原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[_._v("#")]),_._v(" 原理：")]),_._v(" "),v("p",[_._v("当磁头和磁性记录介质有相对运动时，通过电磁转换完成读/写操作。")]),_._v(" "),v("p",[_._v("编码方法：按某种方案（规律），把一连串的二进制信息变换成存储介质磁层中一个磁化翻转状态的序列，并使读/写控制电路容易、可靠的实现转换。")]),_._v(" "),v("p",[_._v("磁记录方式：通常采用调频制（FM）和改进型调频制（MFM）的记录方式。")]),_._v(" "),v("p",[_._v("外存储器既可以作为输入设备，也可以作为输出设备。（既可以存数据，也可以读数据）")]),_._v(" "),v("h4",{attrs:{id:"磁盘存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘存储器"}},[_._v("#")]),_._v(" 磁盘存储器")]),_._v(" "),v("h5",{attrs:{id:"磁盘设备的组成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘设备的组成"}},[_._v("#")]),_._v(" 磁盘设备的组成")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("存储区域")]),_._v(" "),v("p",[_._v("一块硬盘含有若干个记录面，每个记录划分为若干条磁道，而每条磁道又划分为若干个扇区，扇区（也称块）是磁盘读写的最小单位，也就是说磁盘按块存取。")]),_._v(" "),v("p",[_._v("磁头数（Heads）：即记录面数，表示硬盘总共有多少个磁头，磁头用于读取/写入盘片上记录面的信息，一个记录面对应一个磁头。")]),_._v(" "),v("p",[_._v("柱面数（Cylinders）：表示硬盘每一面盘片上有多少条磁道。在一个盘组中，不同记录面的相同编号（位置）的诸多磁道构成一个圆柱面。")]),_._v(" "),v("p",[_._v("扇区数（Sectors）：表示每一条磁道上有多少个扇区。")])]),_._v(" "),v("li",[v("p",[_._v("硬盘存储器")]),_._v(" "),v("p",[_._v("硬盘存储器由磁盘驱动器、磁盘控制器和盘片组成。")])])]),_._v(" "),v("p",[_._v("磁盘驱动器：核心部件是刺头组件和盘片组件，温彻斯特盘是一种可移动固定盘片的硬盘存储器。")]),_._v(" "),v("p",[_._v("磁盘控制器：是硬盘存储器和主机的接口，主流标准有IDE、SCSI、SATA等。")]),_._v(" "),v("h5",{attrs:{id:"磁盘的性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘的性能指标"}},[_._v("#")]),_._v(" 磁盘的性能指标")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("磁盘的容量")]),_._v(" "),v("p",[_._v("一个磁盘所能存储的字节总数称为磁盘容量。磁盘容量有非格式化容量和格式化容量之分。")]),_._v(" "),v("p",[_._v("非格式化容量是指磁记录表面可以利用的磁化单元总数。")]),_._v(" "),v("p",[_._v("格式化容量是指按照某种特定的记录格式所能存储信息的总量。")])]),_._v(" "),v("li",[v("p",[_._v("记录密度")]),_._v(" "),v("p",[_._v("记录密度是指盘片单位面积上记录的二进制的信息量，通常以道密度、位密度和面密度表示。")]),_._v(" "),v("p",[_._v("道密度：是沿磁盘半径方向单位长度上的磁道数")]),_._v(" "),v("p",[_._v("位密度：是磁道单位长度上能记录的二进制代码位数")]),_._v(" "),v("p",[_._v("面密度：是位密度和道密度的乘积")]),_._v(" "),v("p",[_._v("注意：磁盘所有磁道记录的信息量一定是相等的，并不是圆越大信息越多，故每个磁道的位密度都不同。")])]),_._v(" "),v("li",[v("p",[_._v("平均存取时间")]),_._v(" "),v("p",[_._v("平均存取时间 = 寻道时间（磁头移动到目的磁道）+")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t旋转延迟时间（磁头定位到所在扇区）+")]),_._v(" "),v("p",[_._v("​\t\t\t\t\t\t\t传输时间（传输数据所花费的时间）")])]),_._v(" "),v("li",[v("p",[_._v("数据传输率")]),_._v(" "),v("p",[_._v("磁盘存储器在单位时间内向主机传送数据的字节数，称为数据传输率。")]),_._v(" "),v("p",[_._v("假设磁盘转数为r（转/秒），每条磁道容量为N个字节，则数据传输率为D"),v("sub",[_._v("r")]),_._v(" = rN")])])]),_._v(" "),v("h5",{attrs:{id:"磁盘地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘地址"}},[_._v("#")]),_._v(" 磁盘地址")]),_._v(" "),v("p",[_._v("主机向磁盘控制器发送寻址信息，磁盘的地址一般如图所示：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("驱动器号")]),_._v(" "),v("th",[_._v("柱面（磁道）号")]),_._v(" "),v("th",[_._v("盘面号")]),_._v(" "),v("th",[_._v("扇区号")])])]),_._v(" "),v("tbody")]),_._v(" "),v("p",[_._v("若系统中有4个驱动器，每个驱动器带一个磁盘，每个磁盘256个磁道、16个盘面，每个盘面划分为16个扇区，则每个扇区地址要18位二进制代码。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("驱动器号（2bit）")]),_._v(" "),v("th",[_._v("柱面（磁道）号（8bit）")]),_._v(" "),v("th",[_._v("盘面号（4bit）")]),_._v(" "),v("th",[_._v("扇区号（4bit）")])])]),_._v(" "),v("tbody")]),_._v(" "),v("h5",{attrs:{id:"硬盘的工作过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#硬盘的工作过程"}},[_._v("#")]),_._v(" 硬盘的工作过程")]),_._v(" "),v("p",[_._v("硬盘的主要操作是寻址、读盘、写盘。每个操作都对应一个控制字，硬盘工作时，第一步是取控制字，第二步是执行控制字。")]),_._v(" "),v("p",[_._v("硬盘属于机械式部件，其读写操作是串行的，不可能在同一时刻既读又写，也不可能在同一时刻读两组数据或写两组数据。")]),_._v(" "),v("h4",{attrs:{id:"磁盘阵列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘阵列"}},[_._v("#")]),_._v(" 磁盘阵列")]),_._v(" "),v("p",[_._v("RAID（廉价冗余磁盘阵列）是将多个独立的物理磁盘组成一个独立的逻辑盘，数据在多个物理盘上交叉存储、并行访问，具有更好的存储性能、可靠性和安全性。")]),_._v(" "),v("p",[_._v("RAID的分级如下所示。在RAID～RAID5的几种方案中，无论何时有磁盘损坏，都可以随时拔出受损的磁盘再插入好的磁盘，而数据不会损坏。")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("RAID0：无冗余和无校验码的磁盘阵列")]),_._v(" "),v("p",[_._v("RAID0把连续多个数据块交替的存放在不同物理磁盘的扇区中，几个磁盘交叉并行读写，不仅扩大了存储容量，而且提高了磁盘数据存取速度，单RAID0没有容错能力。")])]),_._v(" "),v("li",[v("p",[_._v("RAID1：镜像磁盘阵列")]),_._v(" "),v("p",[_._v("RAID1是为了提高可靠性，使两个磁盘同时进行读写，互为备份，如果一个磁盘出现故障，可从另一个磁盘中读出数据。两个磁盘当一个磁盘使用，意味着容量减少一半。")])]),_._v(" "),v("li",[v("p",[_._v("RAID2：采用纠错的海明码的磁盘阵列")])]),_._v(" "),v("li",[v("p",[_._v("RAID3：位交叉奇偶校验的磁盘阵列")])]),_._v(" "),v("li",[v("p",[_._v("RAID4：块交叉奇偶校验的磁盘阵列")])]),_._v(" "),v("li",[v("p",[_._v("RAID5：无独立校验的奇偶校验磁盘阵列")])])]),_._v(" "),v("p",[_._v("RAID通过同时使用多个磁盘，提高传输率；通过在多个磁盘上并行存取来大幅提高存储系统的存储数据吞吐量；通过镜像功能，可以提高安全可靠性；通过数据校验，可以提供容错能力。")]),_._v(" "),v("h4",{attrs:{id:"光盘存储器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#光盘存储器"}},[_._v("#")]),_._v(" 光盘存储器")]),_._v(" "),v("p",[_._v("光盘存储器是利用光学原理读/写信息的存储装置，它采用聚焦激光束对盘式介质以非接触的方式记录信息。")]),_._v(" "),v("p",[_._v("组成：")]),_._v(" "),v("ul",[v("li",[_._v("光盘片")]),_._v(" "),v("li",[_._v("光盘驱动器")]),_._v(" "),v("li",[_._v("光盘控制器")]),_._v(" "),v("li",[_._v("光盘驱动软件")])]),_._v(" "),v("p",[_._v("特点：")]),_._v(" "),v("ul",[v("li",[_._v("存储密度高")]),_._v(" "),v("li",[_._v("携带方便")]),_._v(" "),v("li",[_._v("成本低")]),_._v(" "),v("li",[_._v("容量大")]),_._v(" "),v("li",[_._v("存储期限长")]),_._v(" "),v("li",[_._v("容易保存")])]),_._v(" "),v("p",[_._v("光盘的类型如下：")]),_._v(" "),v("ul",[v("li",[_._v("CD-ROM：只读型光盘，只能读出其中内容，不能写入或修改。")]),_._v(" "),v("li",[_._v("CD-R：只可写入一次信息，之后不可修改。")]),_._v(" "),v("li",[_._v("CD-RW：可读可写光盘，可以重复读写。")]),_._v(" "),v("li",[_._v("DVD-ROM：容量高的CD-ROM，DVD表示通用数字化多功能光盘。")])]),_._v(" "),v("h4",{attrs:{id:"固态硬盘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#固态硬盘"}},[_._v("#")]),_._v(" 固态硬盘")]),_._v(" "),v("p",[_._v("在微小高档笔记本电脑中，采用高性能Flash Memory作为硬盘来记录数据，这种“硬盘”称固态硬盘。")]),_._v(" "),v("p",[_._v("固态硬盘除了需要Flash Memory外，还需要其他硬件和软件的支持。")]),_._v(" "),v("p",[_._v("注：闪存（Flash Memory）是在E2PROM的基础上发展起来的，本质是只读存储器。")]),_._v(" "),v("h3",{attrs:{id:"i-o接口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o接口"}},[_._v("#")]),_._v(" I/O接口")]),_._v(" "),v("h4",{attrs:{id:"i-o接口的功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o接口的功能"}},[_._v("#")]),_._v(" I/O接口的功能")]),_._v(" "),v("p",[_._v("I/O接口（I/O控制）是主机和外设之间的交接界面，通过接口可以实现主机和外设之间的信息交换。")]),_._v(" "),v("p",[_._v("接口的功能：")]),_._v(" "),v("ul",[v("li",[_._v("设备选址")]),_._v(" "),v("li",[_._v("传送命令")]),_._v(" "),v("li",[_._v("传送数据")]),_._v(" "),v("li",[_._v("反映I/O设备的工作状态")])]),_._v(" "),v("h4",{attrs:{id:"i-o接口的基本结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o接口的基本结构"}},[_._v("#")]),_._v(" I/O接口的基本结构")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("设备选择电路")])]),_._v(" "),v("li",[v("p",[_._v("命令寄存器和命令译码器")])]),_._v(" "),v("li",[v("p",[_._v("数据缓冲寄存器DBR")])]),_._v(" "),v("li",[v("p",[_._v("设备状态标记")]),_._v(" "),v("ul",[v("li",[_._v("完成触发器D")]),_._v(" "),v("li",[_._v("工作触发器B")]),_._v(" "),v("li",[_._v("中断请求触发器INTR")]),_._v(" "),v("li",[_._v("屏蔽触发器MASK")])])]),_._v(" "),v("li",[v("p",[_._v("控制逻辑电路")])]),_._v(" "),v("li",[v("p",[_._v("内部接口")]),_._v(" "),v("p",[_._v("内部接口与系统总线相连，实质上是与内存、CPU相连。数据的传输方式只能是并行传输。")])]),_._v(" "),v("li",[v("p",[_._v("外部接口")]),_._v(" "),v("p",[_._v("外部接口通过接口电缆与外设相连，外部接口的数据传输可能是串行方式，因此I/O接口需具有串/并转换功能")])])]),_._v(" "),v("p",[_._v("CPU同外设之间的信息传送实质是对接口中的某些寄存器（即端口）进行读或写。如传送数据是对数据端口DBR进行读写操作。以控制外设输入为例：")]),_._v(" "),v("ol",[v("li",[_._v("选择设备")]),_._v(" "),v("li",[_._v("判断是否此设备")]),_._v(" "),v("li",[_._v("反馈设备状态")]),_._v(" "),v("li",[_._v("若设备已就绪，发送控制命令")]),_._v(" "),v("li",[_._v("暂存命令并转换为外设的控制信号")]),_._v(" "),v("li",[_._v("向外设发送控制命令")]),_._v(" "),v("li",[_._v("输入数据")]),_._v(" "),v("li",[_._v("完成输入")]),_._v(" "),v("li",[_._v("反馈输入完成（中断请求）")]),_._v(" "),v("li",[_._v("中断响应")]),_._v(" "),v("li",[_._v("中断类型号")]),_._v(" "),v("li",[_._v("取走数据")])]),_._v(" "),v("h4",{attrs:{id:"i-o端口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o端口"}},[_._v("#")]),_._v(" I/O端口")]),_._v(" "),v("p",[_._v("I/O端口是指接口电路中可以被CPU直接访问的寄存器。")]),_._v(" "),v("ul",[v("li",[_._v("数据端口：读或写")]),_._v(" "),v("li",[_._v("控制端口：写")]),_._v(" "),v("li",[_._v("状态端口：读")])]),_._v(" "),v("h4",{attrs:{id:"i-o端口及其编址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o端口及其编址"}},[_._v("#")]),_._v(" I/O端口及其编址")]),_._v(" "),v("h5",{attrs:{id:"统一编址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#统一编址"}},[_._v("#")]),_._v(" 统一编址")]),_._v(" "),v("p",[_._v("把I/O端口当作存储器的单元进行地址分配，用统一的访存指令就可以访问I/O端口，又称存储器映射方式。")]),_._v(" "),v("p",[_._v("靠不同的地址码区分内存和I/O设备，I/O地址要求相对固定在地址的某部分。")]),_._v(" "),v("p",[_._v("如系统总线中地址线共10根，则可以访问的存储单元个数为2"),v("sub",[_._v("10")]),_._v("=1024个，假设要给10个I/O端口编址：")]),_._v(" "),v("ol",[v("li",[_._v("0～9表示I/O地址，10～1023为主存单元地址")]),_._v(" "),v("li",[_._v("0～1013表示主存单元地址，1014～1023为I/O地址")]),_._v(" "),v("li",[_._v("10～19表示I/O地址，0～9、20～1023为主存单元地址")])]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("p",[_._v("不需要专门的输入/输出指令，可使CPU访问I/O的操作更灵活、更方便，还可使端口有较大的编址空间。")]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("p",[_._v("端口占用了存储器地址，使内存容量变小，而且，利用存储器编址的I/O设备进行数据输入/输出操作，执行速度较慢。")]),_._v(" "),v("h5",{attrs:{id:"独立编址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#独立编址"}},[_._v("#")]),_._v(" 独立编址")]),_._v(" "),v("p",[_._v("I/O端口地址与存储器地址无关，独立编址CPU需要设置专门的输入/输出指令访问端口，又称I/O映射方式。")]),_._v(" "),v("p",[_._v("靠不同的指令区分内存和I/O设备。")]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("p",[_._v("输入/输出指令与存储器指令有明显区别，程序编址清晰，便于理解。")]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("p",[_._v("输入/输出指令少，一般只能对端口进行传送操作，尤其需要CPU提供存储器读/写、I/O设备读/写两组控制信号，增加了控制的复杂性。")]),_._v(" "),v("h4",{attrs:{id:"i-o接口的类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#i-o接口的类型"}},[_._v("#")]),_._v(" I/O接口的类型")]),_._v(" "),v("h5",{attrs:{id:"按数据传送方式可分为"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按数据传送方式可分为"}},[_._v("#")]),_._v(" 按数据传送方式可分为")]),_._v(" "),v("p",[_._v("并行接口：一个字节或一个字所有位同时传送。")]),_._v(" "),v("p",[_._v("串行接口：一位一位的传送。")]),_._v(" "),v("p",[_._v("注：这里说的数据传送方式指的是外设和接口一侧的传送方式，二在主机和接口一侧，数据总是并行传送的。接口要完成数据格式转换。")]),_._v(" "),v("h5",{attrs:{id:"按主机访问i-o设备的控制方式可分为"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按主机访问i-o设备的控制方式可分为"}},[_._v("#")]),_._v(" 按主机访问I/O设备的控制方式可分为")]),_._v(" "),v("p",[_._v("程序查询接口")]),_._v(" "),v("p",[_._v("中断接口")]),_._v(" "),v("p",[_._v("DMA接口")]),_._v(" "),v("h5",{attrs:{id:"按功能选择的灵活性可分为"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#按功能选择的灵活性可分为"}},[_._v("#")]),_._v(" 按功能选择的灵活性可分为")]),_._v(" "),v("p",[_._v("可编程接口")]),_._v(" "),v("p",[_._v("不可编程接口")]),_._v(" "),v("h3",{attrs:{id:"程序查询方式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#程序查询方式-2"}},[_._v("#")]),_._v(" 程序查询方式")]),_._v(" "),v("h4",{attrs:{id:"执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行流程"}},[_._v("#")]),_._v(" 执行流程")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("预制传送参数")]),_._v(" "),v("p",[_._v("CPU执行初始化程序，并预置传送参数--设置计数器、设置数据首地址")])]),_._v(" "),v("li",[v("p",[_._v("启动外设")]),_._v(" "),v("p",[_._v("向I/O接口发送命令字段，启动I/O设备")])]),_._v(" "),v("li",[v("p",[_._v("取外设状态")]),_._v(" "),v("p",[_._v("CPU从接口读取设备状态信息")])]),_._v(" "),v("li",[v("p",[_._v("外设准备就绪？")]),_._v(" "),v("p",[_._v("CPU不断查询I/O设备状态，直到外设准备就绪")]),_._v(" "),v("p",[_._v("CPU一旦启动I/O，必须停止现行程序的运行，并在现行程序中插入一段程序。")]),_._v(" "),v("p",[_._v("主要特点：CPU有“踏步”等待现象，CPU与I/O串行工作。")]),_._v(" "),v("p",[_._v("Y：执行步骤5")]),_._v(" "),v("p",[_._v("N：执行步骤3")])]),_._v(" "),v("li",[v("p",[_._v("传送一次数据")]),_._v(" "),v("p",[_._v("一般为一个字")])]),_._v(" "),v("li",[v("p",[_._v("修改传送参数")]),_._v(" "),v("p",[_._v("修改地址和计数器参数")])]),_._v(" "),v("li",[v("p",[_._v("传送完成？")]),_._v(" "),v("p",[_._v("判断传送是否结束（一般计数器为0时结束）")]),_._v(" "),v("p",[_._v("Y：结束")]),_._v(" "),v("p",[_._v("N：执行步骤3")])])]),_._v(" "),v("p",[_._v("优点：接口设计简单、设备量少")]),_._v(" "),v("p",[_._v("缺点：CPU在信息传送过程中要花费很多时间用于查询和等待，而且在一段时间内只能和一台外设交换信息，效率大大降低。")]),_._v(" "),v("h4",{attrs:{id:"接口结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口结构"}},[_._v("#")]),_._v(" 接口结构")]),_._v(" "),v("ul",[v("li",[_._v("设备选择电路")]),_._v(" "),v("li",[_._v("数据缓冲寄存器DBR")]),_._v(" "),v("li",[_._v("设备状态寄存器")])]),_._v(" "),v("h4",{attrs:{id:"例题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#例题"}},[_._v("#")]),_._v(" 例题")]),_._v(" "),v("p",[_._v("在程序查询方式的输入/输出系统中，假设不考虑处理时间，每一个查询操作需要100个时钟周期，CPU的时钟频率为50MHz。现有鼠标和硬盘两个设备，而且CPU必须每秒对鼠标进行30次查询，硬盘以32位字长为单位传输数据，即每32位被CPU查询一次，传输率为2x2"),v("sub",[_._v("20")]),_._v("B/s。求CPU对这两个设备查询所花费的时间比率，由此可得出什么结论？")]),_._v(" "),v("p",[_._v("时间的角度：")]),_._v(" "),v("p",[_._v("一个周期为：1/50MHz = 20ns")]),_._v(" "),v("p",[_._v("一个查询操作耗时：100x20ns = 2000ns")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("鼠标")]),_._v(" "),v("p",[_._v("每秒查询鼠标耗时：30x2000ns = 60000ns")]),_._v(" "),v("p",[_._v("查询鼠标所花费的时间比率：60000ns/1s = 0.00%")]),_._v(" "),v("p",[_._v("对鼠标的查询基本不影响CPU的性能")])]),_._v(" "),v("li",[v("p",[_._v("硬盘")]),_._v(" "),v("p",[_._v("每32位需要查询一次，每秒传送：2x2"),v("sup",[_._v("20")]),_._v("B")]),_._v(" "),v("p",[_._v("每秒需要查询：(2x2"),v("sup",[_._v("20")]),_._v("B)/32 = 2"),v("sup",[_._v("19")]),_._v("次")]),_._v(" "),v("p",[_._v("查询硬盘耗时：2"),v("sup",[_._v("19")]),_._v("x2000ns = 512x1024x2000ns ≈ 1.05 x 10"),v("sup",[_._v("9")]),_._v("ns")]),_._v(" "),v("p",[_._v("查询硬盘所花费的时间比率：1.05 x 10"),v("sup",[_._v("9")]),_._v("ns / 1s = 105%")]),_._v(" "),v("p",[_._v("CPU将全部时间都用于对硬盘的查询也不能满足磁盘传输的要求。")])])]),_._v(" "),v("p",[_._v("频率的角度：")]),_._v(" "),v("p",[_._v("CPU的时钟频率为50MHz，即每秒50x10"),v("sup",[_._v("6")]),_._v("个时钟周期")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("鼠标")]),_._v(" "),v("p",[_._v("每秒查询鼠标占用的时钟周期：30x100 = 3000")]),_._v(" "),v("p",[_._v("查询鼠标所花费的时间比率：3000/(50x10"),v("sup",[_._v("6")]),_._v(") = 0.00%")]),_._v(" "),v("p",[_._v("对鼠标的查询基本不影响CPU的性能")])]),_._v(" "),v("li",[v("p",[_._v("硬盘")]),_._v(" "),v("p",[_._v("每秒需要查询：(2x2"),v("sup",[_._v("20")]),_._v("B)/32 = 2"),v("sup",[_._v("19")]),_._v("次")]),_._v(" "),v("p",[_._v("每秒查询硬盘占用的时钟周期数：2"),v("sup",[_._v("19")]),_._v("x100 ≈ 5.24x10"),v("sup",[_._v("7")])]),_._v(" "),v("p",[_._v("查询硬盘所花费的时间比率：(5.24x10"),v("sup",[_._v("7")]),_._v(")/(5x10"),v("sup",[_._v("6")]),_._v(") ≈ 105%")]),_._v(" "),v("p",[_._v("CPU将全部时间都用于对硬盘的查询也不能满足磁盘传输的要求。")])])]),_._v(" "),v("h3",{attrs:{id:"程序中断方式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#程序中断方式-2"}},[_._v("#")]),_._v(" 程序中断方式")]),_._v(" "),v("h4",{attrs:{id:"中断的基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断的基本概念"}},[_._v("#")]),_._v(" 中断的基本概念")]),_._v(" "),v("p",[_._v("程序中断是指计算机执行现行程序的过程中，出现某些急需处理的异常情况或特殊请求，CPU暂时中止现行程序，而转去对这些异常情况或特殊请求进行处理，在处理完毕后CPU又自动返回到现行程序的断点处，继续执行原程序。")]),_._v(" "),v("p",[_._v("工作流程：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("中断请求")]),_._v(" "),v("p",[_._v("中断源向CPU发送中断请求信号")])]),_._v(" "),v("li",[v("p",[_._v("中断响应")]),_._v(" "),v("p",[_._v("响应中断的条件")]),_._v(" "),v("p",[_._v("中断判优：多个中断源同时提出请求时通过中断判优逻辑响应一个中断源。")])]),_._v(" "),v("li",[v("p",[_._v("中断处理")]),_._v(" "),v("p",[_._v("中断隐指令")]),_._v(" "),v("p",[_._v("中断服务程序")])])]),_._v(" "),v("h4",{attrs:{id:"中断请求的分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断请求的分类"}},[_._v("#")]),_._v(" 中断请求的分类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("内中断（内部异常）")]),_._v(" "),v("p",[_._v("信号来源自CPU内部")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("陷阱、陷入（trp）")]),_._v(" "),v("p",[_._v("有意为之的异常，如系统调用")])]),_._v(" "),v("li",[v("p",[_._v("故障（fault）")]),_._v(" "),v("p",[_._v("由错误条件引起的，可能被故障处理程序修复，如缺页")])]),_._v(" "),v("li",[v("p",[_._v("终止（abort）")]),_._v(" "),v("p",[_._v("不可恢复的致命错误造成的结果，终止处理程序不再将控制返回给引发终止的应用程序，如整数除0")])])])]),_._v(" "),v("li",[v("p",[_._v("外中断")]),_._v(" "),v("p",[_._v("信号来源自CPU外部")]),_._v(" "),v("ul",[v("li",[_._v("I/O中断请求")]),_._v(" "),v("li",[_._v("人工干预")])])])]),_._v(" "),v("h4",{attrs:{id:"中断请求标记"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断请求标记"}},[_._v("#")]),_._v(" 中断请求标记")]),_._v(" "),v("p",[_._v("每个中断向CPU发出中断请求的时间是随机的。")]),_._v(" "),v("p",[_._v("为了记录中断事件并区分不同的中断源，中断系统需对每个中断源设置中断请求标记触发器INTR，当其状态为“1”时，表示中断源有请求。")]),_._v(" "),v("p",[_._v("这些触发器可组成中断请求标记寄存器，该寄存器可集中在CPU中，也可分散在各个中断源中。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("INTR"),v("sub",[_._v("1")])]),_._v(" "),v("th",[_._v("INTR"),v("sub",[_._v("2")])]),_._v(" "),v("th",[_._v("INTR"),v("sub",[_._v("3")])]),_._v(" "),v("th",[_._v("INTR"),v("sub",[_._v("4")])]),_._v(" "),v("th",[_._v("...")]),_._v(" "),v("th",[_._v("INTR"),v("sub",[_._v("n-1")])]),_._v(" "),v("th",[_._v("INTR"),v("sub",[_._v("n")])])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("...")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td",[_._v("掉电")]),_._v(" "),v("td",[_._v("过热")]),_._v(" "),v("td",[_._v("阶上溢")]),_._v(" "),v("td",[_._v("非法除法")]),_._v(" "),v("td",[_._v("...")]),_._v(" "),v("td",[_._v("光电输入机")]),_._v(" "),v("td",[_._v("打印机输出机")])])])]),_._v(" "),v("p",[_._v("对于外中断，CPU是在统一的时刻即每条指令执行阶段结束前向接口发出中断查询信息，以获取I/O的中断请求，也就是说，CPU响应中断的时间是在每条指令执行阶段的结束时刻。")]),_._v(" "),v("p",[_._v("对于执行时间很长的指令，可以在执行过程中设置若干个“查询断点”。")]),_._v(" "),v("p",[_._v("CPU响应中断必须满足以下3个条件：")]),_._v(" "),v("ul",[v("li",[_._v("中断源有中断请求")]),_._v(" "),v("li",[_._v("CPU允许中断即开中断")]),_._v(" "),v("li",[_._v("一条指令执行完毕，且没有更紧迫的任务")])]),_._v(" "),v("h4",{attrs:{id:"中断判优-实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断判优-实现"}},[_._v("#")]),_._v(" 中断判优-实现")]),_._v(" "),v("p",[_._v("中断判优既可以用硬件实现，也可以用软件实现。")]),_._v(" "),v("p",[_._v("硬件实现是通过硬件排队器实现的，它既可以设置在CPU中，也可以分散在各个中断源中。")]),_._v(" "),v("p",[_._v("软件实现是通过查询程序实现的。")]),_._v(" "),v("h4",{attrs:{id:"中断判优-优先级设置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断判优-优先级设置"}},[_._v("#")]),_._v(" 中断判优-优先级设置")]),_._v(" "),v("ol",[v("li",[_._v("硬件故障中断属于最高级，其次是软件中断")]),_._v(" "),v("li",[_._v("非屏蔽中断优于可屏蔽中断")]),_._v(" "),v("li",[_._v("DMA请求优于I/O设备传送的中断请求")]),_._v(" "),v("li",[_._v("高速设备优于低速设备")]),_._v(" "),v("li",[_._v("输入设备优于输出设备")]),_._v(" "),v("li",[_._v("实时设备优于普通设备")])]),_._v(" "),v("h4",{attrs:{id:"中断处理过程-硬件向量法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断处理过程-硬件向量法"}},[_._v("#")]),_._v(" 中断处理过程-硬件向量法")]),_._v(" "),v("p",[_._v("由硬件产生向量地址，再由向量地址找到入口地址。")]),_._v(" "),v("p",[_._v("中断隐指令的主要任务：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("关中断")]),_._v(" "),v("p",[_._v("在中断服务器程序中，为了保护中断现场（即CPU主要寄存器中的内容）期间不被新的中断所打断，必须关中断，从而保证被中断的程序在中断服务程序执行完毕之后能接着正确的执行下去。")])]),_._v(" "),v("li",[v("p",[_._v("保存断点")]),_._v(" "),v("p",[_._v("为了保证在中断服务程序执行完毕就能正确的返回到原来的程序，必须将原来程序的断点（即程序计数器（PC）的内容）保存起来。可以存入堆栈，也可以存入指定单元。")])]),_._v(" "),v("li",[v("p",[_._v("引出中断服务程序")]),_._v(" "),v("p",[_._v("引出中断服务程序的实质就是取出中断服务程序的入口地址并传送给程序计数器（PC）。")])])]),_._v(" "),v("h4",{attrs:{id:"中断处理过程-中断服务程序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断处理过程-中断服务程序"}},[_._v("#")]),_._v(" 中断处理过程-中断服务程序")]),_._v(" "),v("p",[_._v("中断服务程序的主要任务：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("保护现场")]),_._v(" "),v("ol",[v("li",[_._v("保护程序断点（PC），已由中断隐指令完成；")]),_._v(" "),v("li",[_._v("保存通用寄存器和状态寄存器的内容，由中断服务程序完成。")])]),_._v(" "),v("p",[_._v("可以使用堆栈，也可以使用特定存储单元")])]),_._v(" "),v("li",[v("p",[_._v("中断服务（设备服务）")]),_._v(" "),v("p",[_._v("主体部分，如通过程序控制需打印的字符代码送入打印机的缓冲存储器中。")])]),_._v(" "),v("li",[v("p",[_._v("恢复现场")]),_._v(" "),v("p",[_._v("通过出栈指令或取数据指令把之前保存的信息送回寄存器中")])]),_._v(" "),v("li",[v("p",[_._v("中断返回")]),_._v(" "),v("p",[_._v("通过中断返回指令回到原程序断点处。")])])]),_._v(" "),v("h4",{attrs:{id:"单重中断与多重中断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#单重中断与多重中断"}},[_._v("#")]),_._v(" 单重中断与多重中断")]),_._v(" "),v("p",[_._v("单重中断：执行中断程序服务时不响应新的中断请求")]),_._v(" "),v("p",[_._v("多重中断：又称中断嵌套，执行中断服务程序时可响应新的中断请求")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th"),_._v(" "),v("th",[_._v("单重中断")]),_._v(" "),v("th",[_._v("多重中断")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("中断隐指令")]),_._v(" "),v("td",[_._v("关中断")]),_._v(" "),v("td",[_._v("关中断")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("保存断点（PC）")]),_._v(" "),v("td",[_._v("保存断点（PC）")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("送中断向量")]),_._v(" "),v("td",[_._v("送中断向量")])]),_._v(" "),v("tr",[v("td",[_._v("中断服务程序")]),_._v(" "),v("td",[_._v("保护现场")]),_._v(" "),v("td",[_._v("保护现场和屏蔽字")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("-")]),_._v(" "),v("td",[_._v("开中断")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("执行中断服务程序")]),_._v(" "),v("td",[_._v("执行中断服务程序")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("-")]),_._v(" "),v("td",[_._v("关中断")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("恢复现场")]),_._v(" "),v("td",[_._v("恢复现场和屏蔽字")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("开中断")]),_._v(" "),v("td",[_._v("开中断")])]),_._v(" "),v("tr",[v("td"),_._v(" "),v("td",[_._v("中断返回")]),_._v(" "),v("td",[_._v("中断返回")])])])]),_._v(" "),v("h4",{attrs:{id:"中断屏蔽技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断屏蔽技术"}},[_._v("#")]),_._v(" 中断屏蔽技术")]),_._v(" "),v("p",[_._v("中断屏蔽技术主要用于多重中断，CPU要具备多重中断的功能，需满足以下条件。")]),_._v(" "),v("ol",[v("li",[_._v("在中断服务程序中提前设置开中断指令")]),_._v(" "),v("li",[_._v("优先级别高的中断源有权中断优先级别低的中断源")])]),_._v(" "),v("p",[_._v("每个中断源都有一个屏蔽触发器，1表示屏蔽该中断源的请求，0表示可以正常申请，所有屏蔽触发器组合在一起，便构成一个屏蔽字寄存器，屏蔽字寄存器的内容称为屏蔽字。")]),_._v(" "),v("p",[_._v("屏蔽字设置的规律：")]),_._v(" "),v("ol",[v("li",[_._v("一般用“1”表示屏蔽，“0”表示正常申请。")]),_._v(" "),v("li",[_._v("每个中断源对应一个屏蔽字（在处理该中断源的中断服务程序时，屏蔽寄存器中的内容为该中断源对应的屏蔽字）。")]),_._v(" "),v("li",[_._v("屏蔽字中“1”越多，优先级越高。每个屏蔽字中至少有一个“1”（至少要能屏蔽自身的中断）。")])]),_._v(" "),v("p",[_._v("例题：设某机中4个中断源A、B、C、D，其硬件排队优先次序为A>B>C>D，现要求将中断处理次序改为D>A>C>B。")]),_._v(" "),v("ol",[v("li",[_._v("写出每个中断源对应的屏蔽字。")]),_._v(" "),v("li",[_._v("按下图所示的时间轴给出的4个中断源的请求时刻，画出CPU执行程序的轨迹。设每个中断源的中断服务程序时间均为20us。")])]),_._v(" "),v("p",[_._v("解答：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("屏蔽字设计")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("中断源")]),_._v(" "),v("th",[_._v("A")]),_._v(" "),v("th",[_._v("B")]),_._v(" "),v("th",[_._v("C")]),_._v(" "),v("th",[_._v("D")]),_._v(" "),v("th",[_._v("屏蔽字")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("A")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1110")])]),_._v(" "),v("tr",[v("td",[_._v("B")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0100")])]),_._v(" "),v("tr",[v("td",[_._v("C")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0110")])]),_._v(" "),v("tr",[v("td",[_._v("D")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1111")])])])])]),_._v(" "),v("li",[v("p",[_._v("略")])])]),_._v(" "),v("h3",{attrs:{id:"dma方式-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dma方式-2"}},[_._v("#")]),_._v(" DMA方式")]),_._v(" "),v("p",[_._v("在程序中断方式中每准备好一个数据都要中断CPU，由CPU运行中断服务程序来完成一次传送，磁盘机、磁带机等高速设备需要大批量的数据传送，这会导致CPU大量时间用于中断服务，由此产生由硬件实现控制大批量的数据传送，DMA控制器。")]),_._v(" "),v("p",[_._v("在DMA方式中，当I/O设备需要进行数据传送时，通过DMA控制器（DMA接口）向CPU提出DMA传送请求，CPU响应之后将让出系统总线，由DMA控制器接管总线进行数据传送。其主要功能有：")]),_._v(" "),v("ol",[v("li",[_._v("接受外设发出的DMA请求，并向CPU发出总线请求")]),_._v(" "),v("li",[_._v("CPU响应此总线请求，发出总线响应信号，接管总线控制权，进入DMA操作周期")]),_._v(" "),v("li",[_._v("确定传送数据的主存单元地址及长度，并能自动修改主存地址计数和传送长度计数")]),_._v(" "),v("li",[_._v("规定数据在主存和外设间的传送方向，发出读写等控制信号，执行数据传送操作")]),_._v(" "),v("li",[_._v("向CPU报告DMA操作的结束")])]),_._v(" "),v("h4",{attrs:{id:"dma控制器的结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dma控制器的结构"}},[_._v("#")]),_._v(" DMA控制器的结构")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("控制/状态逻辑")]),_._v(" "),v("p",[_._v("由控制和时序电路及状态标志组成，用于指定传送方向，修改传送参数，并对DMA请求信号和CPU响应信号进行协调和同步")])]),_._v(" "),v("li",[v("p",[_._v("DMA请求触发器")]),_._v(" "),v("p",[_._v("每当I/O设备准备好数据后给出一个控制信号，使DMA请求触发器置位")])]),_._v(" "),v("li",[v("p",[_._v("数据缓冲寄存器")]),_._v(" "),v("p",[_._v("用于暂存每次传送的数据")])]),_._v(" "),v("li",[v("p",[_._v("主存地址计数器")]),_._v(" "),v("p",[_._v("简称AR，存放要交换数据的主存地址")])]),_._v(" "),v("li",[v("p",[_._v("传送长度计数器")]),_._v(" "),v("p",[_._v("简称WC，用来记录传送数据的长度，技术溢出时，数据即传送完毕，自动发中断请求信号。")])]),_._v(" "),v("li",[v("p",[_._v("中断机构")]),_._v(" "),v("p",[_._v("当一个数据块传送完毕后触发中断机构，向CPU提出中断请求")])])]),_._v(" "),v("p",[_._v("注：在DMA传送过程中，DMA控制器将接管CPU地址总线、数据总线和控制总线，CPU的主存控制信号被禁止使用。而当DMA传送结束后，将恢复CPU的一切权利并开始执行其操作。")]),_._v(" "),v("h4",{attrs:{id:"dma传送过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dma传送过程"}},[_._v("#")]),_._v(" DMA传送过程")]),_._v(" "),v("p",[_._v("CPU：")]),_._v(" "),v("ul",[v("li",[_._v("预处理\n"),v("ul",[v("li",[_._v("主存起始地址 → AR")]),_._v(" "),v("li",[_._v("I/O设备地址 → DAR")]),_._v(" "),v("li",[_._v("传送数据个数 → WC")]),_._v(" "),v("li",[_._v("启动I/O设备")])])]),_._v(" "),v("li",[_._v("数据传送\n"),v("ul",[v("li",[_._v("继续执行主程序")]),_._v(" "),v("li",[_._v("同时完成一批数据的传送")])])]),_._v(" "),v("li",[_._v("后处理\n"),v("ul",[v("li",[_._v("中断服务程序")]),_._v(" "),v("li",[_._v("做DMA结束处理")])])]),_._v(" "),v("li",[_._v("继续执行主程序")])]),_._v(" "),v("p",[_._v("数据传送阶段的细化：")]),_._v(" "),v("p",[_._v("DMA请求")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("允许传送？")]),_._v(" "),v("p",[_._v("N：执行步骤1")]),_._v(" "),v("p",[_._v("Y：执行步骤2")])]),_._v(" "),v("li",[v("p",[_._v("主存起始地址送到总线，数据送到I/O设备（或主存），修改主存地址，修改字计数器")])]),_._v(" "),v("li",[v("p",[_._v("数据块传送结束？")]),_._v(" "),v("p",[_._v("N：执行步骤1")]),_._v(" "),v("p",[_._v("Y：执行步骤4")])]),_._v(" "),v("li",[v("p",[_._v("向CPU申请程序中断")])])]),_._v(" "),v("h4",{attrs:{id:"dma传送方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dma传送方式"}},[_._v("#")]),_._v(" DMA传送方式")]),_._v(" "),v("p",[_._v("主存和DMA控制器之间有一条数据通路，因此主存和I/O之间交换信息时，不通过CPU。但当I/O设备和CPU同时访问主存时，可能冲突，为了有效使用主存，DMA控制器与CPU通常采用以下3种方法使用主存。")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("停止CPU访问主存")]),_._v(" "),v("p",[_._v("优点：控制简单")]),_._v(" "),v("p",[_._v("缺点：CPU处于不工作状态或保持状态，未充分发挥CPU对主存的利用率")])]),_._v(" "),v("li",[v("p",[_._v("DMA与CPU交替访存")]),_._v(" "),v("p",[_._v("优点：不需要总线使用权的申请、建立和归还过程")]),_._v(" "),v("p",[_._v("缺点：硬件逻辑更为复杂")])]),_._v(" "),v("li",[v("p",[_._v("周期挪用（周期窃取）")]),_._v(" "),v("p",[_._v("DMA访问主存有三种可能：")]),_._v(" "),v("ul",[v("li",[_._v("CPU此时不妨存（不冲突）")]),_._v(" "),v("li",[_._v("CPU此时正在访存（存取周期结束让出总线）")]),_._v(" "),v("li",[_._v("CPU与DMA同时请求访存（I/O访存优先）")])])])]),_._v(" "),v("h4",{attrs:{id:"dma方式的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dma方式的特点"}},[_._v("#")]),_._v(" DMA方式的特点")]),_._v(" "),v("p",[_._v("主存和DMA接口之间有一条数据通路。")]),_._v(" "),v("p",[_._v("由于DMA方式传送数据不需要经过CPU，因此不必中断现行程序，I/O与主机并行工作，程序和传送并行工作。")]),_._v(" "),v("p",[_._v("DMA方式具有下列特点：")]),_._v(" "),v("ul",[v("li",[_._v("它使主存与CPU的固定联系脱钩，主存既可被CPU访问，又可被外设发访问")]),_._v(" "),v("li",[_._v("在数据块传送时，主存地址的确定、传送数据的计数等都由硬件电路直接实现")]),_._v(" "),v("li",[_._v("主存中要开辟专用缓冲区，及时供给和接收外设的数据")]),_._v(" "),v("li",[_._v("DMA传送速度快，CPU和外设并行工作，提高了系统效率")]),_._v(" "),v("li",[_._v("DMA在传送开始前要通过程序进行预处理，结束后要通过中断方式进行后处理")])]),_._v(" "),v("h4",{attrs:{id:"dma方式与中断方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dma方式与中断方式"}},[_._v("#")]),_._v(" DMA方式与中断方式")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th"),_._v(" "),v("th",[_._v("中断")]),_._v(" "),v("th",[_._v("DMA")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("数据传送")]),_._v(" "),v("td",[_._v("程序控制，程序的切换 → 保存和恢复现场")]),_._v(" "),v("td",[_._v("硬件控制，CPU只需进行预处理和后处理")])]),_._v(" "),v("tr",[v("td",[_._v("中断请求")]),_._v(" "),v("td",[_._v("传送数据")]),_._v(" "),v("td",[_._v("后处理")])]),_._v(" "),v("tr",[v("td",[_._v("响应")]),_._v(" "),v("td",[_._v("指令执行周期结束后响应中断")]),_._v(" "),v("td",[_._v("每个机器周期结束后均可，总线空闲时即可响应DMA请求")])]),_._v(" "),v("tr",[v("td",[_._v("场景")]),_._v(" "),v("td",[_._v("CPU控制，低速设备")]),_._v(" "),v("td",[_._v("DMA控制器控制，高速设备")])]),_._v(" "),v("tr",[v("td",[_._v("优先级")]),_._v(" "),v("td",[_._v("优先级低于DMA")]),_._v(" "),v("td",[_._v("优先级高于中断")])]),_._v(" "),v("tr",[v("td",[_._v("异常处理")]),_._v(" "),v("td",[_._v("能处理异常事件")]),_._v(" "),v("td",[_._v("仅传送数据")])])])]),_._v(" "),v("h4",{attrs:{id:"cpu占用情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu占用情况"}},[_._v("#")]),_._v(" CPU占用情况")]),_._v(" "),v("p",[_._v("某计算机的CPU主频为500MHz，CPI为5（即执行每条指令平均需要5个时钟周期）。假定某外设的数据传输率为0.5MB/s，采用中断方式与主机进行数据传送，以32位为传输单位，对应中断服务程序包含18条指令，中断服务外的其他开销相当于2条指令的执行时间。请回答下列问题，要求给出计算过程。")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("在中断方式下，CPU用于该外设I/O的时间占整个CPU时间的百分比是多少？")]),_._v(" "),v("p",[_._v("每传送一次数据，占用CPU的时间为：(18+2)x5 = 100个时钟周期")]),_._v(" "),v("p",[_._v("外设准备32位的数据需要的时间为：32bit ÷ 0.5MB/s = 8 x 10"),v("sup",[_._v("-6")]),_._v("s")]),_._v(" "),v("p",[_._v("每秒可准备的数据个数为：1s ÷ 8 x 10"),v("sup",[_._v("-6")]),_._v("s = 125000个")]),_._v(" "),v("p",[_._v("即每秒需中断的次数为125000次")]),_._v(" "),v("p",[_._v("则1s内用于处理中断的时钟周期数（开销）为：125000 x 100 = 12.5M个")]),_._v(" "),v("p",[_._v("故CPU用于外设I/O的时间占整个CPU时间的百分比为：12.5M ÷ 500M = 2.5%")]),_._v(" "),v("p",[_._v("若外设速度达到5MB/s，则故CPU用于外设I/O的时间占整个CPU时间的百分比为：25%")])]),_._v(" "),v("li",[v("p",[_._v("当该外设的数据传输率达到5MB/s时，改用DMA方式传输数据。假定每次DMA传送块大小为5000B，且DMA预处理和后处理的总开销为500个时钟周期，则CPU用于该外设I/O的时间都百分比是多少？（假设DMA与CPU之间没有访存冲突）")]),_._v(" "),v("p",[_._v("当外设数据传输率提高到5MB/s时改用DMA方式传送，每次DMA传送一个数据块，大小为5000B，则1s内需产生的DMA次数为：5MB ÷ 5000B = 1000次")]),_._v(" "),v("p",[_._v("CPU用于DMA处理的总开销为1000 x 500 = 0.5M个时钟周期")]),_._v(" "),v("p",[_._v("CPU用于外设I/O的时间占整个CPU时间的百分比为：0.5M ÷ 500M = 0.1%")])])])])}),[],!1,null,null,null);v.default=s.exports}}]);